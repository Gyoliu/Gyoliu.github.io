<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>follow</title>
      <link href="/2024/12/26/follow/"/>
      <url>/2024/12/26/follow/</url>
      
        <content type="html"><![CDATA[<blockquote><p>This message is used to verify that this feed (feedId:94993712362846208) belongs to me (userId:569moaUVDrYGrgssS2Lwv). Join me in enjoying the next generation information browser <a href="https://follow.is/">https://follow.is</a>.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Default </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cosy入门</title>
      <link href="/2024/12/24/Cosy%E5%85%A5%E9%97%A8/"/>
      <url>/2024/12/24/Cosy%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="纯粹的折腾-💡"><a href="#纯粹的折腾-💡" class="headerlink" title="纯粹的折腾 💡"></a>纯粹的折腾 💡</h3><p><a href="https://hexo.maxshader.com/posts/59577/">Cosy 主题入门配置💡</a></p><blockquote><p>以这个开源 Theme 为基础增加了以下</p></blockquote><h3 id="增加-footer-配置-🦢"><a href="#增加-footer-配置-🦢" class="headerlink" title="增加 footer 配置 🦢"></a>增加 footer 配置 🦢</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Footer info</span><span class="token key atrule">footer</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">since</span><span class="token punctuation">:</span> <span class="token number">2024</span>    <span class="token comment"># Customize the server domain name ICP</span>    <span class="token key atrule">ICP</span><span class="token punctuation">:</span>        <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">code</span><span class="token punctuation">:</span> <span class="token string">"粤ICP备18155512号-1"</span>        <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">"https://beian.miit.gov.cn/"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="增加中间动态欢迎语-👋"><a href="#增加中间动态欢迎语-👋" class="headerlink" title="增加中间动态欢迎语 👋"></a>增加中间动态欢迎语 👋</h3><p><a href="https://gyoliu.github.io/" title="效果博客👋">效果博客</a><br><img src="/img/home.png"></p><h3 id="INFO-Error-has-occurred-during-indexing-posts-object-Object"><a href="#INFO-Error-has-occurred-during-indexing-posts-object-Object" class="headerlink" title="INFO  Error has occurred during indexing posts : [object Object]"></a>INFO  Error has occurred during indexing posts : [object Object]</h3><p><a href="https://yfzhu.cn/posts/1011/">解决方案</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#algolia Configuration</span><span class="token key atrule">algolia</span><span class="token punctuation">:</span>  <span class="token punctuation">...</span><span class="token punctuation">...</span>  <span class="token key atrule">chunkSize</span><span class="token punctuation">:</span> <span class="token number">5000</span>  <span class="token punctuation">...</span><span class="token punctuation">...</span>  <span class="token key atrule">fields</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> content<span class="token punctuation">:</span>strip<span class="token punctuation">:</span>truncate<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cosy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/12/20/hello-world/"/>
      <url>/2024/12/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx 正向代理配置 https 支持</title>
      <link href="/2024/08/29/nginx-proxy/"/>
      <url>/2024/08/29/nginx-proxy/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx-正向代理配置-https-支持"><a href="#nginx-正向代理配置-https-支持" class="headerlink" title="nginx 正向代理配置 https 支持"></a>nginx 正向代理配置 https 支持</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> -- 遇到很多需要的包安装下来就好yum <span class="token parameter variable">-y</span> <span class="token function">install</span> perl perl-ExtUtils-Embed gperftools geoip-devel<span class="token function">wget</span> https://github.com/chobits/ngx_http_proxy_connect_module/archive/refs/heads/master.zip<span class="token function">unzip</span> master.zip<span class="token function">wget</span> https://nginx.org/download/nginx-1.20.2.tar.gz<span class="token function">tar</span> xzvf nginx-1.20.2.tar.gz<span class="token builtin class-name">cd</span> nginx-1.20.2patch <span class="token parameter variable">-p1</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/ngx_http_proxy_connect_module_master/patch/proxy_connect_rewrite_1018.patch./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/share/nginx --sbin-path<span class="token operator">=</span>/usr/sbin/nginx --modules-path<span class="token operator">=</span>/usr/lib64/nginx/modules --conf-path<span class="token operator">=</span>/etc/nginx/nginx.conf --error-log-path<span class="token operator">=</span>/var/log/nginx/error.log --http-log-path<span class="token operator">=</span>/var/log/nginx/access.log --http-client-body-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/client_body --http-proxy-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/scgi --pid-path<span class="token operator">=</span>/run/nginx.pid --lock-path<span class="token operator">=</span>/run/lock/subsys/nginx <span class="token parameter variable">--user</span><span class="token operator">=</span>nginx <span class="token parameter variable">--group</span><span class="token operator">=</span>nginx --with-compat --with-debug --with-file-aio --with-google_perftools_module --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module<span class="token operator">=</span>dynamic --with-http_mp4_module --with-http_perl_module<span class="token operator">=</span>dynamic --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --add-module<span class="token operator">=</span><span class="token punctuation">..</span>/ngx_http_proxy_connect_module-master --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_xslt_module<span class="token operator">=</span>dynamic --with-mail<span class="token operator">=</span>dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream<span class="token operator">=</span>dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>systemctl restart nginx-- 测试代理<span class="token function">curl</span> <span class="token parameter variable">-x</span> <span class="token number">117.72</span>.44.94:81 https://www.qq.com --proxy-insecure <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h1><pre class="line-numbers language-none"><code class="language-none">server &#123;        listen                         81;        # dns resolver used by forward proxying        resolver                       8.8.8.8;        # forward proxy for CONNECT requests        proxy_connect;        proxy_connect_allow            all;        proxy_connect_connect_timeout  100s;        proxy_connect_data_timeout     100s;        # defined by yourself for non-CONNECT requests        # Example: reverse proxy for non-CONNECT requests        location &#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;$http_host$request_uri;            proxy_set_header Host $http_host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_set_header X-Forwarded-Proto $scheme;        &#125;    &#125;server &#123;        listen 443 default;        # self signed certificate generated via openssl command        ssl_certificate_key            &#x2F;root&#x2F;ssl&#x2F;server.key;        ssl_certificate                &#x2F;root&#x2F;ssl&#x2F;server.crt;        ssl_session_cache              shared:SSL:1m;        # dns resolver used by forward proxying        resolver                       8.8.8.8 8.8.4.4;        # forward proxy for CONNECT request        proxy_connect;        proxy_connect_allow            all;        proxy_connect_connect_timeout  100s;        proxy_connect_data_timeout     100s;        # defined by yourself for non-CONNECT request        # Example: reverse proxy for non-CONNECT requests        location &#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;$http_host$request_uri;            proxy_set_header Host $http_host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_set_header X-Forwarded-Proto $scheme;        &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Default </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于百度飞浆平台语音识别PaddleSpeech</title>
      <link href="/2024/07/29/PaddleSpeech/"/>
      <url>/2024/07/29/PaddleSpeech/</url>
      
        <content type="html"><![CDATA[<h1 id="PaddleSpeech-是基于飞桨-PaddlePaddle-的语音方向的开源模型库"><a href="#PaddleSpeech-是基于飞桨-PaddlePaddle-的语音方向的开源模型库" class="headerlink" title="PaddleSpeech 是基于飞桨 PaddlePaddle 的语音方向的开源模型库"></a><strong>PaddleSpeech</strong> 是基于飞桨 <a href="https://gitee.com/link?target=https://github.com/PaddlePaddle/Paddle">PaddlePaddle</a> 的语音方向的开源模型库</h1><p><a href="https://github.com/PaddlePaddle/PaddleSpeech">https://github.com/PaddlePaddle/PaddleSpeech</a></p><h2 id="文本介绍-Docker-部署方式"><a href="#文本介绍-Docker-部署方式" class="headerlink" title="文本介绍 Docker 部署方式"></a>文本介绍 Docker 部署方式</h2><p>依赖环境介绍,docker 环境就不用担心这些：</p><ul><li>gcc &gt;&#x3D; 4.8.5</li><li>paddlepaddle &lt;&#x3D; 2.5.1 桨桨 &lt;&#x3D; 2.5.1</li><li>python &gt;&#x3D; 3.8 <br>自 2024 年 6 月以来 Docker Hub 访问不了，国内开源厂商镜像如清华等都宣布下架。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 设置 <span class="token function">docker</span> mirrors<span class="token function">sudo</span> <span class="token function">vim</span>  /etc/docker/daemon.json<span class="token punctuation">&#123;</span>    <span class="token string">"registry-mirrors"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>        <span class="token string">"https://registry.docker-cn.com"</span>,        <span class="token string">"https://docker.mirrors.ustc.edu.cn"</span>,        <span class="token string">"https://hub-mirror.c.163.com"</span>,        <span class="token string">"https://mirror.baidubce.com"</span>,        <span class="token string">"https://ccr.ccs.tencentyun.com"</span>,        <span class="token string">"https://dockerhub.icu/"</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token comment"># GPU版本</span><span class="token function">docker</span> pull paddlecloud/paddlespeech:develop-gpu-cuda10.2-cudnn7-latest<span class="token comment"># CPU版本</span><span class="token function">docker</span> pull paddlecloud/paddlespeech:develop-cpu-latest<span class="token comment"># 或者使用 docker search paddlespeech 搜索相关的镜像版本</span><span class="token comment"># 启动服务</span><span class="token function">docker</span> run <span class="token parameter variable">--name</span> dev <span class="token parameter variable">-v</span> <span class="token environment constant">$PWD</span>:/mnt <span class="token parameter variable">-p</span> <span class="token number">8888</span>:8888 <span class="token parameter variable">-p</span> <span class="token number">8090</span>:8090 <span class="token parameter variable">-it</span> paddlecloud/paddlespeech:develop-cpu-latest  /bin/bash<span class="token comment"># 自然语言处理工具库NLTK安装</span><span class="token function">docker</span> 镜像内的目录是 /root/nltk_data/可以将下载好的传输到服务器上复制到这个目录下如：cp <span class="token parameter variable">-r</span> /mnt/nltk_data-gh-pages/packages/ /root/nltk_data/NLTK 数据下载： https://github.com/nltk/nltk_data/archive/refs/heads/gh-pages.zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 设置 python pip pip <span class="token function">install</span> xxx <span class="token parameter variable">-i</span> https://mirror.baidu.com/pypi/simpleor pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>测试数据下载：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> <span class="token parameter variable">-c</span> https://paddlespeech.bj.bcebos.com/PaddleAudio/zh.wav<span class="token function">wget</span> <span class="token parameter variable">-c</span> https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启动 WEB 服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">paddlespeech_server start <span class="token parameter variable">--config_file</span> ./demos/speech_server/conf/application.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>识别语音命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">paddlespeech asr <span class="token parameter variable">--lang</span> zh <span class="token parameter variable">--input</span> zh.wav<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>文字转语音命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">paddlespeech tts <span class="token parameter variable">--input</span> <span class="token string">"你好，欢迎使用百度飞桨深度学习框架！"</span> <span class="token parameter variable">--output</span> output.wav<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其他命令请参考开源：<br><a href="https://github.com/PaddlePaddle/PaddleSpeech">https://github.com/PaddlePaddle/PaddleSpeech</a></p><p>docker 命令回顾</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看正在运行的 docker hub</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span><span class="token comment"># 进入一个正在运行的 docker hub</span><span class="token function">docker</span> attach 36e3553f6bb3or <span class="token function">docker</span> run <span class="token parameter variable">-it</span> xxx /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Default </tag>
            
            <tag> PaddleSpeech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>https 证书自动续期，永久免费</title>
      <link href="/2024/07/08/nginx-config-https/"/>
      <url>/2024/07/08/nginx-config-https/</url>
      
        <content type="html"><![CDATA[<h1 id="https-证书自动续期，永久免费"><a href="#https-证书自动续期，永久免费" class="headerlink" title="https 证书自动续期，永久免费"></a>https 证书自动续期，永久免费</h1><blockquote><p>开源组织的免费证书：<a href="https://letsencrypt.org/zh-cn/">https://letsencrypt.org/zh-cn/</a><br>Let’s Encrypt 和 <a href="https://tools.ietf.org/html/rfc8555">ACME 协议</a>的目标是实现可信数字证书的自动获取，从而简化 HTTPS 服务器部署中的人工操作。 这一目标是由 Web 服务器上的证书管理软件完成的。</p></blockquote><h1 id="入门指南"><a href="#入门指南" class="headerlink" title="入门指南"></a>入门指南</h1><blockquote><p>为了在您的网站上启用 HTTPS，您需要从证书颁发机构（CA）获取证书（一种文件）。 Let’s Encrypt 正是其中一家证书颁发机构。 要从 Let’s Encrypt 获取您网站域名的证书，您必须证明您对域名的实际控制权。 这一过程通常由 Web 主机上运行的 <a href="https://tools.ietf.org/html/rfc8555">ACME 协议</a>客户端完成。</p></blockquote><blockquote><p>申请证书的最佳方式取决于您是否具备服务器的<a href="https://en.wikipedia.org/wiki/Shell_account">命令行访问权限</a>（也称为 SSH 权限）。 如果您仅使用控制面板（例如 <a href="https://cpanel.net/">cPanel</a>、<a href="https://www.plesk.com/">Plesk</a> 或 <a href="https://wordpress.org/">WordPress</a>）管理您的网站，您很有可能没有命令行访问权限。 您可以联系您的托管服务提供商确认。</p></blockquote><h1 id="拥有命令行访问权限"><a href="#拥有命令行访问权限" class="headerlink" title="拥有命令行访问权限"></a>拥有命令行访问权限</h1><blockquote><p>我们建议大多数具有命令行访问权限的人使用 <a href="https://certbot.eff.org/">Certbot</a> ACME 客户端。 它可以在不下线您的服务器的前提下自动执行证书颁发和安装。 对于不需要自动配置的用户，Certbot 还提供专家模式。 它易于使用，适用于许多操作系统，并且具有出色的（注：英文）文档。 前往 <a href="https://certbot.eff.org/">Certbot 官网</a>即可获取针对各类操作系统与服务器软件的使用说明。</p></blockquote><blockquote><p>如果 <a href="https://certbot.eff.org/">Certbot</a> 不能满足您的需求，或者您想尝试别的客户端，还有<a href="https://letsencrypt.org/zh-cn/docs/client-options/">更多 ACME 客户端</a>可供选择。 选定 ACME 客户端软件后，请参阅该客户端的文档。</p></blockquote><blockquote><p>如果您正在尝试不同的 ACME 客户端，请使用我们的<a href="https://letsencrypt.org/zh-cn/docs/staging-environment/">临时环境</a>以避免遭到<a href="https://letsencrypt.org/zh-cn/docs/rate-limits/">速率限制</a>。</p></blockquote><h1 id="实现了-ACME-协议的客户端，官方推荐如下："><a href="#实现了-ACME-协议的客户端，官方推荐如下：" class="headerlink" title="实现了 ACME 协议的客户端，官方推荐如下："></a>实现了 ACME 协议的客户端，官方推荐如下：</h1><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;certbot.eff.org&#x2F;instructions?ws&#x3D;nginx&amp;os&#x3D;centosrhel7&amp;tab&#x3D;wildcard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="阿里云-Centos-7-实现如下："><a href="#阿里云-Centos-7-实现如下：" class="headerlink" title="阿里云 Centos 7 实现如下："></a>阿里云 Centos 7 实现如下：</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">必备条件：<span class="token number">1</span>. 安装阿里云 CLI 命令行工具，参考如下：https://help.aliyun.com/zh/cli/install-cli-on-linux?spm<span class="token operator">=</span>a2c4g.11186623.0.0.5fd7606ftkgvZH<span class="token number">2</span>. 安装证书生成 ACME 客户端 yum <span class="token function">install</span> epel-release <span class="token parameter variable">-y</span>yum <span class="token function">install</span> certbot <span class="token parameter variable">-y</span><span class="token number">3</span>. certbot 文档https://eff-certbot.readthedocs.io/en/latest/using.html<span class="token comment">#nginx</span><span class="token number">4</span>. 阿里云自动续期脚本https://github.com/justjavac/certbot-dns-aliyun?tab<span class="token operator">=</span>readme-ov-file<span class="token number">5</span>. 成功后如下输出证书保存的路径，之后将 nginx 的证书配置指向该证书<span class="token number">6</span>. 重要命令 - 申请证书certbot certonly <span class="token parameter variable">-d</span> *.example.com <span class="token parameter variable">--manual</span> --preferred-challenges dns --manual-auth-hook <span class="token string">"alidns"</span> --manual-cleanup-hook <span class="token string">"alidns clean"</span><span class="token number">7</span>. 重要命令 - 续期certbot renew <span class="token parameter variable">--manual</span> --preferred-challenges dns --manual-auth-hook <span class="token string">"alidns"</span> --manual-cleanup-hook <span class="token string">"alidns clean"</span><span class="token number">8</span>. 重要命令 - 自动续期<span class="token function">crontab</span> <span class="token parameter variable">-e</span><span class="token number">1</span> <span class="token number">1</span> */1 * * root certbot renew <span class="token parameter variable">--manual</span> --preferred-challenges dns --manual-auth-hook <span class="token string">"alidns"</span> --manual-cleanup-hook <span class="token string">"alidns clean"</span> --deploy-hook <span class="token string">"nginx -s reload"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证："><a href="#alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：" class="headerlink" title="alidns脚本如下，作用动态添加阿里云 DNS 解析用来验证："></a>alidns<strong>脚本如下，作用动态添加阿里云 DNS 解析用来验证：</strong></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">FLAG</span><span class="token operator">=</span><span class="token string">"(\.com\.cn|\.gov\.cn|\.net\.cn|\.org\.cn|\.ac\.cn|\.gd\.cn)$"</span><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token builtin class-name">command</span> <span class="token parameter variable">-v</span> aliyun <span class="token operator">></span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span><span class="token builtin class-name">echo</span> <span class="token string">"错误: 你需要先安装 aliyun 命令行工具 https://help.aliyun.com/document_detail/121541.html。"</span> <span class="token operator"><span class="token file-descriptor important">1</span>></span><span class="token file-descriptor important">&amp;2</span><span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">DOMAIN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">expr</span> match <span class="token string">"<span class="token variable">$CERTBOT_DOMAIN</span>"</span> <span class="token string">'.*\.\(.*\..*\)'</span><span class="token variable">)</span></span><span class="token assign-left variable">SUB_DOMAIN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">expr</span> match <span class="token string">"<span class="token variable">$CERTBOT_DOMAIN</span>"</span> <span class="token string">'\(.*\)\..*\..*'</span><span class="token variable">)</span></span><span class="token keyword">if</span> <span class="token builtin class-name">echo</span> <span class="token variable">$CERTBOT_DOMAIN</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token parameter variable">-q</span> <span class="token string">"<span class="token variable">$FLAG</span>"</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token assign-left variable">DOMAIN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $CERTBOT_DOMAIN <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-oP</span> <span class="token string">'(?&lt;=)[^.]+('</span>$FLAG<span class="token string">')'</span><span class="token variable">`</span></span>  <span class="token assign-left variable">SUB_DOMAIN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $CERTBOT_DOMAIN <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-oP</span> <span class="token string">'.*(?=\.[^.]+('</span>$FLAG<span class="token string">'))'</span><span class="token variable">`</span></span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$DOMAIN</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token assign-left variable">DOMAIN</span><span class="token operator">=</span><span class="token variable">$CERTBOT_DOMAIN</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$SUB_DOMAIN</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token assign-left variable">SUB_DOMAIN</span><span class="token operator">=</span>.<span class="token variable">$SUB_DOMAIN</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>aliyun alidns AddDomainRecord <span class="token punctuation">\</span><span class="token parameter variable">--DomainName</span> <span class="token variable">$DOMAIN</span> <span class="token punctuation">\</span><span class="token parameter variable">--RR</span> <span class="token string">"_acme-challenge"</span><span class="token variable">$SUB_DOMAIN</span> <span class="token punctuation">\</span><span class="token parameter variable">--Type</span> <span class="token string">"TXT"</span> <span class="token punctuation">\</span><span class="token parameter variable">--Value</span> <span class="token variable">$CERTBOT_VALIDATION</span>/bin/sleep <span class="token number">20</span><span class="token keyword">else</span><span class="token assign-left variable">RecordId</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>aliyun alidns DescribeDomainRecords <span class="token punctuation">\</span><span class="token parameter variable">--DomainName</span> $DOMAIN <span class="token punctuation">\</span><span class="token parameter variable">--RRKeyWord</span> <span class="token string">"_acme-challenge"</span>$SUB_DOMAIN <span class="token punctuation">\</span><span class="token parameter variable">--Type</span> <span class="token string">"TXT"</span> <span class="token punctuation">\</span><span class="token parameter variable">--ValueKeyWord</span> $CERTBOT_VALIDATION <span class="token punctuation">\</span><span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RecordId"</span> <span class="token punctuation">\</span><span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Eo</span> <span class="token string">"[0-9]+"</span><span class="token variable">)</span></span>aliyun alidns DeleteDomainRecord <span class="token punctuation">\</span><span class="token parameter variable">--RecordId</span> <span class="token variable">$RecordId</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Default </tag>
            
            <tag> nginx </tag>
            
            <tag> 证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 磁盘挂载</title>
      <link href="/2024/01/29/centos-disk/"/>
      <url>/2024/01/29/centos-disk/</url>
      
        <content type="html"><![CDATA[<h3 id="查看磁盘："><a href="#查看磁盘：" class="headerlink" title="查看磁盘："></a>查看磁盘：</h3><blockquote><p>lsblk</p></blockquote><h3 id="格式化磁盘："><a href="#格式化磁盘：" class="headerlink" title="格式化磁盘："></a>格式化磁盘：</h3><blockquote><p>fdisk &#x2F;dev&#x2F;sdb<br>n-&gt;p-&gt;1-&gt;回车-&gt;回车-&gt;w</p></blockquote><h3 id="创建磁盘："><a href="#创建磁盘：" class="headerlink" title="创建磁盘："></a>创建磁盘：</h3><pre><code class="shell">mkfs.xfs /dev/sdb1mkdir /appecho &quot;/dev/sdb1 /app xfs defaults 0 0&quot; &gt;&gt; /etc/fstabmount -adf -h```yml</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud 性能优化</title>
      <link href="/2023/08/17/spring-cloud-properties/"/>
      <url>/2023/08/17/spring-cloud-properties/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># undertow 服务器优化</span>server.undertow.threads.io=8server.undertow.threads.worker=256server.undertow.buffer<span class="token punctuation">-</span>size=2048server.undertow.direct<span class="token punctuation">-</span>buffers=true<span class="token comment"># 开启HTTP GZIP压缩</span>server.compression.enabled=trueserver.compression.min<span class="token punctuation">-</span>response<span class="token punctuation">-</span>size=1KB<span class="token comment">#开启Feign请求压缩 FeignContentGzipEncodingAutoConfiguration</span>feign.compression.request.enabled=truefeign.compression.request.mime<span class="token punctuation">-</span>types=text/xml<span class="token punctuation">,</span>application/xml<span class="token punctuation">,</span>application/jsonfeign.compression.request.min<span class="token punctuation">-</span>request<span class="token punctuation">-</span>size=2048<span class="token comment"># 开启响应压缩 FeignAcceptGzipEncodingAutoConfiguration DefaultGzipDecoderConfiguration DefaultGzipDecoder</span>feign.compression.response.enabled=truefeign.compression.response.useGzipDecoder=true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring bean 扩展点记录</title>
      <link href="/2023/07/20/spring-bean-extension-point/"/>
      <url>/2023/07/20/spring-bean-extension-point/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/spring%20bean%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%B5%81%E7%A8%8B-mjrg.png" alt="spring bean实例化流程-mjrg.png"><br><img src="/img/springbean%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="springbean实例化流程图.png"><br><img src="/img/spring%E6%89%A9%E5%B1%95%E6%8E%A5%E5%8F%A3%E7%82%B9.png" alt="spring扩展接口点.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// spring 核心代码</span><span class="token comment">// BeanFactoryPostProcessor 接口 ，this.postProcessBeanFactory(beanFactory);</span><span class="token comment">// </span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> var9<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Exception encountered during context initialization - cancelling refresh attempt: "</span> <span class="token operator">+</span> var9<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancelRefresh</span><span class="token punctuation">(</span>var9<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> var9<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="1-BeanFactoryPostProcessor接口"><a href="#1-BeanFactoryPostProcessor接口" class="headerlink" title="1. BeanFactoryPostProcessor接口"></a>1. BeanFactoryPostProcessor接口</h1><blockquote><p>在容器启动阶段，允许我们在容器实例化 Bean 之前对注册到该容器的 BeanDefinition 做出修改，Spring 为我们提供了几个常用的BeanFactoryPostProcessor，他们是PropertyPlaceholderConfigurer 和 PropertyOverrideConfigurer。在AbstractApplicationContext类的refresh()方法中调用</p></blockquote><h1 id="2-BeanDefinitionRegistryPostProcessor"><a href="#2-BeanDefinitionRegistryPostProcessor" class="headerlink" title="2. BeanDefinitionRegistryPostProcessor"></a>2. <strong>BeanDefinitionRegistryPostProcessor</strong></h1><p>BeanDefinitionRegistryPostProcessor是BeanFactoryPostProcessor的子接口，<strong>可以动态注册BeanDefinition到Spring容器</strong>，Spring的注解驱动实现就向容器注入了ConfigurationClassPostProcessor类，ConfigurationClassPostProcessor处理Config的相关注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListenerScannerProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">,</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">></span></span> beans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">></span></span> definitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> orders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">AnnotationBeanNameGenerator</span> beanNameGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationBeanNameGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">AnnotationScopeMetadataResolver</span> scopeMetadataResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationScopeMetadataResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">BASE_PACKAGES</span> <span class="token operator">=</span> <span class="token string">"要扫描的包"</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanDefinitionRegistry</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span> beanDefinitionRegistry<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">&#123;</span><span class="token comment">// 通过 ClassPathScanningCandidateComponentProvider 扫描相应的类 得到 BeanDefinition</span>        <span class="token class-name">ListenerScanner</span> listenerScanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListenerScanner</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">></span></span> beanDefinitions <span class="token operator">=</span> listenerScanner<span class="token punctuation">.</span><span class="token function">doScan</span><span class="token punctuation">(</span><span class="token constant">BASE_PACKAGES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">></span></span> iterator <span class="token operator">=</span> beanDefinitions<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">BeanDefinition</span> next <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ScopeMetadata</span> scopeMetadata <span class="token operator">=</span> scopeMetadataResolver<span class="token punctuation">.</span><span class="token function">resolveScopeMetadata</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanNameGenerator<span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> beanDefinitionRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 判断是否存在相关的 bean </span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkCandidate</span><span class="token punctuation">(</span>beanName <span class="token punctuation">,</span> next<span class="token punctuation">,</span> beanDefinitionRegistry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">BeanDefinitionHolder</span> definitionHolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ScopedProxyMode</span> scopedProxyMode <span class="token operator">=</span> scopeMetadata<span class="token punctuation">.</span><span class="token function">getScopedProxyMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>scopedProxyMode<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ScopedProxyMode</span><span class="token punctuation">.</span><span class="token constant">NO</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">boolean</span> proxyTargetClass <span class="token operator">=</span> scopedProxyMode<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ScopedProxyMode</span><span class="token punctuation">.</span><span class="token constant">TARGET_CLASS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    definitionHolder <span class="token operator">=</span> <span class="token class-name">ScopedProxyUtils</span><span class="token punctuation">.</span><span class="token function">createScopedProxy</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">,</span> beanDefinitionRegistry<span class="token punctuation">,</span> proxyTargetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token comment">// 注入到 spring</span>                <span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>definitionHolder<span class="token punctuation">,</span> beanDefinitionRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            definitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>            orders<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">getAttributes</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> <span class="token string">"order"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collect <span class="token operator">=</span> orders<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token operator">::</span><span class="token function">getValue</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token operator">::</span><span class="token function">getKey</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collect<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x <span class="token operator">-></span> beans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> definitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span> beanDefinition<span class="token punctuation">,</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">ScannedGenericBeanDefinition</span> beanDefinition1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ScannedGenericBeanDefinition</span><span class="token punctuation">)</span> beanDefinition<span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> attributes <span class="token operator">=</span> beanDefinition1<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotationAttributes</span><span class="token punctuation">(</span><span class="token class-name">Listener</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>attributes <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> attributes<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">></span></span> <span class="token function">getBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> beans<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> configurableListableBeanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">checkCandidate</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span> beanDefinition<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>registry<span class="token punctuation">.</span><span class="token function">containsBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">BeanDefinition</span> existingDef <span class="token operator">=</span> registry<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">BeanDefinition</span> originatingDef <span class="token operator">=</span> existingDef<span class="token punctuation">.</span><span class="token function">getOriginatingBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>originatingDef <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                existingDef <span class="token operator">=</span> originatingDef<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isCompatible</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">,</span> existingDef<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Annotation-specified bean name '"</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">"' for bean class ["</span> <span class="token operator">+</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"] conflicts with existing, non-compatible bean definition of same name and class ["</span> <span class="token operator">+</span> existingDef<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isCompatible</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span> newDefinition<span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span> existingDefinition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span>existingDefinition <span class="token keyword">instanceof</span> <span class="token class-name">ScannedGenericBeanDefinition</span><span class="token punctuation">)</span> <span class="token operator">||</span> newDefinition<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>existingDefinition<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> newDefinition<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>existingDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-BeanFactoryPostProcessor"><a href="#3-BeanFactoryPostProcessor" class="headerlink" title="3.BeanFactoryPostProcessor"></a><strong>3.BeanFactoryPostProcessor</strong></h1><p>**通过 **AbstractApplicationContext. refresh() -&gt; this.invokeBeanFactoryPostProcessors(beanFactory); 实例化</p><h1 id="4-BeanPostProcessor"><a href="#4-BeanPostProcessor" class="headerlink" title="4.BeanPostProcessor"></a>4.BeanPostProcessor</h1><p>在 Bean 实例化前后，我们可以通过自定义BeanPostProcessor拦截所有的bean（在bean实例化之前和之后拦截），对bean做增强处理（前、后置处理），相当于bean实例化前后插入了方法</p><ul><li><p>InstantiationAwareBeanPostProcessor 继承自BeanPostProcessor，InstantiationAwareBeanPostProcessor 调用时机是bean实例化（<strong>Instantiation</strong>）阶段，用于替换bean默认创建方式， 主要用于基础框架层面</p></li><li><p><strong>SmartInstantiationAwareBeanPostProcessor</strong></p></li><li><p>MergedBeanDefinitionPostProcessor 主要处理合并后的BeanDefinition，其子类AutowiredAnnotationBeanPostProcessor提供了属性自动注入的功能</p></li><li><p>**AutowiredAnnotationBeanPostProcessor **处理 @Autowired和@Value的属性注入，</p></li><li><p><strong>InitDestroyAnnotationBeanPostProcessor</strong></p></li><li><p>**CommonAnnotationBeanPostProcessor **继承了InitDestroyAnnotationBeanPostProcessor，处理 @Resource 以及几个EJB注解，并且通过setInitAnnotationType设置了参与生命周期的注解（@PostConstruct、@PreDestory）（不过具体调用是在父类#…BeforeInit里调用的，上面说过了）</p><p><strong>@PostConstruct 、InitializingBean和init-method 的调用区别就在这了</strong>，PostConstruct就是在这个InitDestroyAnnotationBeanPostProcessor#BeforeInit** 初始化前置**方法调用的，而像InitializingBean#afterPropertySet则和BPP无关，其是在bean的InitializeBean方法进入即调用的，同时如果调用afterPropertySet出错了，也不会调用init-method了。</p></li><li><p><strong>AbstractAutowireCapableBeanFactory -》</strong>initializeBean()** 在实例化的前后调用 **<em>原理 applyBeanPostProcessorsBeforeInitialization方法和applyBeanPostProcessorsAfterInitialization</em></p></li></ul><h1 id="5-Aware接口"><a href="#5-Aware接口" class="headerlink" title="5.Aware接口"></a>5.<strong>Aware接口</strong></h1><blockquote><p>Aware 接口是 Spring 容器的核心接口，实现了该接口的 bean 会通过事件回调机制完成Spring容器的通知功能；<br>在AbstractAutowireCapableBeanFactory中的initializeBean方法会调用Aware接口的方法</p></blockquote><p><strong>部分 Aware 接口是通过BeanPostProcessor的实现类ApplicationContextAwareProcessor实现的</strong></p><h1 id="6-常用的接口"><a href="#6-常用的接口" class="headerlink" title="6.常用的接口"></a>6.常用的接口</h1><table><thead><tr><th><strong>Aware接口</strong></th><th><strong>注入依赖</strong></th></tr></thead><tbody><tr><td>BeanNameAware</td><td>Bean 的名称</td></tr><tr><td>BeanFactoryAware</td><td>当前上下文的 BeanFactory</td></tr><tr><td>ApplicationContextAware</td><td>当前上下文的 ApplicationContext</td></tr><tr><td>ApplicationEventPublisherAware</td><td>当前上下文的事件发布者 ApplicationEventPublisher</td></tr><tr><td>BeanClassLoaderAware</td><td>加载 Bean 类的类加载器</td></tr><tr><td>InstantiationAwareBeanPostProcessor</td><td></td></tr><tr><td>DestructionAwareBeanPostProcessor</td><td></td></tr><tr><td>DisposableBean</td><td></td></tr><tr><td>InitializingBean</td><td></td></tr></tbody></table><h1 id="7-ImportBeanDefinitionRegistrar。实现自己的-EnableXXX"><a href="#7-ImportBeanDefinitionRegistrar。实现自己的-EnableXXX" class="headerlink" title="7.ImportBeanDefinitionRegistrar。实现自己的@EnableXXX"></a>7.<strong>ImportBeanDefinitionRegistrar。实现自己的@EnableXXX</strong></h1><p>一些组件可以在开启后才进行使用。比如 @EnableAspectJAutoProxy 开启AspectJ支持。原理就是在注解内部Import了一个 ImportBeanDefinitionRegistrar，这个接口也可以帮你注册BeanDefinition到容器中，且优先于上文 BeanDefinitionRegistryPostProcessor 。</p><pre class="line-numbers language-none"><code class="language-none">FeignClientsRegistrarRibbonClientConfigurationRegistrarAspectJAutoProxyRegistrar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM常用参数</title>
      <link href="/2023/05/06/jvm-params/"/>
      <url>/2023/05/06/jvm-params/</url>
      
        <content type="html"><![CDATA[<p><a href="https://help.aliyun.com/document_detail/148851.html?spm=a2c4g.383255.0.0.30855accl7pyIr">阿里 Serverless JVM 最佳实践</a></p><pre class="line-numbers language-none"><code class="language-none"># [阿里 Serverless JVM 最佳实践]https:&#x2F;&#x2F;help.aliyun.com&#x2F;document_detail&#x2F;148851.html?spm&#x3D;a2c4g.383255.0.0.30855accl7pyIr在Java虚拟机的参数中，有3种表示方法标准参数（-），所有的JVM实现都必须实现这些参数的功能，而且向后兼容；非标准参数（-X），默认jvm实现这些参数的功能，但是并不保证所有jvm实现都满足，且不保证向后兼容；非Stable参数（-XX），此类参数各个jvm实现会有所不同，将来可能会随时取消，需要慎重使用（但是，这些参数往往是非常有用的）；# 感知容器内存限制-XX:+UseContainerSupport# 设置JVM最大内存为整个宿主总内存的占比，适合docker容器内存动态调整-XX:MaxRAMPercentage&#x3D;80.0  -XX:MinRAMPercentage&#x3D;80.0 -XX:InitialRAMPercentage&#x3D;80.0# 固定设置堆内存大小，不能感知宿主内存大小动态调整-Xmx&#x2F;-Xms# GC 日志打印 -XX:+PrintGCDetails-XX:+PrintGCDateStamps-XX:+PrintHeapAtGC-XX:+PrintCommandLineFlags-XX:+PrintFlagsFinal-Xloggc:&#x2F;gc-%t.log -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;&#x2F;data&#x2F;logs&#x2F;heapdump.hprof # 垃圾回收器-XX:+UseSerialGC# 允许使用并行清除垃圾收集器（也称为吞吐量收集器），以利用多个处理器来提高应用程序的性能。默认情况下，此选项是禁用的-XX:+UseParallelGC# 允许在年轻代中使用并行线程进行收集。默认情况下，此选项处于禁用状态。-XX:+USeParNewGC-XX:+UseG1GC-XX:+UseZGCjps： 跟linux的ps一样，只不过是列出java程序jps -m  列出所有java程序，并显示传入参数 jps -l  列出所有java程序，显示类的全限名jstat：观察java程序运行时的相关信息，主要是堆信息jstat -class -t pid 1000 2  查看classLoader相关信息，每隔一秒执行一次，总共收集两次jstat -gc pid 查看gc情况jstat -gcnew pid  查看新生代的详细信息jstat -gcold pid  查看老年代的详细信息jinfo：查看java应用程序的扩展参数，部分参数可支持动态修改jinfo -flag MaxtenuringThreshold pid 查看gc升级年龄jinfo -flag +PrintGCDetails pid  修改使用PrintGCDetails参数jmap：导出堆到文件jmap -histo pid &gt; &#x2F;usr&#x2F;local&#x2F;tmp&#x2F;a.txt  java程序的对象统计信息jmap -histo:live jmap -dump:format&#x3D;b file&#x3D;&#x2F;tmp&#x2F;heap.hprof PID 得到java程序的当前快照，主要用于分析线程的运行情况jstack：查看线程堆栈jstack -l pid &gt; &#x2F;tmp&#x2F;stack.hprof 这里-l是打印锁的详细信息然后输出到指定目录的*.hprof文件中# 常用启动命令nohup java -Xms2g -Xmx2g -server -verbose:gc -XX:HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;dump.hprof -XX:+PrintGCDateStamps -XX:+PrintGCDetails -Xloggc:log&#x2F;gc-%t.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles&#x3D;2 -XX:GCLogFileSize&#x3D;100M -XX:+CrashOnOutOfMemoryError -jar app.jar  &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;# 容器docker fileENV JAVA_OPTS&#x3D;&quot;-server -XX:+UseContainerSupport -XX:+UseG1GC -XX:MaxRAMPercentage&#x3D;80.0  -XX:MinRAMPercentage&#x3D;80.0 -XX:InitialRAMPercentage&#x3D;80.0 -Duser.timezone&#x3D;GMT+8 -Ddruid.mysql.usePingMethod&#x3D;false&quot;ENV PARAMS&#x3D;&quot;&quot;ENTRYPOINT [&quot;sh&quot;,&quot;-c&quot;, &quot;java -jar $JAVA_OPTS &#x2F;itsm-module-job-service.jar $PARAMS&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="/archives/hello-halo" title="Hello Halo">上一篇 </a><a href="/archives/hibernate%E5%8E%9F%E7%94%9F%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E9%9B%86%E6%98%A0%E5%B0%84%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB" title="hibernate原生查询，结果集映射源码阅读">下一篇</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hibernate原生查询，结果集映射源码阅读</title>
      <link href="/2022/09/23/hibernate-query-result/"/>
      <url>/2022/09/23/hibernate-query-result/</url>
      
        <content type="html"><![CDATA[<h1 id="1-hibernate-版本-5-4-21-Final"><a href="#1-hibernate-版本-5-4-21-Final" class="headerlink" title="1.hibernate 版本 5.4.21.Final"></a>1.hibernate 版本 5.4.21.Final</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SQLQuery</span> nativeQuery <span class="token operator">=</span> entityManager<span class="token punctuation">.</span><span class="token function">createNativeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token class-name">SQLQuery</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>nativeQuery<span class="token punctuation">.</span><span class="token function">setResultTransformer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanResultTransformer</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="2-代码执行栈"><a href="#2-代码执行栈" class="headerlink" title="2.代码执行栈"></a>2.代码执行栈</h1><p><img src="/img/hibernate-query-result.png" alt="hibernate-query-result.png"></p><h1 id="3-org-hibernate-loader-Loader"><a href="#3-org-hibernate-loader-Loader" class="headerlink" title="3.org.hibernate.loader.Loader"></a>3.org.hibernate.loader.Loader</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">List</span> <span class="token function">listIgnoreQueryCache</span><span class="token punctuation">(</span><span class="token class-name">SharedSessionContractImplementor</span> session<span class="token punctuation">,</span> <span class="token class-name">QueryParameters</span> queryParameters<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> queryParameters<span class="token punctuation">)</span><span class="token punctuation">,</span> queryParameters<span class="token punctuation">.</span><span class="token function">getResultTransformer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span># 其中 <span class="token keyword">this</span> 指向的是 <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>hql<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>classic<span class="token punctuation">.</span></span>QueryTranslatorImpl</span><span class="token comment">/**ResultTransformer resultTransformer 是在查询时指定的核心：Object result = holderInstantiator.instantiate(row);*/</span><span class="token keyword">protected</span> <span class="token class-name">List</span> <span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token class-name">List</span> results<span class="token punctuation">,</span> <span class="token class-name">ResultTransformer</span> resultTransformer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">QueryException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HolderInstantiator</span> holderInstantiator <span class="token operator">=</span> <span class="token class-name">HolderInstantiator</span><span class="token punctuation">.</span><span class="token function">getHolderInstantiator</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResultTransformer</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> resultTransformer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getReturnAliasesForTransformer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>holderInstantiator<span class="token punctuation">.</span><span class="token function">isRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> results<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> results<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>results<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Object</span> result <span class="token operator">=</span> holderInstantiator<span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>                results<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> resultTransformer<span class="token punctuation">.</span><span class="token function">transformList</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-调用指定的-ResultTransformer"><a href="#4-调用指定的-ResultTransformer" class="headerlink" title="4.调用指定的 ResultTransformer"></a>4.调用指定的 ResultTransformer</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>hql<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>HolderInstantiator</span><span class="token comment">// 调用 ResultTransformer 的 transformTuple方法</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">instantiate</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transformer <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> row <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transformer<span class="token punctuation">.</span><span class="token function">transformTuple</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getQueryReturnAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-最后"><a href="#5-最后" class="headerlink" title="5.最后"></a>5.最后</h1><p>除了可以自定义 ResultTransformer 外，还有个小技巧<br>设置数据库方言：<br>spring.jpa.properties.hibernate.dialect&#x3D;xxx.MySQL8027Dialect<br>自定义方言时指定数据类型映射：<br>&#x2F;&#x2F; 将 bitint 映射成 long<br>registerColumnType(Types.BIGINT, StandardBasicTypes.LONG.getName());<br>registerHibernateType(Types.BIGINT,StandardBasicTypes.LONG.getName());</p><h1 id="hibernate-配置项"><a href="#hibernate-配置项" class="headerlink" title="hibernate 配置项"></a>hibernate 配置项</h1><blockquote><p>org.hibernate.jpa.AvailableSettings<br>org.hibernate.cfg.AvailableSettings<br>org.hibernate.cfg.Environment</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> hibernate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openssl 编译安装</title>
      <link href="/2022/09/20/openssl-install/"/>
      <url>/2022/09/20/openssl-install/</url>
      
        <content type="html"><![CDATA[<h2 id="1-官方下载地址"><a href="#1-官方下载地址" class="headerlink" title="1. 官方下载地址"></a>1. 官方下载地址</h2><p><a href="https://www.openssl.org/source/">https://www.openssl.org/source/</a></p><h2 id="2-依赖安装"><a href="#2-依赖安装" class="headerlink" title="2. 依赖安装"></a>2. 依赖安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> gcc libffi-devel zlib* openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-编译"><a href="#3-编译" class="headerlink" title="3. 编译"></a>3. 编译</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./config <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/openssl shared zlib其中 <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/openssl  指定编译到那个目录下<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4-备份"><a href="#4-备份" class="headerlink" title="4. 备份"></a>4. 备份</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">which</span> openssl  或  <span class="token function">find</span> / <span class="token parameter variable">-name</span> openssl <span class="token function">mv</span> /usr/bin/openssl /usr/bin/openssl.1.0.1e <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-建立软连接"><a href="#5-建立软连接" class="headerlink" title="5. 建立软连接"></a>5. 建立软连接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/openssl/bin/openssl /usr/bin/openssl<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/openssl/include/openssl /usr/include/openssl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-设定动态链接库"><a href="#6-设定动态链接库" class="headerlink" title="6. 设定动态链接库"></a>6. 设定动态链接库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"/usr/local/openssl/lib"</span> <span class="token operator">>></span> /etc/ld.so.confldconfig <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-验证"><a href="#7-验证" class="headerlink" title="7. 验证"></a>7. 验证</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl version <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 遇到的一些错误</title>
      <link href="/2022/09/16/mysql-error-collection/"/>
      <url>/2022/09/16/mysql-error-collection/</url>
      
        <content type="html"><![CDATA[<h2 id="1-3100-Error-on-observer-while-running-replication-hook-‘before-commit’"><a href="#1-3100-Error-on-observer-while-running-replication-hook-‘before-commit’" class="headerlink" title="1. 3100 - Error on observer while running replication hook ‘before_commit’."></a>1. 3100 - Error on observer while running replication hook ‘before_commit’.</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">'%group_replication_transaction_size_limit%'</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> group_replication_transaction_size_limit<span class="token operator">=</span><span class="token number">1500000000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-Err-9001-Max-connect-timeout-reached-while-reaching-hostgroup-10-after-1"><a href="#2-Err-9001-Max-connect-timeout-reached-while-reaching-hostgroup-10-after-1" class="headerlink" title="2. [Err] 9001 - Max connect timeout reached while reaching hostgroup 10 after 1"></a>2. [Err] 9001 - Max connect timeout reached while reaching hostgroup 10 after 1</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">'%connect%'</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">GLOBAL</span> max_connections <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-Caused-by-java-sql-SQLException-Illegal-mix-of-collations-utf8mb4-general-ci-COERCIBLE-and-utf8mb4-0900-ai-ci-COERCIBLE-for-operation-‘-’"><a href="#3-Caused-by-java-sql-SQLException-Illegal-mix-of-collations-utf8mb4-general-ci-COERCIBLE-and-utf8mb4-0900-ai-ci-COERCIBLE-for-operation-‘-’" class="headerlink" title="3. Caused by: java.sql.SQLException: Illegal mix of collations (utf8mb4_general_ci,COERCIBLE) and (utf8mb4_0900_ai_ci,COERCIBLE) for operation ‘&#x3D;’"></a>3. Caused by: java.sql.SQLException: Illegal mix of collations (utf8mb4_general_ci,COERCIBLE) and (utf8mb4_0900_ai_ci,COERCIBLE) for operation ‘&#x3D;’</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span>GenericJDBCException</span><span class="token operator">:</span> could not extract <span class="token class-name">ResultSet</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>exception<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>StandardSQLExceptionConverter</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">StandardSQLExceptionConverter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">47</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>spi<span class="token punctuation">.</span></span>SqlExceptionHelper</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">SqlExceptionHelper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">113</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>spi<span class="token punctuation">.</span></span>SqlExceptionHelper</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">SqlExceptionHelper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">99</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>ResultSetReturnImpl</span><span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token class-name">ResultSetReturnImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">69</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">getResultSet</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2167</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">executeQueryStatement</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1930</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">executeQueryStatement</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1892</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doQuery</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">937</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doQueryAndInitializeNonLazyCollections</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">340</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2689</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2672</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">listIgnoreQueryCache</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2506</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2501</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span>CustomLoader</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">CustomLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">338</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>SessionImpl</span><span class="token punctuation">.</span><span class="token function">listCustomQuery</span><span class="token punctuation">(</span><span class="token class-name">SessionImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2223</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractSharedSessionContract</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">AbstractSharedSessionContract</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1053</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>NativeQueryImpl</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span><span class="token class-name">NativeQueryImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">170</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractProducedQuery</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">AbstractProducedQuery</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1505</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">100</span> common frames omitted<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>SQLException</span><span class="token operator">:</span> <span class="token class-name">Illegal</span> mix of collations <span class="token punctuation">(</span>utf8mb4_general_ci<span class="token punctuation">,</span><span class="token constant">COERCIBLE</span><span class="token punctuation">)</span> and <span class="token punctuation">(</span>utf8mb4_0900_ai_ci<span class="token punctuation">,</span><span class="token constant">COERCIBLE</span><span class="token punctuation">)</span> <span class="token keyword">for</span> operation <span class="token char">'='</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>SQLError</span><span class="token punctuation">.</span><span class="token function">createSQLException</span><span class="token punctuation">(</span><span class="token class-name">SQLError</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">129</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>SQLExceptionsMapping</span><span class="token punctuation">.</span><span class="token function">translateException</span><span class="token punctuation">(</span><span class="token class-name">SQLExceptionsMapping</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">122</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>ClientPreparedStatement</span><span class="token punctuation">.</span><span class="token function">executeInternal</span><span class="token punctuation">(</span><span class="token class-name">ClientPreparedStatement</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">953</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>ClientPreparedStatement</span><span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token class-name">ClientPreparedStatement</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1009</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FilterChainImpl</span><span class="token punctuation">.</span><span class="token function">preparedStatement_executeQuery</span><span class="token punctuation">(</span><span class="token class-name">FilterChainImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3240</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>wall<span class="token punctuation">.</span></span>WallFilter</span><span class="token punctuation">.</span><span class="token function">preparedStatement_executeQuery</span><span class="token punctuation">(</span><span class="token class-name">WallFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">684</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FilterChainImpl</span><span class="token punctuation">.</span><span class="token function">preparedStatement_executeQuery</span><span class="token punctuation">(</span><span class="token class-name">FilterChainImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3237</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FilterEventAdapter</span><span class="token punctuation">.</span><span class="token function">preparedStatement_executeQuery</span><span class="token punctuation">(</span><span class="token class-name">FilterEventAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">465</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>FilterChainImpl</span><span class="token punctuation">.</span><span class="token function">preparedStatement_executeQuery</span><span class="token punctuation">(</span><span class="token class-name">FilterChainImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3237</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>PreparedStatementProxyImpl</span><span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token class-name">PreparedStatementProxyImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">181</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span>DruidPooledPreparedStatement</span><span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token class-name">DruidPooledPreparedStatement</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">227</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>ResultSetReturnImpl</span><span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token class-name">ResultSetReturnImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">114</span> common frames omitted    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><ul><li>修改数据库编码：<br>ALTER DATABSE database_name DEFAULT CHARACTER SET utf8mb4;</li><li>修改表编码<br>ALTER TABLE table_name DEFAULT CHARACTER SET utf8mb4;</li><li>查询编码是否一致<br>select * from information_schema.COLUMNS where table_schema &#x3D; ‘数据库’ and TABLE_NAME &#x3D; ‘表名’;</li><li>使用 cast 类型转换函数<br>例：select cast(字段a as char) from 表;<br>例：select * from 表 where cast(字段a as char) &#x3D; ‘’;</li></ul><h2 id="4-java-lang-StringIndexOutOfBoundsException-String-index-out-of-range-0"><a href="#4-java-lang-StringIndexOutOfBoundsException-String-index-out-of-range-0" class="headerlink" title="4. java.lang.StringIndexOutOfBoundsException: String index out of range: 0"></a>4. java.lang.StringIndexOutOfBoundsException: String index out of range: 0</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>StringIndexOutOfBoundsException</span><span class="token operator">:</span> <span class="token class-name">String</span> index out of range<span class="token operator">:</span> <span class="token number">0</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">658</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span>CharacterTypeDescriptor</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token class-name">CharacterTypeDescriptor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">61</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span>CharacterTypeDescriptor</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token class-name">CharacterTypeDescriptor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>VarcharTypeDescriptor</span>$<span class="token number">2.</span><span class="token function">doExtract</span><span class="token punctuation">(</span><span class="token class-name">VarcharTypeDescriptor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>BasicExtractor</span><span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token class-name">BasicExtractor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">47</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span></span>AbstractStandardBasicType</span><span class="token punctuation">.</span><span class="token function">nullSafeGet</span><span class="token punctuation">(</span><span class="token class-name">AbstractStandardBasicType</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">261</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span></span>AbstractStandardBasicType</span><span class="token punctuation">.</span><span class="token function">nullSafeGet</span><span class="token punctuation">(</span><span class="token class-name">AbstractStandardBasicType</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">257</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>type<span class="token punctuation">.</span></span>AbstractStandardBasicType</span><span class="token punctuation">.</span><span class="token function">nullSafeGet</span><span class="token punctuation">(</span><span class="token class-name">AbstractStandardBasicType</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">253</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span>ScalarResultColumnProcessor</span><span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token class-name">ScalarResultColumnProcessor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">54</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span>ResultRowProcessor</span><span class="token punctuation">.</span><span class="token function">buildResultRow</span><span class="token punctuation">(</span><span class="token class-name">ResultRowProcessor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">83</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span>ResultRowProcessor</span><span class="token punctuation">.</span><span class="token function">buildResultRow</span><span class="token punctuation">(</span><span class="token class-name">ResultRowProcessor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span>CustomLoader</span><span class="token punctuation">.</span><span class="token function">getResultColumnOrRow</span><span class="token punctuation">(</span><span class="token class-name">CustomLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">412</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">getRowFromResultSet</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">760</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">processResultSet</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">990</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doQuery</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">948</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doQueryAndInitializeNonLazyCollections</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">340</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2689</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2672</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">listIgnoreQueryCache</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2506</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>Loader</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Loader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2501</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>custom<span class="token punctuation">.</span></span>CustomLoader</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">CustomLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">338</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>SessionImpl</span><span class="token punctuation">.</span><span class="token function">listCustomQuery</span><span class="token punctuation">(</span><span class="token class-name">SessionImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2223</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractSharedSessionContract</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">AbstractSharedSessionContract</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1053</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>NativeQueryImpl</span><span class="token punctuation">.</span><span class="token function">doList</span><span class="token punctuation">(</span><span class="token class-name">NativeQueryImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">170</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractProducedQuery</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">AbstractProducedQuery</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1505</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span>Query</span><span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token class-name">Query</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">135</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>workorder<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MeterServiceImpl</span><span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token class-name">MeterServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">51</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>workorder<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>MeterServiceImpl</span><span class="token punctuation">.</span><span class="token function">getSuperTrend</span><span class="token punctuation">(</span><span class="token class-name">MeterServiceImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">331</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>workorder<span class="token punctuation">.</span>rest<span class="token punctuation">.</span></span>MeterController</span><span class="token punctuation">.</span><span class="token function">getSuperTrend</span><span class="token punctuation">(</span><span class="token class-name">MeterController</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">326</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>workorder<span class="token punctuation">.</span>rest<span class="token punctuation">.</span></span>MeterController</span>$$<span class="token class-name">FastClassBySpringCGLIB</span>$$e7d8818b<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span>MethodProxy</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">MethodProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">204</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>CglibAopProxy</span>$<span class="token class-name">CglibMethodInvocation</span><span class="token punctuation">.</span><span class="token function">invokeJoinpoint</span><span class="token punctuation">(</span><span class="token class-name">CglibAopProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">737</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>ReflectiveMethodInvocation</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">ReflectiveMethodInvocation</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">157</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span></span>MethodInvocationProceedingJoinPoint</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">MethodInvocationProceedingJoinPoint</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">84</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>comn<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span>AopDoAround</span><span class="token punctuation">.</span><span class="token function">doAround</span><span class="token punctuation">(</span><span class="token class-name">AopDoAround</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>workorder<span class="token punctuation">.</span>aop<span class="token punctuation">.</span></span>ControllerAop</span><span class="token punctuation">.</span><span class="token function">doAround</span><span class="token punctuation">(</span><span class="token class-name">ControllerAop</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">41</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>GeneratedMethodAccessor159</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">497</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span></span>AbstractAspectJAdvice</span><span class="token punctuation">.</span><span class="token function">invokeAdviceMethodWithGivenArgs</span><span class="token punctuation">(</span><span class="token class-name">AbstractAspectJAdvice</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">627</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span></span>AbstractAspectJAdvice</span><span class="token punctuation">.</span><span class="token function">invokeAdviceMethod</span><span class="token punctuation">(</span><span class="token class-name">AbstractAspectJAdvice</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">616</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span></span>AspectJAroundAdvice</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">AspectJAroundAdvice</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">70</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>ReflectiveMethodInvocation</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">ReflectiveMethodInvocation</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">168</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span></span>ExposeInvocationInterceptor</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">ExposeInvocationInterceptor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">92</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>ReflectiveMethodInvocation</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">ReflectiveMethodInvocation</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">179</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>framework<span class="token punctuation">.</span></span>CglibAopProxy</span>$<span class="token class-name">DynamicAdvisedInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">CglibAopProxy</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">672</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>workorder<span class="token punctuation">.</span>rest<span class="token punctuation">.</span></span>MeterController</span>$$<span class="token class-name">EnhancerBySpringCGLIB</span>$$<span class="token number">5</span>c8114a3<span class="token punctuation">.</span><span class="token function">getSuperTrend</span><span class="token punctuation">(</span><span class="token generics"><span class="token punctuation">&lt;</span>generated<span class="token punctuation">></span></span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>NativeMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">62</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">497</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">doInvoke</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">205</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>InvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeForRequest</span><span class="token punctuation">(</span><span class="token class-name">InvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">133</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletInvocableHandlerMethod</span><span class="token punctuation">.</span><span class="token function">invokeAndHandle</span><span class="token punctuation">(</span><span class="token class-name">ServletInvocableHandlerMethod</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">97</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">invokeHandlerMethod</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">854</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestMappingHandlerAdapter</span><span class="token punctuation">.</span><span class="token function">handleInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestMappingHandlerAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">765</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span>AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">AbstractHandlerMethodAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">85</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doDispatch</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">967</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServlet</span><span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">901</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">970</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">872</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">648</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>FrameworkServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">846</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">HttpServlet</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">729</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">230</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span>WsFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">WsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">52</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>ApplicationContextHeaderFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContextHeaderFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">55</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>comn<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span></span>CustomizeRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CustomizeRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">net<span class="token punctuation">.</span>bull<span class="token punctuation">.</span>javamelody<span class="token punctuation">.</span></span>MonitoringFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">MonitoringFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">239</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">net<span class="token punctuation">.</span>bull<span class="token punctuation">.</span>javamelody<span class="token punctuation">.</span></span>MonitoringFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">MonitoringFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">215</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>trace<span class="token punctuation">.</span></span>WebRequestTraceFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">WebRequestTraceFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">108</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>RequestContextFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">RequestContextFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">99</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>HttpPutFormContentFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpPutFormContentFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>HiddenHttpMethodFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HiddenHttpMethodFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">93</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>session<span class="token punctuation">.</span>web<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>SessionRepositoryFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">SessionRepositoryFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">167</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>session<span class="token punctuation">.</span>web<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>CharacterEncodingFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">197</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span>MetricsFilter</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">MetricsFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">106</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span>OncePerRequestFilter</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">OncePerRequestFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">107</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">internalDoFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">192</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>ApplicationFilterChain</span><span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ApplicationFilterChain</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">165</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardWrapperValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardWrapperValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">198</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardContextValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardContextValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>authenticator<span class="token punctuation">.</span></span>AuthenticatorBase</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">AuthenticatorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">474</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardHostValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardHostValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">140</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>valves<span class="token punctuation">.</span></span>ErrorReportValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">ErrorReportValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">79</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>StandardEngineValve</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">StandardEngineValve</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">87</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>CoyoteAdapter</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">CoyoteAdapter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">349</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span>http11<span class="token punctuation">.</span></span>Http11Processor</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">Http11Processor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">783</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProcessorLight</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProcessorLight</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">66</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>coyote<span class="token punctuation">.</span></span>AbstractProtocol</span>$<span class="token class-name">ConnectionHandler</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">AbstractProtocol</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">798</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>NioEndpoint</span>$<span class="token class-name">SocketProcessor</span><span class="token punctuation">.</span><span class="token function">doRun</span><span class="token punctuation">(</span><span class="token class-name">NioEndpoint</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1434</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>SocketProcessorBase</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SocketProcessorBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">49</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1142</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">617</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>threads<span class="token punctuation">.</span></span>TaskThread</span>$<span class="token class-name">WrappingRunnable</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TaskThread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">61</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">745</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><ul><li>修改char(1)为 varchar() 或 给定一个默认值</li><li>修改数据库方言： MySQL8Dialect<br>registerColumnType(Types.NULL, “string”);<br>registerHibernateType(Types.NULL,“string”);</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch 查询</title>
      <link href="/2022/06/29/elasticsearch-query/"/>
      <url>/2022/06/29/elasticsearch-query/</url>
      
        <content type="html"><![CDATA[<h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;_search&#123;    &quot;from&quot; : 0, &quot;size&quot; : 10,    &quot;query&quot; : &#123;        &quot;term&quot; : &#123; &quot;user&quot; : &quot;kimchy&quot; &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;_search&#123;   &quot;query&quot; : &#123;      &quot;term&quot; : &#123; &quot;product&quot; : &quot;chocolate&quot; &#125;   &#125;,   &quot;sort&quot; : [      &#123;&quot;price&quot; : &#123;&quot;order&quot; : &quot;asc&quot;, &quot;mode&quot; : &quot;avg&quot;&#125;&#125;   ]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="in-或者-not-in-查询"><a href="#in-或者-not-in-查询" class="headerlink" title="in 或者 not in 查询"></a>in 或者 not in 查询</h1><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;kibana_sample_data_logs&#x2F;_search&#123;  &quot;query&quot;: &#123;    &quot;bool&quot;: &#123;    &#x2F;&#x2F; must是：in 查询，must_not：是 not in 查询      &quot;must&quot;: [        &#123;          &quot;terms&quot;: &#123;            &quot;clientip&quot;: [&quot;118.151.35.151&quot;, &quot;254.207.11.2&quot;]          &#125;        &#125;      ]    &#125;  &#125;,  &quot;sort&quot;: [    &#123;      &quot;utc_time&quot;: &#123;        &quot;order&quot;: &quot;desc&quot;      &#125;    &#125;  ],  &quot;from&quot;: 0, &quot;size&quot;: 20&#125;BoolQueryBuilder boolBuilder &#x3D; QueryBuilders.boolQuery();boolBuilder.must(QueryBuilders.matchPhraseQuery(&quot;param&quot;, &quot;1&quot;));boolBuilder.must(QueryBuilders.matchPhraseQuery(&quot;param&quot;, &quot;2&quot;));boolBuilder.must(QueryBuilders.matchPhraseQuery(&quot;param&quot;, &quot;3&quot;));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="or-and-条件查询"><a href="#or-and-条件查询" class="headerlink" title="or and 条件查询"></a>or and 条件查询</h1><pre class="line-numbers language-none"><code class="language-none">1.must文档 必须 匹配这些条件才能被包含进来。相当于sql中的 and2.must_not文档 必须不 匹配这些条件才能被包含进来。相当于sql中的 not3.should如果满足这些语句中的任意语句，将增加 _score ，否则，无任何影响。它们主要用于修正每个文档的相关性得分。相当于sql中的or4.filter必须 匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。构造查询条件1. termQuery：精确查询（不分词）使用termQuery要注意的是，Elasticsearch5之后，取消了string类型，将原来的string类型拆分为text和keyword两种类型，他们的区别在于text会对字段进行分词处理，而keyword则不会。2. matchQuery：匹配查询（分词）match query搜索的时候，首先会解析查询字符串，进行分词，然后查询，所以假如我搜索的条件输入的是&quot;六年级&quot;，则会把各个年级（一年级至九年级）的数据都查询出来，因为其中都包含’年级’ 。3. queryString：精确查询4. wildcardQuery：模糊查询5. rangeQuery：范围查询<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="多字段搜索"><a href="#多字段搜索" class="headerlink" title="多字段搜索"></a>多字段搜索</h1><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;kibana_sample_data_logs&#x2F;_search&#123;  &quot;query&quot;: &#123;    &quot;multi_match&quot;: &#123;      &quot;query&quot;: &quot;你好 www.elastic.co Chrome&quot;,      &quot;fields&quot;: [&quot;message&quot;, &quot;host&quot;]    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="operator-可以设置为-or-默认-或者-and"><a href="#operator-可以设置为-or-默认-或者-and" class="headerlink" title="operator: 可以设置为 or(默认) 或者 and"></a>operator: 可以设置为 or(默认) 或者 and</h1><pre class="line-numbers language-none"><code class="language-none">和分词有关系：如：数据是：万里长城真伟大分词后：[&quot;万里长城&quot;, &quot;万里&quot;,&quot;万&quot;,&quot;里长&quot;,&quot;里&quot;,&quot;长城&quot; ...]为or时：索引库中，只要文档的content这个字段内容包含“万里长城”，“里”，“真”，“伟大”等任何一个分词，该条文档就会被索引到。为and时：索引库中，文档的content这个字段必须包含“万里长城”，“里”，“真”，“伟大”等所有分词 ，这就是and。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="java-api"><a href="#java-api" class="headerlink" title="java api"></a>java api</h1><p><a href="https://www.bbsmax.com/A/B0zqrrEZJv/">java api</a></p><h1 id="注意点-RefreshPolicy"><a href="#注意点-RefreshPolicy" class="headerlink" title="注意点 RefreshPolicy"></a>注意点 RefreshPolicy</h1><pre class="line-numbers language-none"><code class="language-none">默认情况下ElasticSearch索引的refresh_interval为1秒，这意味着数据写1秒才就可以被搜索到。每次索引refresh会产生一个新的 lucene 段，这会导致频繁的 segment merge 行为，对系统 CPU 和 IO 占用都比较高。如果产品对于实时性要求不高，则可以降低刷新周期，如：index.refresh_interval: 120s。但是这种特性对于功能测试来说比较麻烦：因为实时性不能保证，所以每次插入测试数据之后，都需要sleep一段时间，才能进行测试。因为实时性不能保证，及时通过sleep策略通过的case，也可能偶尔失败。为了解决上述问题，需要提供ElasticSearch增删改数据之后数据立即刷新的策略。可知有以下三种刷新策略：RefreshPolicy#IMMEDIATE:请求向ElasticSearch提交了数据，立即进行数据刷新，然后再结束请求。优点：实时性高、操作延时短。缺点：资源消耗高。RefreshPolicy#WAIT_UNTIL:请求向ElasticSearch提交了数据，等待数据完成刷新，然后再结束请求。优点：实时性高、操作延时长。缺点：资源消耗低。RefreshPolicy#NONE:默认策略。请求向ElasticSearch提交了数据，不关系数据是否已经完成刷新，直接结束请求。优点：操作延时短、资源消耗低。缺点：实时性低updateRequest.setRefreshPolicy(WriteRequest.RefreshPolicy.WAIT_UNTIL);每笔500ms以上，特别影响性能。尽量不要使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch重要的设置</title>
      <link href="/2022/06/27/elasticsearch-setting/"/>
      <url>/2022/06/27/elasticsearch-setting/</url>
      
        <content type="html"><![CDATA[<h1 id="1-堆大小检查"><a href="#1-堆大小检查" class="headerlink" title="1. 堆大小检查"></a>1. 堆大小检查</h1><blockquote><p>如果 JVM 以不相等的初始堆大小和最大堆大小启动，则在系统使用期间调整 JVM 堆的大小时，它很容易出现暂停。为避免这些调整大小暂停，最好在初始堆大小等于最大堆大小的情况下启动 JVM。此外，如果 bootstrap.memory_lock启用，JVM 将在启动时锁定堆的初始大小。如果初始堆大小不等于最大堆大小，则在调整大小后，所有 JVM 堆都不会锁定在内存中。要通过堆大小检查，您必须配置堆大小。<br>-xms: 1g &#x2F;&#x2F; 最小堆内存<br>-xmx: 1g &#x2F;&#x2F; 最大堆内存</p></blockquote><h1 id="2-文件描述符"><a href="#2-文件描述符" class="headerlink" title="2. 文件描述符"></a>2. 文件描述符</h1><blockquote><p>Elasticsearch 需要大量文件描述符（例如，每个分片由多个段和其他文件组成，加上与其他节点的连接等）。此引导检查在 OS X 和 Linux 上强制执行。要通过文件描述符检查，您可能必须配置文件描述符。<br><a href="https://blog.csdn.net/qq_32348883/article/details/124265412">https://blog.csdn.net/qq_32348883/article/details/124265412</a><br>ulimit -n 65535</p></blockquote><h1 id="3-内存锁定检查"><a href="#3-内存锁定检查" class="headerlink" title="3. 内存锁定检查"></a>3. 内存锁定检查</h1><blockquote><p>当 JVM 进行主要的垃圾回收时，它会触及堆的每一页。如果这些页面中的任何一个被换出到磁盘，则必须将它们换回内存。这会导致大量磁盘抖动，而 Elasticsearch 更愿意使用它来服务请求。有几种方法可以配置系统以禁止交换。一种方法是请求 JVM 通过mlockall(Unix) 或虚拟锁 (Windows) 将堆锁定在内存中。这是通过 Elasticsearch 设置完成的 bootstrap.memory_lock。但是，在某些情况下，可以将此设置传递给 Elasticsearch，但 Elasticsearch 无法锁定堆（例如，如果elasticsearch 用户没有memlock unlimited. 内存锁检查验证是否bootstrap.memory_lock设置已启用，JVM 已成功锁定堆。要通过内存锁定检查，您可能必须配置<br>bootstrap.memory_lock</p></blockquote><h1 id="4-最大线程数设置"><a href="#4-最大线程数设置" class="headerlink" title="4. 最大线程数设置"></a>4. 最大线程数设置</h1><blockquote><p>Elasticsearch 通过将请求分解为多个阶段并将这些阶段交给不同的线程池执行器来执行请求。Elasticsearch 中的各种任务都有不同的线程池执行器。因此，Elasticsearch 需要能够创建大量线程。最大线程数检查确保 Elasticsearch 进程在正常使用情况下有权创建足够多的线程。此检查仅在 Linux 上强制执行。如果您在 Linux 上，要通过最大线程数检查，您必须配置您的系统以允许 Elasticsearch 进程能够创建至少 <strong>4096</strong> 个线程。这可以通过&#x2F;etc&#x2F;security&#x2F;limits.conf 使用nproc设置来完成<br>ulimit -u 4096</p></blockquote><h1 id="5-文件大小设置"><a href="#5-文件大小设置" class="headerlink" title="5. 文件大小设置"></a>5. 文件大小设置</h1><blockquote><p>作为单个分片组件的段文件和作为 translog 组件的 translog 生成可能会变得很大（超过数 GB）。在 Elasticsearch 进程可以创建的最大文件大小受到限制的系统上，这可能会导致写入失败。因此，这里最安全的选择是最大文件大小是无限的，这就是最大文件大小引导检查所强制执行的。要通过最大文件检查，您必须将系统配置为允许 Elasticsearch 进程写入无限大小的文件。这可以通过 &#x2F;etc&#x2F;security&#x2F;limits.conf使用fsize设置来完成unlimited</p></blockquote><h1 id="6-最大大小虚拟内存检查"><a href="#6-最大大小虚拟内存检查" class="headerlink" title="6. 最大大小虚拟内存检查"></a>6. 最大大小虚拟内存检查</h1><blockquote><p>Elasticsearch 和 Lucene 用于mmap将索引的一部分映射到 Elasticsearch 地址空间，效果非常好。这使某些索引数据远离 JVM 堆，但在内存中以实现极快的访问。为使其有效，Elasticsearch 应具有无限的地址空间。最大大小虚拟内存检查强制 Elasticsearch 进程具有无限的地址空间，并且仅在 Linux 上强制执行。要通过最大大小虚拟内存检查，您必须将系统配置为允许 Elasticsearch 进程拥有无限地址空间的能力。这可以通过&#x2F;etc&#x2F;security&#x2F;limits.conf使用as设置来完成unlimited</p></blockquote><h1 id="7-max-map-count文件包含限制一个进程可以拥有的VMA-虚拟内存区域-的数量"><a href="#7-max-map-count文件包含限制一个进程可以拥有的VMA-虚拟内存区域-的数量" class="headerlink" title="7. max_map_count文件包含限制一个进程可以拥有的VMA(虚拟内存区域)的数量"></a>7. max_map_count文件包含限制一个进程可以拥有的VMA(虚拟内存区域)的数量</h1><blockquote><p>Elasticsearch 还需要能够创建许多内存映射区域。最大映射计数检查检查内核是否允许进程具有至少 262,144 个内存映射区域，并且仅在 Linux 上强制执行。要通过最大地图计数检查，您必须将vm.max_map_count 配置 sysctl 为至少262144.</p></blockquote><h1 id="8-系统调用过滤检查"><a href="#8-系统调用过滤检查" class="headerlink" title="8. 系统调用过滤检查"></a>8. 系统调用过滤检查</h1><blockquote><p>Elasticsearch 会根据操作系统（例如，Linux 上的 seccomp）安装各种风格的系统调用过滤器。安装这些系统调用过滤器是为了防止执行与分叉相关的系统调用，以此作为防御机制来抵御对 Elasticsearch 的任意代码执行攻击。系统调用过滤器检查确保如果启用了系统调用过滤器，则它们已成功安装。要通过系统调用过滤器检查，您必须修复系统上阻止系统调用过滤器安装的任何配置错误（检查您的日志），或者通过设置为来自行承担禁用系统调用过滤器的风险。bootstrap.system_call_filter: false</p></blockquote><h1 id="9-elasticsearch-yml"><a href="#9-elasticsearch-yml" class="headerlink" title="9. elasticsearch.yml"></a>9. elasticsearch.yml</h1><table><thead><tr><th>配置key</th><th>配置value</th><th>说明</th><th>example</th></tr></thead><tbody><tr><td>path.logs</td><td>&#x2F;var&#x2F;log&#x2F;elasticsearch</td><td>日志保存的文件路径</td><td></td></tr><tr><td>path.data</td><td>&#x2F;var&#x2F;data&#x2F;elasticsearch</td><td>数据保存的文件路径</td><td></td></tr><tr><td><a href="http://cluster.name/">cluster.name</a></td><td>myes</td><td>集群名称</td><td></td></tr><tr><td><a href="http://node.name/">node.name</a></td><td>node1</td><td>节点名称</td><td>node.name&#x3D;${} HOSTNAME</td></tr><tr><td>network.host</td><td>192.168.1.1</td><td>网络IP设置</td><td></td></tr><tr><td>discovery.zen.ping.unicast.hosts</td><td>[“192.168.1.11”,“192.168.1.12”,“192.168.1.13”]</td><td>集群发现其他节点机器配置</td><td></td></tr><tr><td>discovery.zen.minimum_master_nodes</td><td>2</td><td>避免脑裂设置，设置形成集群最少需要的票数。计算公式：(master_eligible_nodes &#x2F; 2) + 1 必须超过所有机器的一半</td><td></td></tr></tbody></table><h1 id="10-jvm-options"><a href="#10-jvm-options" class="headerlink" title="10. jvm.options"></a>10. jvm.options</h1><pre class="line-numbers language-none"><code class="language-none">设置Xms和Xmx不超过物理 RAM 的 50%，以确保有足够的物理 RAM 留给内核文件系统缓存。- Xms2g - Xmx2g请注意，Elasticsearch 附带的默认 JVM 配置将 Elasticsearch 配置为使用 CMS 收集器。-XX:+UseSerialGC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch8.2集群安装部署</title>
      <link href="/2022/05/18/elasticsearch8-2-install/"/>
      <url>/2022/05/18/elasticsearch8-2-install/</url>
      
        <content type="html"><![CDATA[<h1 id="1-下载"><a href="#1-下载" class="headerlink" title="- 1. 下载"></a>- 1. 下载</h1><pre class="line-numbers language-none"><code class="language-none">[elasticsearch下载地址](https:&#x2F;&#x2F;www.elastic.co&#x2F;start)[elasticsearch下载地址](https:&#x2F;&#x2F;www.elastic.co&#x2F;downloads&#x2F;elasticsearch)[elasticsearch版本支持](https:&#x2F;&#x2F;www.elastic.co&#x2F;support&#x2F;matrix)[elastic8.2 文档](https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;8.2&#x2F;index.html)[中文文档（有些东西可能过时）](https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;cn&#x2F;elasticsearch&#x2F;guide&#x2F;current&#x2F;index.html)[elasticsearch概念介绍](http:&#x2F;&#x2F;t.zoukankan.com&#x2F;kevingrace-p-10682264.html)[运维指南](https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1836799)[客户端](https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;client&#x2F;index.html)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-集群配置文件"><a href="#2-集群配置文件" class="headerlink" title="- 2. 集群配置文件"></a>- 2. 集群配置文件</h1><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">cluster.name</span><span class="token punctuation">:</span> myes<span class="token key atrule">node.name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span><span class="token number">1</span><span class="token key atrule">network.host</span><span class="token punctuation">:</span> 127.0.0.1<span class="token comment">#transport.tcp.port: 9300</span><span class="token key atrule">http.port</span><span class="token punctuation">:</span> <span class="token number">9200</span><span class="token key atrule">http.cors.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">http.cors.allow-origin</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span class="token key atrule">discovery.seed_hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"127.0.0.1:9300"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1:9301"</span><span class="token punctuation">,</span><span class="token string">"127.0.0.1:9302"</span><span class="token punctuation">]</span><span class="token key atrule">cluster.initial_master_nodes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"127.0.0.1:9300"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1:9301"</span><span class="token punctuation">,</span><span class="token string">"127.0.0.1:9302"</span><span class="token punctuation">]</span><span class="token key atrule">path.data</span><span class="token punctuation">:</span> ./data<span class="token key atrule">path.logs</span><span class="token punctuation">:</span> ./logs<span class="token comment"># 不需要认证设置成 false </span><span class="token key atrule">xpack.security.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">xpack.security.transport.ssl.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">xpack.security.transport.ssl.verification_mode</span><span class="token punctuation">:</span> certificate<span class="token comment"># 证书的位置</span><span class="token key atrule">xpack.security.transport.ssl.keystore.path</span><span class="token punctuation">:</span> certs/elastic<span class="token punctuation">-</span>certificates.p12<span class="token key atrule">xpack.security.transport.ssl.truststore.path</span><span class="token punctuation">:</span> certs/elastic<span class="token punctuation">-</span>certificates.p12注意 ：在一台机器上生成 elastic<span class="token punctuation">-</span>certificates.p12 后，将文件复制到其他机器上不能重新生成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-集群认证设置"><a href="#3-集群认证设置" class="headerlink" title="- 3. 集群认证设置"></a>- 3. 集群认证设置</h1><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">1. 配置文件需设置<span class="token key atrule">xpack.security.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">xpack.security.transport.ssl.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">xpack.security.transport.ssl.verification_mode</span><span class="token punctuation">:</span> certificate<span class="token key atrule">xpack.security.transport.ssl.keystore.path</span><span class="token punctuation">:</span> certs/elastic<span class="token punctuation">-</span>certificates.p12<span class="token key atrule">xpack.security.transport.ssl.truststore.path</span><span class="token punctuation">:</span> certs/elastic<span class="token punctuation">-</span>certificates.p122. 生成通讯证书./bin/elasticsearch<span class="token punctuation">-</span>certutil ca./bin/elasticsearch<span class="token punctuation">-</span>certutil cert <span class="token punctuation">-</span><span class="token punctuation">-</span>ca elastic<span class="token punctuation">-</span>stack<span class="token punctuation">-</span>ca.p12mkdir config/certsmv <span class="token important">*.p12</span> config/certs3. 所有节点设置节点通信密码（因每个节点使用相同的证书文件）必须设置所有集群的证书密码./bin/elasticsearch<span class="token punctuation">-</span>keystore add xpack.security.transport.ssl.keystore.secure_password./bin/elasticsearch<span class="token punctuation">-</span>keystore add xpack.security.transport.ssl.truststore.secure_password4. 设置账号密码，elastic 集群内置的一些账号密码./bin/elasticsearch<span class="token punctuation">-</span>setup<span class="token punctuation">-</span>passwords interactive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-java-lang-RuntimeException-can-not-run-elasticsearch-as-root"><a href="#4-java-lang-RuntimeException-can-not-run-elasticsearch-as-root" class="headerlink" title="- 4. java.lang.RuntimeException: can not run elasticsearch as root"></a>- 4. java.lang.RuntimeException: can not run elasticsearch as root</h1><pre class="line-numbers language-base" data-language="base"><code class="language-base">groupadd elasticuseradd elastic -g elasticpasswd elasticchown -R elastic:elastic elasticsearch-8.2.0su elastic.&#x2F;bin&#x2F;elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-org-elasticsearch-ElasticsearchException-Failure-running-machine-learning-native-code-This-could-be-due-to-running-on-an-unsupported-OS-or-distribution-missing-OS-libraries-or-a-problem-with-the-temp-directory-To-bypass-this-problem-by-running-Elasticsearch-without-machine-learning-functionality-set-xpack-ml-enabled-false"><a href="#5-org-elasticsearch-ElasticsearchException-Failure-running-machine-learning-native-code-This-could-be-due-to-running-on-an-unsupported-OS-or-distribution-missing-OS-libraries-or-a-problem-with-the-temp-directory-To-bypass-this-problem-by-running-Elasticsearch-without-machine-learning-functionality-set-xpack-ml-enabled-false" class="headerlink" title="- 5. org.elasticsearch.ElasticsearchException: Failure running machine learning native code. This could be due to running on an unsupported OS or distribution, missing OS libraries, or a problem with the temp directory. To bypass this problem by running Elasticsearch without machine learning functionality set [xpack.ml.enabled: false]."></a>- 5. org.elasticsearch.ElasticsearchException: Failure running machine learning native code. This could be due to running on an unsupported OS or distribution, missing OS libraries, or a problem with the temp directory. To bypass this problem by running Elasticsearch without machine learning functionality set [xpack.ml.enabled: false].</h1><pre class="line-numbers language-none"><code class="language-none">编辑：config\elasticsearch.yml增加配置：xpack.ml.enabled: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="6-bootstrap-check-failure-1-of-2-max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144"><a href="#6-bootstrap-check-failure-1-of-2-max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144" class="headerlink" title="- 6. bootstrap check failure [1] of [2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]"></a>- 6. bootstrap check failure [1] of [2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</h1><pre class="line-numbers language-none"><code class="language-none">修改：sysctl -w vm.max_map_count&#x3D;262144查看：sysctl -a | grep vm.max_map_count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="7-bootstrap-check-failure-1-of-1-system-call-filters-failed-to-install-check-the-logs-and-fix-your-configuration"><a href="#7-bootstrap-check-failure-1-of-1-system-call-filters-failed-to-install-check-the-logs-and-fix-your-configuration" class="headerlink" title="- 7. bootstrap check failure [1] of [1]: system call filters failed to install; check the logs and fix your configuration"></a>- 7. bootstrap check failure [1] of [1]: system call filters failed to install; check the logs and fix your configuration</h1><pre class="line-numbers language-none"><code class="language-none">修改： config\elasticsearch.ymlbootstrap.memory_lock: falsebootstrap.system_call_filter: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="8-查询-ES-集群状态"><a href="#8-查询-ES-集群状态" class="headerlink" title="- 8. 查询 ES 集群状态"></a>- 8. 查询 ES 集群状态</h1><p><a href="https://www.cnblogs.com/aping-blog/p/16066928.html">https://www.cnblogs.com/aping-blog/p/16066928.html</a></p><p><a href="/archives/elasticsearch-zhong-yao-de-she-zhi" title="elasticsearch重要的设置">上一篇 </a><a href="/archives/oauth2jwt" title="oauth2 jwt">下一篇</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>quartz启动执行流程</title>
      <link href="/2022/03/04/quartz-workflow/"/>
      <url>/2022/03/04/quartz-workflow/</url>
      
        <content type="html"><![CDATA[<p>spring 整合 quartz 初始化执行流程, 写的不是一般乱</p><blockquote><p>SchedulerFactoryBean.afterPropertiesSet()<br>-&gt; prepareSchedulerFactory()<br>-&gt; initSchedulerFactory() 初始化StdSchedulerFactory<br>-&gt; prepareScheduler(SchedulerFactory schedulerFactory)<br>-&gt; createScheduler() 创建调度器<br>-&gt; StdSchedulerFactory.getScheduler()<br>-&gt; instantiate()</p></blockquote><ol><li>初始化 读取 quartz.properties 中的配置</li><li>实例化 QuartzSchedulerResources -&gt;<br>a. 初始化 JobStore （JobStoreSupport）<br>b. 初始化 SimpleThreadPool -&gt; initialize()<br>… 等等其他信息</li><li>实例化 QuartzScheduler<br>a. 实例化 QuartzSchedulerThread<br>b. QuartzSchedulerResources.getThreadExecutor().execute(QuartzSchedulerThread)<br>b1. QuartzSchedulerThread.run() -&gt; getJobStore().acquireNextTriggers() 获取可以执行的触发器 -&gt; 根据触发器获取job的详细信息 getJobStore().triggersFired(triggers) 封装成对象 TriggerFiredResult -&gt; TriggerFiredBundle<br>b2. 根据 TriggerFiredBundle 创建任务执行脚本 -&gt; getJobRunShellFactory().createJobRunShell(TriggerFiredBundle); -&gt; shell.initialize(this.qs);<br>b3. 将任务添加进WorkerThread： getThreadPool().runInThread(shell)<br>b4. 执行具体任务：JobRunShell.run() -&gt; 获取 JobDetail</li></ol><p>-&gt; SchedulerFactoryBean.start() 什么时机触发start： SchedulerFactoryBean 实现了 SmartLifecycle 接口, 在 spring 容器初始化完成后，会调用 AbstractApplicationContext.finishRefresh()<br>-&gt; ClusterManager.initialize() -&gt; this.manage() -&gt; run()</p><h3 id="问题1-前面初始化是就已经提交另一个线程-QuartzSchedulerResources-getThreadExecutor-execute-QuartzSchedulerThread-执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？"><a href="#问题1-前面初始化是就已经提交另一个线程-QuartzSchedulerResources-getThreadExecutor-execute-QuartzSchedulerThread-执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？" class="headerlink" title="问题1. 前面初始化是就已经提交另一个线程 QuartzSchedulerResources.getThreadExecutor().execute(QuartzSchedulerThread) 执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？"></a>问题1. 前面初始化是就已经提交另一个线程 QuartzSchedulerResources.getThreadExecutor().execute(QuartzSchedulerThread) 执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？</h3><blockquote><p>答： QuartzSchedulerThread 中有个变量 paused 初始化时为 true ，则该线程一直处于轮询死循环状态，在调用 QuartzScheduler.start() 方法里面 this.schedThread.togglePause(false); 设置成 false ,则 QuartzSchedulerThread 才能去执行数据库任务扫描加载</p></blockquote><h3 id="问题2-如何感知集群中其他机器？"><a href="#问题2-如何感知集群中其他机器？" class="headerlink" title="问题2. 如何感知集群中其他机器？"></a>问题2. 如何感知集群中其他机器？</h3><blockquote><p>答： 在 QuartzScheduler.start() 启动时会调用 QuartzSchedulerResources.getJobStore().schedulerStarted() 启动一个集群管理线程来感知 new JobStoreSupport.ClusterManager() -&gt; this.manage() -&gt; doCheckin()<br>每个机器启动时都会执行签入动作，如果是第一次签入则新增记录到表qrtz_scheduler_state中并设置签入时间，如果不是第一次则更新签入时间，感知同一集群根据 SCHED_NAME 来判断是否有集群机器离线<br>protected long calcFailedIfAfter(SchedulerStateRecord rec) {<br>return rec.getCheckinTimestamp() + Math.max(rec.getCheckinInterval(), System.currentTimeMillis() - this.lastCheckin) + 7500L &gt; 当前时间;<br>}<br>如果扫描到有机器离线，则锁定 STATE_ACCESS 并再次检查是否有离线的机器，如果还是检查到，则锁定 TRIGGER_ACCESS 扫描表 qrtz_fired_triggers 判断触发器的状态，释放 blocked triggers -&gt; STATE_WAITING 和 acquired triggers -&gt; STATE_PAUSED 。如果 job 设置了失效转移 isJobRequestsRecovery ，则更新表 qrtz_triggers 触发器为等待执行状态（WAITING），最后删除 deleteFiredTriggers 表的数据</p></blockquote><h3 id="根据上面的描述，有个问题：什么时候新增-qrtz-fired-triggers-表的数据呢？"><a href="#根据上面的描述，有个问题：什么时候新增-qrtz-fired-triggers-表的数据呢？" class="headerlink" title="根据上面的描述，有个问题：什么时候新增 qrtz_fired_triggers 表的数据呢？"></a>根据上面的描述，有个问题：什么时候新增 qrtz_fired_triggers 表的数据呢？</h3><blockquote><p>答： QuartzSchedulerThread -&gt; acquireNextTrigger() 会新增那个机器执行了triggers 的记录激活了所有的触发器，则其他的机器根据抢占锁来获得执行触发器的权利， 执行acquireNextTrigger()方法时会抢占锁， quart 不支持任务分片，只能在一个机器上执行</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea常用插件</title>
      <link href="/2022/03/02/idea-plugin/"/>
      <url>/2022/03/02/idea-plugin/</url>
      
        <content type="html"><![CDATA[<ul><li>alibaba java coding guidelines 代码规范</li><li>git commit template git提交模板</li><li>ide eval reset</li><li>java bean to json</li><li>SequenceDiagram 代码时序图</li><li>SonarLint 代码规范</li><li>Translation 翻译</li><li>JRebel or XRebel 热部署</li><li>RESTfultoolkit</li><li>MyBatisCodeHelper-Pro</li></ul>]]></content>
      
      
      <categories>
          
          <category> Default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Default </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xxl-job执行流程和原理</title>
      <link href="/2022/02/24/xxljob-workflow/"/>
      <url>/2022/02/24/xxljob-workflow/</url>
      
        <content type="html"><![CDATA[<h2 id="xxl-job项目地址-👈"><a href="#xxl-job项目地址-👈" class="headerlink" title="xxl-job项目地址 👈"></a><a href="https://github.com/xuxueli/xxl-job">xxl-job项目地址 👈</a></h2><p><img src="/img/xxljob%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%92%8C%E5%8E%9F%E7%90%86.png" alt="xxljob执行流程和原理.png"><br><img src="/img/xxljob%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="xxljob架构图.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot redis 死锁问题</title>
      <link href="/2021/09/29/spring-redis-cache-lock/"/>
      <url>/2021/09/29/spring-redis-cache-lock/</url>
      
        <content type="html"><![CDATA[<h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><ul><li>调用某个使用了 @Cacheable 的接口，一直没有响应，但是业务代码都执行完成。 如果使用的是 lockingRedisCacheWriter 实例化的缓存，那么在开发阶段不断重启应用强制杀掉进程，会导致锁没有释放问题。</li></ul><h1 id="缓存注解"><a href="#缓存注解" class="headerlink" title="缓存注解"></a>缓存注解</h1><p>@Cacheable、@CacheEvict、@CachePut、@Caching</p><h1 id="spring-redis-的实现"><a href="#spring-redis-的实现" class="headerlink" title="spring redis 的实现"></a>spring redis 的实现</h1><p>RedisCacheManager、RedisCache 核心类<br>其中 RedisCache 实现了 redis 具体的缓存方式和执行的redis命令</p><p>创建缓存时的 cacheNames<br>其中定义了 RedisCacheMetadata.class 会生成一个 cacheLockName &#x3D; cacheName + “~lock” 的缓存锁的 key</p><p>在 get 缓存时，判断 redis 有没有缓存这个 key，没有则创建这个缓存，调用的是new RedisCache.RedisWriteThroughCallback().doInRedis()，其中第一步就是 lock() ，使用的就是上面的那个缓存锁的 key ，并且没有设置超时时间，代码如下，当这个缓存锁的 key 早已在 redis 中存在，那下的代码就是死循环，直到redis连接耗尽服务不可用。</p><h1 id="解决方法就是删除这个key"><a href="#解决方法就是删除这个key" class="headerlink" title="解决方法就是删除这个key"></a>解决方法就是删除这个key</h1><p>线程 BLOCKED 分析：<br>执行代码 xxx 时使用了缓存注解 @Cacheable ，该注解实现最终是通过 org.springframework.data.redis.cache.DefaultRedisCacheWriter.get() 获取redis 是否存在缓存，源码如下：（spring-data-redis 2.3.4 Release 版本）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Assert</span><span class="token punctuation">.</span>*notNull<span class="token operator">*</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> “<span class="token class-name">Name</span> must not be <span class="token keyword">null</span><span class="token operator">!</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">Assert</span><span class="token punctuation">.</span>*notNull<span class="token operator">*</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> “<span class="token class-name">Key</span> must not be <span class="token keyword">null</span><span class="token operator">!</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token punctuation">(</span>connection<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> connection<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 执行 execute</span><span class="token keyword">private</span> <span class="token class-name">T</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisConnection</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">></span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">RedisConnection</span> connection <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>connectionFactory<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">Object</span> var4<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkAndPotentiallyWaitUntilUnlocked</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span> var4 <span class="token operator">=</span> callback<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>      connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> var4<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token comment">// 执行加锁逻辑 checkAndPotentiallyWaitUntilUnlocked</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">checkAndPotentiallyWaitUntilUnlocked</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">RedisConnection</span> connection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLockingCacheWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">try</span> <span class="token punctuation">&#123;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doCheckLock</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">Thread</span><span class="token punctuation">.</span>*sleep<span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sleepTime<span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span>*currentThread<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">PessimisticLockingFailureException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span>*format<span class="token operator">*</span><span class="token punctuation">(</span>“<span class="token class-name">Interrupted</span> <span class="token keyword">while</span> waiting <span class="token keyword">to</span> <span class="token namespace">unlock</span> cache <span class="token operator">%</span>s”<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取锁 判断这个锁 key 是否存在，如果存在就一直循环等待锁资源,但是通过在 redis 服务器又没有找到相关的 ～lock</span><span class="token keyword">boolean</span> <span class="token function">doCheckLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">RedisConnection</span> connection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">return</span> connection<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token operator">*</span>createCacheLockKey<span class="token operator">*</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token comment">// 创建锁 key</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">createCacheLockKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">return</span> <span class="token punctuation">(</span>name <span class="token operator">+</span> “<span class="token operator">~</span>lock”<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span>*<span class="token constant">UTF_8</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>代码和注释得知加锁逻辑导致一直在等待中的状态，导致线程阻塞。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p>经源码跟踪发现有两种实现： nonLockingRedisCacheWriter 和 lockingRedisCacheWriter ，默认是通过 nonLockingRedisCacheWriter 实例化的，源码如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RedisCacheWriter</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">static</span> <span class="token class-name">RedisCacheWriter</span> <span class="token function">nonLockingRedisCacheWriter</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> connectionFactory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Assert</span><span class="token punctuation">.</span>*notNull<span class="token operator">*</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">,</span> “<span class="token class-name">ConnectionFactory</span> must not be <span class="token keyword">null</span><span class="token operator">!</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultRedisCacheWriter</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">static</span> <span class="token class-name">RedisCacheWriter</span> <span class="token function">lockingRedisCacheWriter</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> connectionFactory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Assert</span><span class="token punctuation">.</span>*notNull<span class="token operator">*</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">,</span> “<span class="token class-name">ConnectionFactory</span> must not be <span class="token keyword">null</span><span class="token operator">!</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultRedisCacheWriter</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span>*ofMillis<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">50L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Duration</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">putIfAbsent</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Duration</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token function">clean</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在实例化缓存管理组件时指定无锁缓存，可以避免获取缓存加锁问题。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jdk tools jvm jmap jstat jstack</title>
      <link href="/2021/07/02/jdk-tools/"/>
      <url>/2021/07/02/jdk-tools/</url>
      
        <content type="html"><![CDATA[<h3 id="jmap输出内存快照"><a href="#jmap输出内存快照" class="headerlink" title="jmap输出内存快照"></a>jmap输出内存快照</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jmap <span class="token parameter variable">-dump:format</span><span class="token operator">=</span>b,file<span class="token operator">=</span>/data/jmap.hprof PID增加GC日志<span class="token parameter variable">-XX:+HeapDumpOnOutOfMemoryError</span> -Xloggc:/data/tomcat/logs/gc.log <span class="token parameter variable">-XX:+PrintGCDateStamps</span> <span class="token parameter variable">-XX:+PrintGCDetails</span> <span class="token parameter variable">-XX:+PrintGCApplicationStoppedTime</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="jstat-查看GC信息"><a href="#jstat-查看GC信息" class="headerlink" title="jstat 查看GC信息"></a>jstat 查看GC信息</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">3000</span> 是指定的频率jstat <span class="token parameter variable">-gcutil</span> PID <span class="token number">3000</span>使用jstat -gccause：额外输出上次GC原因<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="jstack-死锁问题"><a href="#jstack-死锁问题" class="headerlink" title="jstack 死锁问题"></a>jstack 死锁问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jstack主要的用途是打印出Thread dumpjstack pid  <span class="token operator">></span> ./stack.log选项作用<span class="token parameter variable">-F</span>当正常输出请求不被响应时，强制输出线程堆栈<span class="token parameter variable">-l</span>除堆栈外，显示关于锁的附加信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sz-下载大文件问题"><a href="#sz-下载大文件问题" class="headerlink" title="sz 下载大文件问题"></a>sz 下载大文件问题</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 把iso切分成500M大小的文件</span><span class="token function">cat</span> xxx文件 <span class="token operator">|</span> <span class="token function">split</span> <span class="token parameter variable">-b</span> 500M - xxx_1<span class="token comment"># 切分后都是以 .aa   .ab  .ac .... 类似这样的结构</span><span class="token comment"># sz 下载</span>sz xxx_1a*<span class="token comment"># 合并文件</span><span class="token function">cat</span> xxx* <span class="token operator">></span> xxx_1<span class="token comment"># windows 文件合并</span>copy /b ＜filename1＞+＜filename2＞+…+＜filenameN＞ ＜新filename＞<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webservice 的两种调用方式</title>
      <link href="/2021/05/26/webservice-call/"/>
      <url>/2021/05/26/webservice-call/</url>
      
        <content type="html"><![CDATA[<h3 id="CXF"><a href="#CXF" class="headerlink" title="CXF"></a>CXF</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebserviceConfiguration</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> targetEndpointAddress<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> targetNameSpace<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> operationName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> soapActionURI<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> binding<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> useSOAPAction<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> timeout<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">SOAPHeaderElement</span> soapHeaderElement<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">SOAPConstants</span> soapConstants<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Object</span> params<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isObject<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isArg0<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTargetEndpointAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> targetEndpointAddress<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTargetEndpointAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> targetEndpointAddress<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>targetEndpointAddress <span class="token operator">=</span> targetEndpointAddress<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTargetNameSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> targetNameSpace<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTargetNameSpace</span><span class="token punctuation">(</span><span class="token class-name">String</span> targetNameSpace<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>targetNameSpace <span class="token operator">=</span> targetNameSpace<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getOperationName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> operationName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOperationName</span><span class="token punctuation">(</span><span class="token class-name">String</span> operationName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>operationName <span class="token operator">=</span> operationName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSoapActionURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> soapActionURI<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSoapActionURI</span><span class="token punctuation">(</span><span class="token class-name">String</span> soapActionURI<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>soapActionURI <span class="token operator">=</span> soapActionURI<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getUseSOAPAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> useSOAPAction<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUseSOAPAction</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> useSOAPAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>useSOAPAction <span class="token operator">=</span> useSOAPAction<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">SOAPHeaderElement</span> <span class="token function">getSoapHeaderElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> soapHeaderElement<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSoapHeaderElement</span><span class="token punctuation">(</span><span class="token class-name">SOAPHeaderElement</span> soapHeaderElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>soapHeaderElement <span class="token operator">=</span> soapHeaderElement<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> params<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParams</span><span class="token punctuation">(</span><span class="token class-name">Object</span> params<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>params <span class="token operator">=</span> params<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">SOAPConstants</span> <span class="token function">getSoapConstants</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> soapConstants<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSoapConstants</span><span class="token punctuation">(</span><span class="token class-name">SOAPConstants</span> soapConstants<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>soapConstants <span class="token operator">=</span> soapConstants<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> timeout<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>timeout <span class="token operator">=</span> timeout<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> binding<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBinding</span><span class="token punctuation">(</span><span class="token class-name">String</span> binding<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>binding <span class="token operator">=</span> binding<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> isObject<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setObject</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> object<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        isObject <span class="token operator">=</span> object<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isArg0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> isArg0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setArg0</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> arg0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        isArg0 <span class="token operator">=</span> arg0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSON</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">JSONSerializer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SimplePropertyPreFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>knowledge<span class="token punctuation">.</span>thirdapi<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">WebserviceResultVo</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>cxf<span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span></span><span class="token class-name">Client</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>cxf<span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span></span><span class="token class-name">ClientImpl</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>cxf<span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span></span><span class="token class-name">Endpoint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>cxf<span class="token punctuation">.</span>jaxws<span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span></span><span class="token class-name">JaxWsDynamicClientFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>cxf<span class="token punctuation">.</span>service<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ObjectUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>activation<span class="token punctuation">.</span></span><span class="token class-name">DataHandler</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>namespace<span class="token punctuation">.</span></span><span class="token class-name">QName</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">PropertyDescriptor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CxfWebserviceUtils</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">CxfWebserviceUtils</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SimplePropertyPreFilter</span> <span class="token constant">PROPERTY_PRE_FILTER</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimplePropertyPreFilter</span><span class="token punctuation">(</span><span class="token class-name">DataHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">JSONSerializer</span> serializer<span class="token punctuation">,</span> <span class="token class-name">Object</span> source<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClazz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClazz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInstance</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>serializer<span class="token punctuation">,</span> source<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">WebserviceResultVo</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">WebserviceConfiguration</span> configuration<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"CxfWebserviceUtils parmas:&#123;&#125;"</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span><span class="token constant">PROPERTY_PRE_FILTER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">JaxWsDynamicClientFactory</span> factory <span class="token operator">=</span> <span class="token class-name">JaxWsDynamicClientFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Client</span> client <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createClient</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getTargetEndpointAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">QName</span> method <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getTargetNameSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">.</span><span class="token function">getOperationName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Object</span> returnData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">ClientImpl</span> client1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ClientImpl</span><span class="token punctuation">)</span> client<span class="token punctuation">;</span>                <span class="token class-name">Endpoint</span> endpoint <span class="token operator">=</span> client1<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ServiceInfo</span> serviceInfo <span class="token operator">=</span> endpoint<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getServiceInfos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">QName</span> service <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getTargetNameSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> configuration<span class="token punctuation">.</span><span class="token function">getBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">BindingInfo</span> binding <span class="token operator">=</span> serviceInfo<span class="token punctuation">.</span><span class="token function">getBinding</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">BindingOperationInfo</span> bindingOperation <span class="token operator">=</span> binding<span class="token punctuation">.</span><span class="token function">getOperation</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">BindingMessageInfo</span> input <span class="token operator">=</span> bindingOperation<span class="token punctuation">.</span><span class="token function">getInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">MessagePartInfo</span> messagePartInfo <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getMessageParts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> typeClass <span class="token operator">=</span> messagePartInfo<span class="token punctuation">.</span><span class="token function">getTypeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">isArg0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    typeClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PropertyDescriptor</span><span class="token punctuation">(</span><span class="token string">"arg0"</span><span class="token punctuation">,</span> typeClass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Object</span> o <span class="token operator">=</span> typeClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">Map</span> params <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">)</span> configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> o1 <span class="token operator">:</span> params<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">PropertyDescriptor</span> descriptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PropertyDescriptor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">,</span> typeClass<span class="token punctuation">)</span><span class="token punctuation">;</span>                        descriptor<span class="token punctuation">.</span><span class="token function">getWriteMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">List</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">List</span> params <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span> configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> typeClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> declaredFields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">PropertyDescriptor</span> descriptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PropertyDescriptor</span><span class="token punctuation">(</span>declaredFields<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> typeClass<span class="token punctuation">)</span><span class="token punctuation">;</span>                        descriptor<span class="token punctuation">.</span><span class="token function">getWriteMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> invoke <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>invoke<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    returnData <span class="token operator">=</span> invoke<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">Map</span> params <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">)</span> configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    o <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">List</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">List</span> params <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span> configuration<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    o <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> invoke <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>invoke<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    returnData <span class="token operator">=</span> invoke<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token comment">//            Object[] invoke = client.invoke(method, ((List)configuration.getParams()).toArray());</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>returnData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"CxfWebserviceUtils response:&#123;&#125;"</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>returnData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">WebserviceResultVo</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>returnData<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"CxfWebserviceUtils response is null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">WebserviceResultVo</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"response is null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"CxfWebserviceUtils error!"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">WebserviceResultVo</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Axis"><a href="#Axis" class="headerlink" title="Axis"></a>Axis</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Call</span> call <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>axis<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>Service</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置超时时间</span><span class="token comment">//      call.setTimeout(new Integer(20000));</span>        <span class="token comment">//设置目标接口的地址</span>        call<span class="token punctuation">.</span><span class="token function">setTargetEndpointAddress</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// </span>        call<span class="token punctuation">.</span><span class="token function">setSOAPActionURI</span><span class="token punctuation">(</span>soapActionURI<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加头部信息</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>authDto<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">SOAPHeaderElement</span> soapHeaderElement <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SOAPHeaderElement</span><span class="token punctuation">(</span>targetNameSpace<span class="token punctuation">,</span> <span class="token string">"AuthenticationInfo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//设置参数名称和值</span>            soapHeaderElement<span class="token punctuation">.</span><span class="token function">addChildElement</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTextNode</span><span class="token punctuation">(</span>authDto<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            soapHeaderElement<span class="token punctuation">.</span><span class="token function">addChildElement</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTextNode</span><span class="token punctuation">(</span>authDto<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            soapHeaderElement<span class="token punctuation">.</span><span class="token function">addChildElement</span><span class="token punctuation">(</span><span class="token string">"authentication"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTextNode</span><span class="token punctuation">(</span>authDto<span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            soapHeaderElement<span class="token punctuation">.</span><span class="token function">addChildElement</span><span class="token punctuation">(</span><span class="token string">"locale"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTextNode</span><span class="token punctuation">(</span>authDto<span class="token punctuation">.</span><span class="token function">getLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            soapHeaderElement<span class="token punctuation">.</span><span class="token function">addChildElement</span><span class="token punctuation">(</span><span class="token string">"timeZone"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTextNode</span><span class="token punctuation">(</span>authDto<span class="token punctuation">.</span><span class="token function">getTimezone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            call<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span>soapHeaderElement<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//设置字符编码</span>        call<span class="token punctuation">.</span><span class="token function">setEncodingStyle</span><span class="token punctuation">(</span><span class="token class-name">CharEncoding</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置返回值类型</span>        call<span class="token punctuation">.</span><span class="token function">setReturnClass</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        call<span class="token punctuation">.</span><span class="token function">setReturnType</span><span class="token punctuation">(</span><span class="token class-name">XMLType</span><span class="token punctuation">.</span><span class="token constant">XSD_STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        call.setReturnType(XMLType.SOAP_ARRAY);</span>        <span class="token comment">// 设置具体调用的方法名 // WSDL里面描述的接口名称</span>        call<span class="token punctuation">.</span><span class="token function">setOperationName</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>targetNameSpace<span class="token punctuation">,</span> methodName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        call<span class="token punctuation">.</span><span class="token function">setUseSOAPAction</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 文件流</span>call<span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>targetNameSpace<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">XMLType</span><span class="token punctuation">.</span><span class="token constant">SOAP_BASE64BINARY</span><span class="token punctuation">,</span> <span class="token class-name">ParameterMode</span><span class="token punctuation">.</span><span class="token constant">IN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>call<span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>targetNameSpace<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">XMLType</span><span class="token punctuation">.</span><span class="token constant">XSD_STRING</span><span class="token punctuation">,</span> <span class="token class-name">ParameterMode</span><span class="token punctuation">.</span><span class="token constant">IN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">Object</span> returnData <span class="token operator">=</span> call<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>paramValues<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP</title>
      <link href="/2021/02/23/Spring-AOP/"/>
      <url>/2021/02/23/Spring-AOP/</url>
      
        <content type="html"><![CDATA[<h3 id="AOP-概念"><a href="#AOP-概念" class="headerlink" title="AOP 概念"></a>AOP 概念</h3><ul><li>Aspect：<ul><li>Aspect 声明类似于 Java 中的类声明，在 Aspect 中会包含着一些 Pointcut 以及相应的 Advice。</li></ul></li><li>Joint point：<ul><li>表示在程序中明确定义的点，典型的包括方法调用，对类成员的访问以及异常处理程序块的执行等等，它自身还可以嵌套其它 joint point。</li></ul></li><li>Pointcut：<ul><li>表示一组 joint point，这些 joint point 或是通过逻辑关系组合起来，或是通过通配、正则表达式等方式集中起来，它定义了相应的 Advice 将要发生的地方。</li></ul></li><li>Advice：<ul><li>Advice 定义了在 pointcut 里面定义的程序点具体要做的操作，它通过 before、after 和 around 来区别是在每个 joint point 之前、之后还是代替执行的代码。</li></ul></li><li>Advice 的类型<ul><li>before advice, 在 join point 前被执行的 advice. 虽然 before advice 是在 join point 前被执行, 但是它并不能够阻止 join point 的执行, 除非发生了异常(即我们在 before advice 代码中, 不能人为地决定是否继续执行 join point 中的代码)</li><li>after return advice, 在一个 join point 正常返回后执行的 advice</li><li>after throwing advice, 当一个 join point 抛出异常后执行的 advice</li><li>after(final) advice, 无论一个 join point 是正常退出还是发生了异常, 都会被执行的 advice.</li><li>around advice, 在 join point 前和 joint point 退出后都执行的 advice. 这个是最常用的 advice.</li><li>introduction，introduction可以为原有的对象增加新的属性和方法。</li></ul></li></ul><h3 id="Spring-AOP-源码"><a href="#Spring-AOP-源码" class="headerlink" title="Spring AOP 源码"></a>Spring AOP 源码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">[</span>源码解读<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>zhuanlan<span class="token punctuation">.</span>zhihu<span class="token punctuation">.</span>com<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">44094896</span><span class="token punctuation">)</span><span class="token number">1.</span> <span class="token class-name">AbstractAutowireCapableBeanFactory</span><span class="token punctuation">.</span><span class="token function">createBean</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> beanClass<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token number">2.</span> <span class="token function">doCreateBean</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token number">3.</span> <span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token class-name">Object</span> bean<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token number">4.</span> <span class="token class-name">AbstractAutoProxyCreator</span><span class="token punctuation">.</span><span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span>  <span class="token operator">-></span> <span class="token number">5.</span> <span class="token function">wrapIfNecessary</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">Object</span> cacheKey<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token number">6.</span> <span class="token function">shouldSkip</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token function">findCandidateAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">7.</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token class-name">Advisor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Aspect</span> <span class="token comment">// 表示的是切面</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderImageAop</span> <span class="token punctuation">&#123;</span><span class="token comment">// 在切面中定义的切点 （Pointcut）</span><span class="token comment">// 其中 ButtonBusinessService.process 表示的是连接点 （Joint point）</span>    <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(* hk.com.cre.process.workflow.button.ButtonBusinessService.process(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pointcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">// 增强（Advice） 这些代码会植入到 ButtonBusinessService 的代理类中</span><span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">"pointcut()"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">doAround</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> proceedingJoinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">ButtonBusinessServicePoxy</span> 类其中有个 invoke 方法执行的就是 具体类的 <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 方法<span class="token annotation punctuation">@Before</span> 就是先执行 在调用 具体的 invoke   源码类：<span class="token class-name">MethodBeforeAdviceAdapter</span>如果是 <span class="token annotation punctuation">@Around</span> proceedingJoinPoint<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 这个就是具体类的方法<span class="token comment">// 源码查看 org.springframework.aop 下面的类</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务器Java进程突然消失</title>
      <link href="/2021/02/18/Linux-process-disappears/"/>
      <url>/2021/02/18/Linux-process-disappears/</url>
      
        <content type="html"><![CDATA[<h3 id="检查应用日志是否有异常日志"><a href="#检查应用日志是否有异常日志" class="headerlink" title="检查应用日志是否有异常日志"></a>检查应用日志是否有异常日志</h3><pre class="line-numbers language-none"><code class="language-none"> -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;$&#123;目录&#125;。参数说明：（1）-XX:+HeapDumpOnOutOfMemoryError参数表示当JVM发生OOM时，自动生成DUMP文件。（2）-XX:HeapDumpPath&#x3D;$&#123;目录&#125;参数表示生成DUMP文件的路径，也可以指定文件名称。例如：-XX:HeapDumpPath&#x3D;$&#123;目录&#125;&#x2F;java_heapdump.hprof。如果不指定文件名，默认为：java_&lt;pid&gt;_&lt;date&gt;_&lt;time&gt;_heapDump.hprof。**之后可以通过一些分析工具查看应用问题**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="检查-JVM-是否异常"><a href="#检查-JVM-是否异常" class="headerlink" title="检查 JVM 是否异常"></a>检查 JVM 是否异常</h3><pre class="line-numbers language-none"><code class="language-none">启动应用时最好指：XX:ErrorFile&#x3D;&#x2F;var&#x2F;log&#x2F;hs_err_pid&lt;pid&gt;.log，没有指定是生成在工作目录下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="被操作系统OOM-Killer"><a href="#被操作系统OOM-Killer" class="headerlink" title="被操作系统OOM-Killer"></a>被操作系统OOM-Killer</h3><pre class="line-numbers language-none"><code class="language-none">Linux 内核有个机制叫OOM killer（Out-Of-Memory killer），该机制会监控那些占用内存过大，尤其是瞬间很快消耗大量内存的进程，为了防止内存耗尽而内核会把该进程杀掉。因此，你发现java进程突然没了，首先要怀疑是不是被linux的OOM killer给干掉了！系统报错日志:&#x2F;var&#x2F;log&#x2F;messagesgrep -i &#39;killed process&#39; &#x2F;var&#x2F;log&#x2F;messages  -i 是忽略大小写或者grep &#39;Out of memory&#39; &#x2F;var&#x2F;log&#x2F;messagesdmesg -T| grep java#或者dmesg -T | grep &#39;Out of memory&#39;# -T 是显示时间戳<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>　检查了下监控，发现外网大量的流程导致操作系统 kill 了进程。 <img src="/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%8720210218115721.png" alt="微信图片20210218115721.png"></p></blockquote><h3 id="解决方案-Linux-Swap-针对小内存服务器"><a href="#解决方案-Linux-Swap-针对小内存服务器" class="headerlink" title="解决方案 -&gt; Linux Swap , 针对小内存服务器"></a>解决方案 -&gt; Linux Swap , 针对小内存服务器</h3><blockquote><p>SWAP 概述 当系统的物理内存不够用的时候，就需要将物理内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap空间中，等到那些程序要运行时，再从Swap中恢复保存的数据到内存中。这样，系统总是在物理内存不够时，才进行Swap交换。</p></blockquote><blockquote><p>swap 的大小设置一般是和内存大小一样或者设置为内存大小的2倍<br>实际上，并不是等所有的物理内存都消耗完毕之后，才去使用swap的空间，什么时候使用是由swappiness 参数值控制。 cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness 60 该值默认值是60. swappiness&#x3D;0的时候表示最大限度使用物理内存，然后才是 swap空间，<br>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。<br>永久修改： 在&#x2F;etc&#x2F;sysctl.conf 文件里添加如下参数： vm.swappiness&#x3D;10<br>sysctl -p 生效</p></blockquote><h3 id="开启-Swap"><a href="#开启-Swap" class="headerlink" title="开启 Swap"></a>开启 Swap</h3><p><a href="https://blog.csdn.net/ygm_linux/article/details/24532809">https://blog.csdn.net/ygm_linux/article/details/24532809</a><br><a href="https://www.cnblogs.com/williamjie/p/10271347.html">https://www.cnblogs.com/williamjie/p/10271347.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 删除大文件内容</title>
      <link href="/2021/01/28/linux-delete-big-file/"/>
      <url>/2021/01/28/linux-delete-big-file/</url>
      
        <content type="html"><![CDATA[<h3 id="查看当前目录下一级子文件和子目录占用的磁盘容量"><a href="#查看当前目录下一级子文件和子目录占用的磁盘容量" class="headerlink" title="查看当前目录下一级子文件和子目录占用的磁盘容量"></a>查看当前目录下一级子文件和子目录占用的磁盘容量</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">du</span> <span class="token parameter variable">-lh</span> --max-depth<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span><span class="token function">du</span> <span class="token parameter variable">-m</span> –max-depth<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-gr</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="查看根目录下前10大的文件夹"><a href="#查看根目录下前10大的文件夹" class="headerlink" title="查看根目录下前10大的文件夹"></a>查看根目录下前10大的文件夹</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">du</span> / <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除文件内容"><a href="#删除文件内容" class="headerlink" title="删除文件内容"></a>删除文件内容</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">删除文件到指定的大小 ， <span class="token number">0</span> 是指定的大小truncate <span class="token parameter variable">-s</span> <span class="token number">0</span> my_file删除文件内容<span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token operator">></span> my_file删除my_file前面第1行到10000行 <span class="token punctuation">(</span>这个比较耗时<span class="token punctuation">)</span><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'1,10000d'</span> my_file用lsof检查后才发现原因是,有文件被删除,而进程还活着,因而造成还占用空间的现象<span class="token punctuation">[</span>root@/<span class="token punctuation">]</span><span class="token comment"># lsof |grep delete</span>根据lsof列出的进程号,kill这些进程后,空间就释放出来了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一个hibernate和redis缓存引起的错误</title>
      <link href="/2020/12/18/hibernate-cache-error/"/>
      <url>/2020/12/18/hibernate-cache-error/</url>
      
        <content type="html"><![CDATA[<h3 id="错误现象"><a href="#错误现象" class="headerlink" title="错误现象"></a>错误现象</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span></span>LazyInitializationException</span><span class="token operator">:</span> failed <span class="token keyword">to</span> <span class="token namespace">lazily</span> initialize a collection<span class="token punctuation">,</span> could not initialize proxy <span class="token operator">-</span> no <span class="token class-name">Session</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractPersistentCollection</span><span class="token punctuation">.</span><span class="token function">throwLazyInitializationException</span><span class="token punctuation">(</span><span class="token class-name">AbstractPersistentCollection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">587</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractPersistentCollection</span><span class="token punctuation">.</span><span class="token function">withTemporarySessionIfNeeded</span><span class="token punctuation">(</span><span class="token class-name">AbstractPersistentCollection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">204</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>AbstractPersistentCollection</span><span class="token punctuation">.</span><span class="token function">readSize</span><span class="token punctuation">(</span><span class="token class-name">AbstractPersistentCollection</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">148</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>PersistentBag</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">PersistentBag</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">261</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionSerializer</span><span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionSerializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">102</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>CollectionSerializer</span><span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">CollectionSerializer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ser<span class="token punctuation">.</span></span>BeanPropertyWriter</span><span class="token punctuation">.</span><span class="token function">serializeAsField</span><span class="token punctuation">(</span><span class="token class-name">BeanPropertyWriter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">704</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ser<span class="token punctuation">.</span>std<span class="token punctuation">.</span></span>BeanSerializerBase</span><span class="token punctuation">.</span><span class="token function">serializeFields</span><span class="token punctuation">(</span><span class="token class-name">BeanSerializerBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">690</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">76</span> common frames omitted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>导致这个的原因是因为redis中缓存了查询的数据：<br>使用@Cacheable 注解，Redis数据存储如下：</p><blockquote><p>{“@class”:”hk.com.cre.process.basic.dto.SrmcfgProcessDto”,”serviceItemRels”:[“org.hibernate.collection.internal.PersistentBag”,[]],”cChrDataSource”:null}</p></blockquote><blockquote><p>这里有意思的是 org.hibernate.collection.internal.PersistentBag 当redis反序列这个类时，是没有当前hibernate session的，在readSize()中会调用 withTemporarySessionIfNeeded，这个方法是其中的关键点是 allowLoadOutsideTransaction，如果这个为 true 是会开启一个 readOnly 的事物去查询数据的，但是redis实例化 PersistentBag 只会调用无参构造函数来实例化，就导致这个 allowLoadOutsideTransaction 一直是false</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Feign不同服务的bean 如何不重复</title>
      <link href="/2020/12/07/Feign-Different-Bean-Question/"/>
      <url>/2020/12/07/Feign-Different-Bean-Question/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>项目中使用了 Feign 组件，指定 Fallback 时需要这个类是在spring bean ,使用 @Component 标记，类名为 ATest.class ，使用 @Component 注解生成的bean name 是类名第一个字母小写的，也就是 aTest。这时同事使用了 @Bean 注解 标注下面的方法生成bean , public xxx aTest(){}。@Bean 生成 bean 的规则是使用的方法名称，也是 aTest 。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>有趣的问题就来了，这时生成的都是 aTest ，spring是怎么处理的？在同一个项目中，bean name 是不允许重复的，启动会报错。但是使用的 Feign 组件，涉及到各个微服务的相互调用，Feign 是怎么隔离不同服务之间的 bean 的呢？不同微服务 bean name 相同会导致什么问题？</p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>Feign 其中有 FeignContext extends NamedContextFactory ，其中使用了 map 结构来存储不同的 applicationContext ，每个服务都有一个子容器，首先通过服务名获取子容器，再根据Class获取到这个容器内的bean</p><blockquote><p>Map&lt;String, AnnotationConfigApplicationContext&gt; contexts &#x3D; new ConcurrentHashMap();</p></blockquote><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">AnnotationConfigApplicationContext</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>contexts<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>contexts<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>contexts<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 没有则先创建 context</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>contexts<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>contexts<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HystrixTargeter</span>  中获取 fallback 实例<span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token class-name">T</span> <span class="token function">getFromContext</span><span class="token punctuation">(</span><span class="token class-name">String</span> fallbackMechanism<span class="token punctuation">,</span> <span class="token class-name">String</span> feignClientName<span class="token punctuation">,</span> <span class="token class-name">FeignContext</span> context<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> beanType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> targetType<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 根据 feignClientName 获取不同的 bean </span>        <span class="token class-name">Object</span> fallbackInstance <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>feignClientName<span class="token punctuation">,</span> beanType<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fallbackInstance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"No "</span> <span class="token operator">+</span> fallbackMechanism <span class="token operator">+</span> <span class="token string">" instance of type %s found for feign client %s"</span><span class="token punctuation">,</span> beanType<span class="token punctuation">,</span> feignClientName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>targetType<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>beanType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Incompatible "</span> <span class="token operator">+</span> fallbackMechanism <span class="token operator">+</span> <span class="token string">" instance. Fallback/fallbackFactory of type %s is not assignable to %s for feign client %s"</span><span class="token punctuation">,</span> beanType<span class="token punctuation">,</span> targetType<span class="token punctuation">,</span> feignClientName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> fallbackInstance<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 大文件查找</title>
      <link href="/2020/11/20/linux-find-big-file/"/>
      <url>/2020/11/20/linux-find-big-file/</url>
      
        <content type="html"><![CDATA[<h3 id="du-命令用于显示目录或文件的大小"><a href="#du-命令用于显示目录或文件的大小" class="headerlink" title="du 命令用于显示目录或文件的大小"></a>du 命令用于显示目录或文件的大小</h3><ul><li>-b 显示目录或文件大小时，以byte为单位。</li><li>-h 以K，M，G为单位，提高信息的可读性。 <strong>使用这个会导致排序问题</strong><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">##返回前十的大目录</span><span class="token function">du</span> / <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span><span class="token comment">##查找大文件</span><span class="token function">find</span> / <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> +800M  <span class="token parameter variable">-print0</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-0</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span><span class="token function">ls</span> <span class="token parameter variable">-lh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Web 程序中使用多线程处理任务，RequestContextHolder notifyAttributeAssigned NullPointerException 异常</title>
      <link href="/2020/11/10/NullPointerException-notifyAttributeAssigned/"/>
      <url>/2020/11/10/NullPointerException-notifyAttributeAssigned/</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>在 web 程序中使用多线程处理任务报如下错误</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>NullPointerException</span><span class="token operator">:</span> <span class="token keyword">null</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>Request</span><span class="token punctuation">.</span><span class="token function">notifyAttributeAssigned</span><span class="token punctuation">(</span><span class="token class-name">Request</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1528</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>Request</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">Request</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1514</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span>RequestFacade</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">RequestFacade</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">540</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>ServletRequestWrapper</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestWrapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">252</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>session<span class="token punctuation">.</span>web<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>SessionRepositoryFilter</span>$<span class="token class-name">SessionRepositoryRequestWrapper</span><span class="token punctuation">.</span><span class="token function">setCurrentSession</span><span class="token punctuation">(</span><span class="token class-name">SessionRepositoryFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">264</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>session<span class="token punctuation">.</span>web<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>SessionRepositoryFilter</span>$<span class="token class-name">SessionRepositoryRequestWrapper</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token class-name">SessionRepositoryFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">375</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>session<span class="token punctuation">.</span>web<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>SessionRepositoryFilter</span>$<span class="token class-name">SessionRepositoryRequestWrapper</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token class-name">SessionRepositoryFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">390</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>session<span class="token punctuation">.</span>web<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>SessionRepositoryFilter</span>$<span class="token class-name">SessionRepositoryRequestWrapper</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token class-name">SessionRepositoryFilter</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">217</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServletRequestWrapper</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequestWrapper</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">240</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>SessionUtil</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token class-name">SessionUtil</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">127</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>SessionUtil</span><span class="token punctuation">.</span><span class="token function">getSessionId</span><span class="token punctuation">(</span><span class="token class-name">SessionUtil</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">131</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">hk<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cre<span class="token punctuation">.</span>process<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span></span>FeignRequestInterceptor</span><span class="token punctuation">.</span>lambda$headerInterceptor$<span class="token function">80</span><span class="token punctuation">(</span><span class="token class-name">FeignRequestInterceptor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">28</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">targetRequest</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">158</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">executeAndDecode</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">88</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>SynchronousMethodHandler</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">SynchronousMethodHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">76</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span>HystrixInvocationHandler</span>$<span class="token number">1.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">HystrixInvocationHandler</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">108</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span>HystrixCommand</span>$<span class="token number">2.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">HystrixCommand</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">301</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span>HystrixCommand</span>$<span class="token number">2.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">HystrixCommand</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">297</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">rx<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>operators<span class="token punctuation">.</span></span>OnSubscribeDefer</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">OnSubscribeDefer</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">46</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">关键类导致：<span class="token class-name">RequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// SessionRepositoryFilter&lt;S>.SessionRepositoryRequestWrapper</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span><span class="token punctuation">&#123;</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">setRequestAttributes</span><span class="token punctuation">(</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 之后在想通过这个获取 request 里面的东西已经是获取不到了</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">SessionRepositoryFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">></span></span><span class="token punctuation">.</span>SessionRepositoryRequestWrapper<span class="token punctuation">.</span>HttpSessionWrapper <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 获取时每次都新创建 session</span>   <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 之后会调用</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setCurrentSession</span><span class="token punctuation">(</span>currentSession<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 最终会调用 notifyAttributeAssigned()</span><span class="token comment">// 在这个请求里面 context 为空 导致上面的异常</span><span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>第二种写法<span class="token class-name">RequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// true 设置子线程共享</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">setRequestAttributes</span><span class="token punctuation">(</span>requestAttributes<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="事故测试的方法："><a href="#事故测试的方法：" class="headerlink" title="事故测试的方法："></a>事故测试的方法：</h2><pre class="line-numbers language-none"><code class="language-none">@RequestMapping(value &#x3D; &quot;&#x2F;help&#x2F;demo&quot;, method &#x3D; RequestMethod.GET, produces &#x3D; MediaType.APPLICATION_JSON_UTF8_VALUE)    public Object demo() &#123;        RequestAttributes requestAttributes &#x3D; RequestContextHolder.getRequestAttributes();        RequestContextHolder.setRequestAttributes(requestAttributes,true);        new Thread(() -&gt; &#123;            try &#123;&#x2F;&#x2F; 这里故意让主线程结束，下面就会获取不到值                Thread.sleep(10000);            &#125; catch (InterruptedException e) &#123;                e.printStackTrace();            &#125;            &#x2F;&#x2F; RequestContextHolder.setRequestAttributes(requestAttributes);            HttpServletRequest request &#x3D; ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();&#x2F;&#x2F; 获取参数或者 session 都需要主线程不结束的前提下才能获取到&#x2F;&#x2F; 当主请求结束，子线程里面的 request 对象也都会清除数据 .&#x2F;&#x2F; 当主请求结束 ，那么 Context context &#x3D; this.getContext(); 也就是 null 了。            request.getParameter(&quot;test&quot;)        &#125;).start();        try &#123;            Thread.sleep(20000);        &#125; catch (InterruptedException e) &#123;            e.printStackTrace();        &#125;&#x2F;&#x2F; try &#123; &#x2F;&#x2F;               Thread.sleep(20000); &#x2F;&#x2F;           &#125; catch (InterruptedException e) &#123; &#x2F;&#x2F;               e.printStackTrace(); &#x2F;&#x2F;           &#125;        return &quot;demo&quot;;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="源码解读："><a href="#源码解读：" class="headerlink" title="源码解读："></a>源码解读：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 在 DispatcherServlet extends FrameworkServlet 父类中的源码</span><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Throwable</span> failureCause <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">LocaleContext</span> previousLocaleContext <span class="token operator">=</span> <span class="token class-name">LocaleContextHolder</span><span class="token punctuation">.</span><span class="token function">getLocaleContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LocaleContext</span> localeContext <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildLocaleContext</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">RequestAttributes</span> previousAttributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ServletRequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildRequestAttributes</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> previousAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebAsyncManager</span> asyncManager <span class="token operator">=</span> <span class="token class-name">WebAsyncUtils</span><span class="token punctuation">.</span><span class="token function">getAsyncManager</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        asyncManager<span class="token punctuation">.</span><span class="token function">registerCallableInterceptor</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FrameworkServlet<span class="token punctuation">.</span>RequestBindingInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initContextHolders</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> localeContext<span class="token punctuation">,</span> requestAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doService</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ServletException</span> var17<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            failureCause <span class="token operator">=</span> var17<span class="token punctuation">;</span>            <span class="token keyword">throw</span> var17<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> var18<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            failureCause <span class="token operator">=</span> var18<span class="token punctuation">;</span>            <span class="token keyword">throw</span> var18<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var19<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            failureCause <span class="token operator">=</span> var19<span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NestedServletException</span><span class="token punctuation">(</span><span class="token string">"Request processing failed"</span><span class="token punctuation">,</span> var19<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 重置 previousAttributes</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resetContextHolders</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> previousLocaleContext<span class="token punctuation">,</span> previousAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>requestAttributes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                requestAttributes<span class="token punctuation">.</span><span class="token function">requestCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>failureCause <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Could not complete request"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">)</span>failureCause<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>asyncManager<span class="token punctuation">.</span><span class="token function">isConcurrentHandlingStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Leaving response open for concurrent processing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Successfully completed request"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">publishRequestHandledEvent</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">)</span>failureCause<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。"><a href="#引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。" class="headerlink" title="引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。"></a>引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。</h3><h2 id="多线程如何传递-request-参数或者-session-？"><a href="#多线程如何传递-request-参数或者-session-？" class="headerlink" title="多线程如何传递 request 参数或者 session ？"></a>多线程如何传递 request 参数或者 session ？</h2><ol><li>在主线程中获取到需要的信息，使用参数传递到子线程中</li><li>包装 request 将数据复制一份在内存中，使用 ThreadLocal</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器 SameSite 属性设置</title>
      <link href="/2020/09/08/browser-cookies-SameSite-attribute/"/>
      <url>/2020/09/08/browser-cookies-SameSite-attribute/</url>
      
        <content type="html"><![CDATA[<h3 id="1-起因"><a href="#1-起因" class="headerlink" title="1. 起因"></a>1. 起因</h3><p>Chrome 51 开始，浏览器的 Cookie 新增加了一个SameSite属性，用来防止 CSRF 攻击和用户追踪。<br>Chrome 浏览器版本从 80 版后 默认是将 Cookie 设置成 Lax</p><h3 id="2-SameSite-属性值"><a href="#2-SameSite-属性值" class="headerlink" title="2. SameSite 属性值"></a>2. SameSite 属性值</h3><ul><li>Strict</li><li>Lax</li><li>None<blockquote><p>Strict最为严格，完全禁止第三方 Cookie，跨站点时，任何情况下都不会发送 Cookie。换言之，只有当前网页的 URL 与请求目标一致，才会带上 Cookie。Lax规则稍稍放宽，大多数情况也是不发送第三方 Cookie，但是导航到目标网址的 Get 请求除外。</p></blockquote></li></ul><table><thead><tr><th>请求类型</th><th>示例</th><th>正常情况</th><th>Lax</th></tr></thead><tbody><tr><td>链接</td><td>《a href&#x3D;”…”&gt;</td><td>发送 Cookie</td><td>发送 Cookie</td></tr><tr><td>预加载</td><td>《link rel&#x3D;”prerender” href&#x3D;”…”&#x2F;&gt;</td><td>发送 Cookie</td><td>发送 Cookie</td></tr><tr><td>GET 表单</td><td>《form method&#x3D;”GET” action&#x3D;”…”&gt;</td><td>发送Cookie</td><td>发送 Cookie</td></tr><tr><td>POST 表单</td><td>《form method&#x3D;”POST” action&#x3D;”…”&gt;</td><td>发送 Cookie</td><td>不发送</td></tr><tr><td>iframe</td><td>《iframe src&#x3D;”…”&gt;</td><td>发送 Cookie</td><td>不发送</td></tr><tr><td>AJAX</td><td>$.get(“…”)</td><td>发送 Cookie</td><td>不发送</td></tr><tr><td>Image</td><td>《img src&#x3D;”…”》</td><td>发送 Cookie</td><td>不发送</td></tr></tbody></table><p>Chrome 计划将Lax变为默认设置。这时，网站可以选择显式关闭SameSite属性，<strong>将其设为None。不过，前提是必须同时设置Secure属性（Cookie 只能通过 HTTPS 协议发送），否则无效。</strong></p><pre class="line-numbers language-language" data-language="language"><code class="language-language">下面的设置无效。Set-Cookie: widget_session&#x3D;abc123; SameSite&#x3D;None下面的设置有效。Set-Cookie: widget_session&#x3D;abc123; SameSite&#x3D;None; Secure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-该用哪种模式？"><a href="#3-该用哪种模式？" class="headerlink" title="3. 该用哪种模式？"></a>3. 该用哪种模式？</h3><p>假如你的网站有用 iframe 形式嵌在别的网站里的需求，那么连 Lax 你也不能用，因为 iframe 请求也是一种异步请求。或者假如别的网站有使用你的网站的 JSONP 接口，那么同样 Lax 你也不能用，比如天猫就是通过淘宝的 JSONP 接口来判断用户是否登录的。</p><p>有时安全性和灵活性就是矛盾的，需要取舍。具体判断参照上面表格设置。</p><h3 id="4-解决方案"><a href="#4-解决方案" class="headerlink" title="4. 解决方案"></a>4. 解决方案</h3><h4 id="4-1-方案1"><a href="#4-1-方案1" class="headerlink" title="4.1 方案1"></a>4.1 方案1</h4><ol><li>在chrome浏览器地址栏输入<a href="chrome://flags并回车">chrome://flags并回车</a></li><li>在搜索栏中输入SameSite by default cookies搜索，并禁用如图中的两项设置，改为Disabled即可</li><li>重启浏览器</li></ol><h4 id="4-2-方案2"><a href="#4-2-方案2" class="headerlink" title="4.2 方案2"></a>4.2 方案2</h4><p>如果使用的是 iframe 方式最好设置<br>X-Frame-OptionsHTTP 响应报头可以被用来指示一个浏览器是否应该被允许在一个以呈现页面《frame》，《iframe》或《object》标签。通过确保其内容未嵌入其他网站，网站可以使用此功能来避免 点击劫持 攻击。</p><pre class="line-numbers language-language" data-language="language"><code class="language-language">apache 配置Header always append X-Frame-Options DENYHeader set X-Frame-Options &quot;ALLOW-FROM https:&#x2F;&#x2F;example.com&#x2F;&quot;Header always edit Set-Cookie &quot;path&#x3D;&#x2F;&quot; &quot;path&#x3D;&#x2F;;  Secure; HttpOnly; SameSite&#x3D;None;&quot; #apache2.4 官方文档#http:&#x2F;&#x2F;httpd.apache.org&#x2F;docs&#x2F;2.4&#x2F;mod&#x2F;mod_session_cookie.html#http:&#x2F;&#x2F;httpd.apache.org&#x2F;docs&#x2F;2.4&#x2F;mod&#x2F;mod_usertrack.htmlNginx 配置add_header X-Frame-Options ALLOWALL; #允许所有域名iframeadd_header X-Frame-Options DENY; #不允许任何域名iframe,包括相同的域名add_header X-Frame-Options SANEORIGIN; #允许相同域名iframe,如a.test.com允许b.test.comadd_header X-Frame-Options ALLOW-FROM uri; #允许指定域名iframe 多个用逗号分隔# 只支持 proxy 模式下设置proxy_cookie_path &#x2F; &quot;&#x2F;; httponly; secure; SameSite&#x3D;None&quot;;#http:&#x2F;&#x2F;nginx.org&#x2F;en&#x2F;docs&#x2F;http&#x2F;ngx_http_proxy_module.html#proxy_cookie_path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Default </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Default </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
