{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gyo • All posts by \"mysql\" category",
    "description": "Gyo的博客",
    "home_page_url": "https://gyoliu.github.io",
    "items": [
        {
            "id": "https://gyoliu.github.io/2025/03/11/mysql%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/",
            "url": "https://gyoliu.github.io/2025/03/11/mysql%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/",
            "title": "mysql主从搭建",
            "date_published": "2025-03-11T01:16:40.000Z",
            "content_html": "<h1 id=\"主服务器配置\"><a href=\"#主服务器配置\" class=\"headerlink\" title=\"主服务器配置\"></a>主服务器配置</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#服务器 id，随意，但要唯一</span>\nserver-id <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  \n<span class=\"token comment\">#二进制文件存放路径</span>\nlog-bin <span class=\"token operator\">=</span> mysql-bin \n<span class=\"token comment\">#参数用于排除自带的数据库。  </span>\nbinlog-ignore-db <span class=\"token operator\">=</span> mysql \nbinlog-ignore-db <span class=\"token operator\">=</span> information_schema\nbinlog-ignore-db <span class=\"token operator\">=</span> performance_schema\n<span class=\"token comment\">#二进制日志格式，建议使用ROW格式以获得更好的兼容性和可靠性。</span>\nbinlog-format <span class=\"token operator\">=</span> ROW \n\n\n<span class=\"token comment\">#创建用户</span>\nCREATE <span class=\"token environment constant\">USER</span> <span class=\"token string\">'db_sync'</span>@<span class=\"token string\">'%'</span> IDENTIFIED BY <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#授权账号复制权限</span>\nGRANT REPLICATION SLAVE ON *.* TO <span class=\"token string\">'db_sync'</span>@<span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#刷新配置</span>\nFLUSH PRIVILEGES<span class=\"token punctuation\">;</span>\n\nCREATE <span class=\"token environment constant\">USER</span> <span class=\"token string\">'repl'</span>@<span class=\"token string\">'从库IP'</span> IDENTIFIED BY <span class=\"token string\">'密码'</span><span class=\"token punctuation\">;</span>\nGRANT REPLICATION SLAVE ON *.* TO <span class=\"token string\">'repl'</span>@<span class=\"token string\">'从库IP'</span><span class=\"token punctuation\">;</span>\nFLUSH PRIVILEGES<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">#记下输出中的 File 和 Position 值，后续在从服务器上使用。</span>\nSHOW MASTER STATUS <span class=\"token punctuation\">\\</span>G<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"从服务器配置\"><a href=\"#从服务器配置\" class=\"headerlink\" title=\"从服务器配置\"></a>从服务器配置</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">server-id <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">#中继日志文件的名称，用于从主服务器接收二进制日志事件。</span>\nrelay-log <span class=\"token operator\">=</span> mysql-relay-bin \n<span class=\"token comment\">#从服务器的二进制日志文件的名称。</span>\nlog_bin <span class=\"token operator\">=</span> mysql-bin \n<span class=\"token comment\"># 从库只读‌</span>\nread_only <span class=\"token operator\">=</span> <span class=\"token number\">1</span>                   \n<span class=\"token comment\">#不同步相关的库</span>\nreplicate-ignore-db <span class=\"token operator\">=</span> mysql \nreplicate-ignore-db <span class=\"token operator\">=</span> information_schema\nreplicate-ignore-db <span class=\"token operator\">=</span> performance_schema\n\n为了保障较高的数据安全性，master配置sync_binlog<span class=\"token operator\">=</span><span class=\"token number\">1</span>，innodb_flush_log_at_trx_commit<span class=\"token operator\">=</span><span class=\"token number\">1</span>等设置。\n而Slave可以关闭binlog，innodb_flush_log_at_trx_commit也可以设置为0来提高sql的执行效率\n\n<span class=\"token comment\"># sync_binlog的工作原理</span>\n- 当sync_binlog设置为0时，MySQL在事务提交后不会立即执行磁盘同步操作，而是依赖文件系统来决定何时同步。这种设置可以提高性能，但在系统崩溃的情况下可能会丢失数据。\n- 设置为1时，MySQL会在每次事务提交后立即将binlog缓存中的数据同步到磁盘，这提供了最高的数据安全性，但会增加磁盘I/O的负担，从而影响性能。\n- 设置为大于1的值时，MySQL会在多次事务提交后执行一次磁盘同步，这是一种折中的策略，既保证了一定程度的数据安全性，又提高了性能。\n\n<span class=\"token comment\"># innodb_flush_log_at_trx_commit</span>\n该参数是MySQL InnoDB存储引擎独有的参数，用于控制InnoDB的Redo log日志记录方式。取值范围为0、1、2：\n<span class=\"token number\">0</span>：每秒将日志缓冲区（Log Buffer）中的数据写入磁盘，事务提交时不主动刷盘。\n优点：性能最高。\n风险：实例崩溃时可能丢失最多1秒的事务数据。\n<span class=\"token number\">1</span>（默认值）：每次事务提交时，立即将日志缓冲区的数据写入磁盘并刷盘。\n优点：完全遵守ACID特性，数据安全性最高。\n缺点：性能开销较大，尤其在高并发场景下。\n<span class=\"token number\">2</span>：每次事务提交时将日志缓冲区的数据写入文件系统缓存，每秒由操作系统调度刷盘一次。\n优点：性能优于1，数据安全性高于0。\n风险：实例崩溃时可能丢失最近1秒内的事务数据。\n\n调优原则\n高安全性场景：建议将innodb_flush_log_at_trx_commit和sync_binlog均设置为1，确保数据实时落盘。\n高性能场景：可以将innodb_flush_log_at_trx_commit设置为 <span class=\"token number\">2</span>，sync_binlog设置为1000，以提升性能，但需接受一定的数据丢失风险。\n不推荐的配置：\n将innodb_flush_log_at_trx_commit设置为0：可能导致实例重启时丢失大量数据。\n将sync_binlog设置为0：可能导致Binlog Rotate阻塞时间过长，影响性能稳定性。\n\n<span class=\"token comment\">#启动从库</span>\nsystemctl restart mysqld\n\n<span class=\"token comment\">#在从服务器指定主库并开启同步</span>\n<span class=\"token comment\">#暂停同步</span>\nSTOP SLAVE<span class=\"token punctuation\">;</span>\n\nCHANGE MASTER TO\n MASTER_HOST <span class=\"token operator\">=</span> <span class=\"token string\">'10.10.104.51'</span>,\n MASTER_USER <span class=\"token operator\">=</span> <span class=\"token string\">'db_sync'</span>,\n MASTER_PASSWORD <span class=\"token operator\">=</span> <span class=\"token string\">'xxx'</span>,\n <span class=\"token comment\">#主服务器数据库上的file值(不能有空格)</span>\n <span class=\"token comment\">#这里的填写主服务器，上面2.4部分的File 值</span>\n MASTER_LOG_FILE <span class=\"token operator\">=</span> <span class=\"token string\">'mysql-bin.000001'</span>,   \n <span class=\"token comment\">#这里的填写主服务器，上面2.4部分的Position值 SHOW MASTER STATUS \\G; 获取</span>\n MASTER_LOG_POS <span class=\"token operator\">=</span> <span class=\"token number\">157</span>,\n <span class=\"token assign-left variable\">get_master_public_key</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n <span class=\"token comment\"># gtid模式</span>\n\nCHANGE MASTER TO\n<span class=\"token assign-left variable\">MASTER_HOST</span><span class=\"token operator\">=</span><span class=\"token string\">'主库IP'</span>,\n<span class=\"token assign-left variable\">MASTER_USER</span><span class=\"token operator\">=</span><span class=\"token string\">'repl'</span>,\n<span class=\"token assign-left variable\">MASTER_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">'密码'</span>,\n<span class=\"token assign-left variable\">MASTER_AUTO_POSITION</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"sync-binlog-innodb-flush-log-at-trx-commit-参数设置示例-下文通过几个典型的场景对上述两个参数的配置进行说明：\"><a href=\"#sync-binlog-innodb-flush-log-at-trx-commit-参数设置示例-下文通过几个典型的场景对上述两个参数的配置进行说明：\" class=\"headerlink\" title=\"sync_binlog innodb_flush_log_at_trx_commit 参数设置示例 下文通过几个典型的场景对上述两个参数的配置进行说明：\"></a>sync_binlog innodb_flush_log_at_trx_commit 参数设置示例 下文通过几个典型的场景对上述两个参数的配置进行说明：</h1><h1 id=\"场景一：只读实例延迟\"><a href=\"#场景一：只读实例延迟\" class=\"headerlink\" title=\"场景一：只读实例延迟\"></a>场景一：只读实例延迟</h1><p>RDS MySQL提供只读实例功能，用于分担主实例的读压力。如果只读实例使用默认参数模板（sync_binlog&#x3D;1，innodb_flush_log_at_trx_commit&#x3D;1），在主实例写压力较大时，可能导致只读实例的Binlog应用延迟。<br>优化建议：<br>将只读实例的sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为2，提升Binlog应用效率。<br>注意：此配置不能完全消除延迟，需根据具体情况进行分析。</p>\n<h1 id=\"场景二：DTS数据迁移速度慢\"><a href=\"#场景二：DTS数据迁移速度慢\" class=\"headerlink\" title=\"场景二：DTS数据迁移速度慢\"></a>场景二：DTS数据迁移速度慢</h1><p>在使用 DTS 进行数据迁移时，目标实例可能因频繁的Binlog和Redo Log落盘操作导致写入性能瓶颈。<br>优化建议：<br>将目标实例的sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为 2，加速数据写入。<br>数据迁移完成后，可根据需求恢复默认配置。</p>\n<h1 id=\"场景三：热点更新性能差\"><a href=\"#场景三：热点更新性能差\" class=\"headerlink\" title=\"场景三：热点更新性能差\"></a>场景三：热点更新性能差</h1><p>在大促或秒杀场景中，若sync_binlog和innodb_flush_log_at_trx_commit均设置为 1，可能导致大量并发写入时性能下降。<br>优化建议：<br>临时将sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为 2，提升并发能力。<br>活动结束后恢复默认配置，确保数据安全性。</p>\n<h1 id=\"如果主从不同步需要全量初始化从库\"><a href=\"#如果主从不同步需要全量初始化从库\" class=\"headerlink\" title=\"如果主从不同步需要全量初始化从库\"></a>如果主从不同步需要全量初始化从库</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#停止异常的同步</span>\nstop slave<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#重置slave，会重置从库相关设置。</span>\nreset slave all<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#清除已同步数据库 请重视备份</span>\ndrop database <span class=\"token variable\"><span class=\"token variable\">`</span>***<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#重置主库同步设置</span>\nRESET MASTER<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#锁定主库，只能读</span>\nFLUSH TABLES WITH READ LOCK<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 导出数据库</span>\nmysqldump –h<span class=\"token punctuation\">(</span>ip***<span class=\"token punctuation\">)</span> –P<span class=\"token punctuation\">(</span>port***<span class=\"token punctuation\">)</span> –u<span class=\"token punctuation\">(</span>user***<span class=\"token punctuation\">)</span> –p<span class=\"token punctuation\">(</span>pwd***<span class=\"token punctuation\">)</span> --all-databases <span class=\"token operator\">></span> /master-dump.sql\n<span class=\"token comment\">#解锁主库</span>\nUNLOCK TABLES<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"mysql-设置root密码\"><a href=\"#mysql-设置root密码\" class=\"headerlink\" title=\"mysql 设置root密码\"></a>mysql 设置root密码</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 初始化</span>\n<span class=\"token function\">sudo</span> mysql_secure_installation\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf\nskip-grant-tables\n\n<span class=\"token function\">sudo</span> systemctl restart mysql\nmysql <span class=\"token parameter variable\">-uroot</span>\n\nflush privileges<span class=\"token punctuation\">;</span>\nALTER <span class=\"token environment constant\">USER</span> <span class=\"token string\">'root'</span>@<span class=\"token string\">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class=\"token string\">'xx'</span><span class=\"token punctuation\">;</span>\nflush privileges<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /var/run/mysqld\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> mysql:mysql /var/run/mysqld\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">750</span> /var/run/mysqld\n\n\n<span class=\"token comment\"># 如果要改msyql 的socket 等文件位置 必须修改 AppArmor 策略文件</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/apparmor.d/usr.sbin.mysqld\n/var/lib/mysqld/** rwkl,\n/var/lib/mysqld/ rw,\n<span class=\"token function\">sudo</span> apparmor_parser <span class=\"token parameter variable\">-r</span> /etc/apparmor.d/usr.sbin.mysqld\n<span class=\"token function\">sudo</span> systemctl restart mysql\n\n\n<span class=\"token comment\"># 解决主从同步错误的临时方案</span>\nSTOP SLAVE<span class=\"token punctuation\">;</span>\nSET GLOBAL <span class=\"token assign-left variable\">SQL_SLAVE_SKIP_COUNTER</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nSTART SLAVE<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"查看表碎片情况\"><a href=\"#查看表碎片情况\" class=\"headerlink\" title=\"查看表碎片情况\"></a>查看表碎片情况</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> table_name <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Table<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> \n       <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data_length <span class=\"token operator\">+</span> index_length<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Size (MB)<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span>\n       <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>data_free <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Free Space (MB)<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> \n<span class=\"token keyword\">WHERE</span> table_schema <span class=\"token operator\">=</span> <span class=\"token string\">'your_database_name'</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> data_free <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"碎片优化语句\"><a href=\"#碎片优化语句\" class=\"headerlink\" title=\"碎片优化语句\"></a>碎片优化语句</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">OPTIMIZE</span> <span class=\"token keyword\">TABLE</span> table_name<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"批量优化整个数据库\"><a href=\"#批量优化整个数据库\" class=\"headerlink\" title=\"批量优化整个数据库\"></a>批量优化整个数据库</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> <span class=\"token variable\">@tables</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> GROUP_CONCAT<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">INTO</span> <span class=\"token variable\">@tables</span> \n<span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> \n<span class=\"token keyword\">WHERE</span> table_schema <span class=\"token operator\">=</span> <span class=\"token string\">'your_database_name'</span> <span class=\"token operator\">AND</span> table_type <span class=\"token operator\">=</span> <span class=\"token string\">'BASE TABLE'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@tables</span> <span class=\"token operator\">=</span> CONCAT<span class=\"token punctuation\">(</span><span class=\"token string\">'OPTIMIZE TABLE '</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@tables</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">PREPARE</span> stmt <span class=\"token keyword\">FROM</span> <span class=\"token variable\">@tables</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">EXECUTE</span> stmt<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DEALLOCATE</span> <span class=\"token keyword\">PREPARE</span> stmt<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"分析表结构‌\"><a href=\"#分析表结构‌\" class=\"headerlink\" title=\"分析表结构‌\"></a>分析表结构‌</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ANALYZE</span> <span class=\"token keyword\">TABLE</span> table_name<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>‌锁表问题‌：OPTIMIZE TABLE操作会锁定表，在高负载时段应谨慎使用‌78<br>‌存储引擎差异‌：<br>MyISAM表：OPTIMIZE会完全重建表，效果显著‌<br>InnoDB表：会重建表并重新组织数据和索引页‌</p>\n<p>‌替代方案‌：对于InnoDB表，可以考虑使用ALTER TABLE table_name ENGINE&#x3D;InnoDB来重建表‌<br>‌定期执行‌：建议在业务低峰期定期执行碎片整理，特别是频繁增删改的表‌<br>‌空间回收‌：OPTIMIZE TABLE可以回收删除数据后未释放的空间‌</p>\n<h3 id=\"mysql-慢查询\"><a href=\"#mysql-慢查询\" class=\"headerlink\" title=\"mysql 慢查询\"></a>mysql 慢查询</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">mysqldumpslow -s r -t 10 &#x2F;data&#x2F;mysql&#x2F;debian-kjlog-db1-slow.log &gt; slow1.sql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"主库配置\"><a href=\"#主库配置\" class=\"headerlink\" title=\"主库配置\"></a>主库配置</h3><pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">[mysqld]\nserver-id &#x3D; 1  # 必须唯一，主库通常设为1\nlog-bin &#x3D; mysql-bin  # 启用二进制日志\nbinlog-format &#x3D; ROW  # 推荐生产环境使用ROW格式\nbinlog_expire_logs_seconds &#x3D; 2592000  # 设置binlog保留30天(可选)\nsync_binlog &#x3D; 1  # 每次事务提交都同步binlog到磁盘\ngtid_mode &#x3D; ON  # 启用GTID模式‌:ml-citation&#123;ref&#x3D;&quot;6,8&quot; data&#x3D;&quot;citationList&quot;&#125;\nenforce_gtid_consistency &#x3D; ON  # 强制GTID一致性\nbinlog_group_commit_sync_delay &#x3D; 100  # 组提交优化参数(可选)\nbinlog_group_commit_sync_no_delay_count &#x3D; 10  # 组提交优化参数(可选)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"从库配置\"><a href=\"#从库配置\" class=\"headerlink\" title=\"从库配置\"></a>从库配置</h3><pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">[mysqld]\nserver-id &#x3D; 2  # 必须唯一且不同于主库 \nlog-bin &#x3D; mysql-bin  # 推荐从库也开启binlog‌ \nlog_slave_updates &#x3D; ON  # 启用级联复制时需要\nread_only &#x3D; ON  # 设置从库为只读模式\nsuper_read_only &#x3D; ON  # 防止特权用户写入(8.0+)\nskip_slave_start &#x3D; ON  # 防止自动启动复制(生产安全)\ngtid_mode &#x3D; ON \nenforce_gtid_consistency &#x3D; ON<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>SHOW BINARY LOG STATUS \\G;<br>SHOW REPLICA STATUS \\G;<br>START REPLICA;</p>\n<p>mysql&gt; show binary log status \\G;<br>*************************** 1. row ***************************<br>             File: binlog.000008<br>         Position: 12543683<br>     Binlog_Do_DB: tai_hua<br> Binlog_Ignore_DB:<br>Executed_Gtid_Set: 2170bdc8-093b-11f0-b82d-005056b87daf:1-57547,<br>f6f51b80-d477-11ef-bc3e-005056b87daf:1-52662</p>\n<p>CHANGE REPLICATION SOURCE TO<br>SOURCE_HOST&#x3D;’主库IP’,<br>SOURCE_USER&#x3D;’repl’,<br>SOURCE_PASSWORD&#x3D;’password’,<br>SOURCE_PORT&#x3D;3306,<br>SOURCE_AUTO_POSITION&#x3D;1;</p>\n",
            "tags": [
                "Default",
                "mysql"
            ]
        }
    ]
}