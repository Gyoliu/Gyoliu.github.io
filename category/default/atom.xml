<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gyoliu.github.io</id>
    <title>Gyo • Posts by &#34;default&#34; category</title>
    <link href="https://gyoliu.github.io" />
    <updated>2025-06-25T03:51:44.000Z</updated>
    <category term="Java" />
    <category term="Linux" />
    <category term="Default" />
    <category term="PaddleSpeech" />
    <category term="elasticsearch" />
    <category term="Cosy" />
    <category term="hibernate" />
    <category term="JVM" />
    <category term="mysql" />
    <category term="证书" />
    <category term="nginx" />
    <category term="openssl" />
    <category term="SELinux" />
    <category term="spring" />
    <category term="Spring Cloud" />
    <entry>
        <id>https://gyoliu.github.io/2025/06/25/nginx-install-error-collect/</id>
        <title>nginx-install-error-collect</title>
        <link rel="alternate" href="https://gyoliu.github.io/2025/06/25/nginx-install-error-collect/"/>
        <content type="html">&lt;h2 id=&#34;1-无法读取-ssl-密钥&#34;&gt;&lt;a href=&#34;#1-无法读取-ssl-密钥&#34; class=&#34;headerlink&#34; title=&#34;1. 无法读取 ssl 密钥&#34;&gt;&lt;/a&gt;1. 无法读取 ssl 密钥&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;2025&amp;#x2F;06&amp;#x2F;25 11:41:21 [emerg] 8982#8982: cannot load certificate “&amp;#x2F;etc&amp;#x2F;nginx&amp;#x2F;ssl&amp;#x2F;star_crclogistics_com.pem”: BIO_new_file() failed (SSL: error:0200100D:system library:fopen:Permission denied:fopen(‘&amp;#x2F;etc&amp;#x2F;nginx&amp;#x2F;ssl&amp;#x2F;star_crclogistics_com.pem’,’r’) error:2006D002:BIO routines:BIO_new_file:system lib)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a href=&#34;#解决方案&#34; class=&#34;headerlink&#34; title=&#34;解决方案&#34;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;问题1：SELinux 阻止了正常操作

&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;avc:.*denied&#34;&lt;/span&gt; /var/log/audit/audit.log

解决方案：
    查看状态： sestatus &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt;
    首先确认是否是 SELinux 导致的问题：
    &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;avc:&#34;&lt;/span&gt; /var/log/audit/audit.log
    如果是，可以临时设置为 permissive 模式测试：
    &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; setenforce &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    永久解决方案是调整 SELinux 策略或修改文件上下文

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@scdp-ng-pro-01 nginx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ls -lrtZ /etc/nginx/ssl/&lt;/span&gt;
-rwxrwxrwx. root root unconfined_u:object_r:user_home_t:s0 star_crclogistics_com.key
-rwxrwxrwx. root root unconfined_u:object_r:user_home_t:s0 star_crclogistics_com.pem

&lt;span class=&#34;token comment&#34;&gt;# 修复文件权限&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@scdp-ng-pro-01 nginx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# restorecon -v -R /etc/nginx/ssl&lt;/span&gt;
restorecon reset /etc/nginx/ssl context unconfined_u:object_r:user_home_t:s0-&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;unconfined_u:object_r:httpd_config_t:s0
restorecon reset /etc/nginx/ssl/star_crclogistics_com.key context unconfined_u:object_r:user_home_t:s0-&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;unconfined_u:object_r:httpd_config_t:s0
restorecon reset /etc/nginx/ssl/star_crclogistics_com.pem context unconfined_u:object_r:user_home_t:s0-&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;unconfined_u:object_r:httpd_config_t:s0
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@scdp-ng-pro-01 nginx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# &lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@scdp-ng-pro-01 nginx&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ls -lrtZ /etc/nginx/ssl/&lt;/span&gt;
-rwxrwxrwx. root root unconfined_u:object_r:httpd_config_t:s0 star_crclogistics_com.key
-rwxrwxrwx. root root unconfined_u:object_r:httpd_config_t:s0 star_crclogistics_com.pem


&lt;span class=&#34;token comment&#34;&gt;#添加一个mysql数据目录&lt;/span&gt;
semanage fcontext &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; mysqld_db_t “/disk1/data&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;/.*&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;?”
&lt;span class=&#34;token comment&#34;&gt;# 加载这个目录 restorecon，这个命令的作用就是把文件的安全上下文恢复成默认的安全上下文&lt;/span&gt;
restorecon &lt;span class=&#34;token parameter variable&#34;&gt;-Rv&lt;/span&gt; /data


&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; semanage port &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; http_port_t &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; tcp &lt;span class=&#34;token number&#34;&gt;8400&lt;/span&gt;
使用&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;semanage port &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; mysql_port_t &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; tcp &lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;命令添加MySQL默认端口到SELinux策略，同时确保数据目录正确标注，执行
&lt;span class=&#34;token comment&#34;&gt;# 安全上下文的修改&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;chcon &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; mysqld_db_t /var/lib/mysql&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="Default" />
        <category term="nginx" />
        <category term="SELinux" />
        <updated>2025-06-25T03:51:44.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2025/04/16/linux-performance-optimization/</id>
        <title>linux performance optimization</title>
        <link rel="alternate" href="https://gyoliu.github.io/2025/04/16/linux-performance-optimization/"/>
        <content type="html">&lt;h3 id=&#34;模拟一个-CPU-使用率-100-的场景：&#34;&gt;&lt;a href=&#34;#模拟一个-CPU-使用率-100-的场景：&#34; class=&#34;headerlink&#34; title=&#34;模拟一个 CPU 使用率 100% 的场景：&#34;&gt;&lt;/a&gt;模拟一个 CPU 使用率 100% 的场景：&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;stress &lt;span class=&#34;token parameter variable&#34;&gt;--cpu&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--timeout&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 间隔 5 秒后输出一组数据&lt;/span&gt;
pidstat &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;模拟-I-O-压力，即不停地执行-sync：&#34;&gt;&lt;a href=&#34;#模拟-I-O-压力，即不停地执行-sync：&#34; class=&#34;headerlink&#34; title=&#34;模拟 I&amp;#x2F;O 压力，即不停地执行 sync：&#34;&gt;&lt;/a&gt;模拟 I&amp;#x2F;O 压力，即不停地执行 sync：&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;stress &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--timeout&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 间隔 5 秒后输出一组数据&lt;/span&gt;
mpstat &lt;span class=&#34;token parameter variable&#34;&gt;-P&lt;/span&gt; ALL &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 间隔 5 秒后输出一组数据，-u 表示 CPU 指标&lt;/span&gt;
pidstat &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;模拟的是-8-个进程：&#34;&gt;&lt;a href=&#34;#模拟的是-8-个进程：&#34; class=&#34;headerlink&#34; title=&#34;模拟的是 8 个进程：&#34;&gt;&lt;/a&gt;模拟的是 8 个进程：&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;stress &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--timeout&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 间隔 5 秒后输出一组数据，-u 表示 CPU 指标&lt;/span&gt;
pidstat &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;查询系统的上下文切换情况&#34;&gt;&lt;a href=&#34;#查询系统的上下文切换情况&#34; class=&#34;headerlink&#34; title=&#34;查询系统的上下文切换情况&#34;&gt;&lt;/a&gt;查询系统的上下文切换情况&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 每隔 5 秒输出 1 组数据&lt;/span&gt;
$ &lt;span class=&#34;token function&#34;&gt;vmstat&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt;   buff  cache   si   so    bi    bo   &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt;   cs us sy &lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt; wa st
 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7005360&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;91564&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;818900&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; 

cs（context switch）是每秒上下文切换的次数。
in（interrupt）则是每秒中断的次数。
r（Running or Runnable）是就绪队列的长度，也就是正在运行和等待 CPU 的进程数。
b（Blocked）则是处于不可中断睡眠状态的进程数。

&lt;span class=&#34;token function&#34;&gt;vmstat&lt;/span&gt; 只给出了系统总体的上下文切换情况，要想查看每个进程的详细情况，就需要使用我们前面提到过的 pidstat 了。给它加上 &lt;span class=&#34;token parameter variable&#34;&gt;-w&lt;/span&gt; 选项，你就可以查看每个进程上下文切换的情况了。
&lt;span class=&#34;token comment&#34;&gt;# 每隔 5 秒输出 1 组数据&lt;/span&gt;
$ pidstat &lt;span class=&#34;token parameter variable&#34;&gt;-w&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;

Linux &lt;span class=&#34;token number&#34;&gt;4.15&lt;/span&gt;.0 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ubuntu&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  09/23/18  _x86_64_  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; CPU&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
08:18:26      &lt;span class=&#34;token environment constant&#34;&gt;UID&lt;/span&gt;       PID   cswch/s nvcswch/s  Command
08:18:31        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.20&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  systemd
08:18:31        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;5.40&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  rcu_sched

这个结果中有两列内容是我们的重点关注对象。
一个是 cswch ，表示每秒自愿上下文切换（voluntary context switches）的次数，
另一个则是 nvcswch ，表示每秒非自愿上下文切换（non voluntary context switches）的次数。

所谓自愿上下文切换，是指进程无法获取所需资源，导致的上下文切换。比如说， I/O、内存等系统资源不足时，就会发生自愿上下文切换。
而非自愿上下文切换，则是指进程由于时间片已到等原因，被系统强制调度，进而发生的上下文切换。比如说，大量进程都在争抢 CPU 时，就容易发生非自愿上下文切换。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;apt-install-sysbench-sysstat&#34;&gt;&lt;a href=&#34;#apt-install-sysbench-sysstat&#34; class=&#34;headerlink&#34; title=&#34;apt install sysbench sysstat&#34;&gt;&lt;/a&gt;apt install sysbench sysstat&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; docker.io sysstat linux-tools-common apache2-utils
&lt;span class=&#34;token comment&#34;&gt;# 以 10 个线程运行 5 分钟的基准测试，模拟多线程切换的问题&lt;/span&gt;
$ sysbench &lt;span class=&#34;token parameter variable&#34;&gt;--threads&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; --max-time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;300&lt;/span&gt; threads run

接着，在第二个终端运行 &lt;span class=&#34;token function&#34;&gt;vmstat&lt;/span&gt; ，观察上下文切换情况：

&lt;span class=&#34;token comment&#34;&gt;# 每隔 1 秒输出 1 组数据（需要 Ctrl+C 才结束）&lt;/span&gt;
$ &lt;span class=&#34;token function&#34;&gt;vmstat&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt;   buff  cache   si   so    bi    bo   &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt;   cs us sy &lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt; wa st
 &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6487428&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;118240&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1292772&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9019&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1398830&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;84&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
 &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6487428&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;118240&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1292772&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10191&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1392312&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;84&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;

r 列：就绪队列的长度已经到了 &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;，远远超过了系统 CPU 的个数 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;，所以肯定会有大量的 CPU 竞争。
us（user）和 sy（system）列：这两列的 CPU 使用率加起来上升到了 &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;%，其中系统 CPU 使用率，也就是 sy 列高达 &lt;span class=&#34;token number&#34;&gt;84&lt;/span&gt;%，说明 CPU 主要是被内核占用了。
&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; 列：中断次数也上升到了 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; 万左右，说明中断处理也是个潜在的问题。

&lt;span class=&#34;token comment&#34;&gt;# 每隔 1 秒输出 1 组数据（需要 Ctrl+C 才结束）&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# -w 参数表示输出进程切换指标，而 -u 参数则表示输出 CPU 使用指标&lt;/span&gt;
$ pidstat &lt;span class=&#34;token parameter variable&#34;&gt;-wt&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
08:06:33      &lt;span class=&#34;token environment constant&#34;&gt;UID&lt;/span&gt;       PID    %usr %system  %guest   %wait    %CPU   CPU  Command
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;10488&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;30.00&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;100.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;100.00&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  sysbench
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;26326&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  kworker/u4:2 
08:06:33      &lt;span class=&#34;token environment constant&#34;&gt;UID&lt;/span&gt;       PID   cswch/s nvcswch/s  Command
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;11.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  rcu_sched
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  ksoftirqd/1
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;       &lt;span class=&#34;token number&#34;&gt;471&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  hv_balloon
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1230&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  iscsid
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;4089&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  kworker/1:5
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;4333&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  kworker/0:3
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;10499&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;1.00&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;224.00&lt;/span&gt;  pidstat
08:06:34        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;26326&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;236.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  kworker/u4:2
08:06:34     &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;     &lt;span class=&#34;token number&#34;&gt;26784&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;223.00&lt;/span&gt;      &lt;span class=&#34;token number&#34;&gt;0.00&lt;/span&gt;  sshd

&lt;span class=&#34;token comment&#34;&gt;# -d 参数表示高亮显示变化的区域&lt;/span&gt;
$ &lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /proc/interrupts
           CPU0       CPU1
&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.
RES:    &lt;span class=&#34;token number&#34;&gt;2450431&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;5279697&lt;/span&gt;   Rescheduling interrupts

碰到上下文切换次数过多的问题时，我们可以借助 &lt;span class=&#34;token function&#34;&gt;vmstat&lt;/span&gt; 、 pidstat 和 /proc/interrupts 等工具，来辅助排查性能问题的根源。

&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CPU-使用率过高分析&#34;&gt;&lt;a href=&#34;#CPU-使用率过高分析&#34; class=&#34;headerlink&#34; title=&#34;CPU 使用率过高分析&#34;&gt;&lt;/a&gt;CPU 使用率过高分析&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;预先安装 docker、sysstat、perf、ab 等工具

$ perf &lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt;
Samples: &lt;span class=&#34;token number&#34;&gt;833&lt;/span&gt;  of event &lt;span class=&#34;token string&#34;&gt;&#39;cpu-clock&#39;&lt;/span&gt;, Event count &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;approx.&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;token number&#34;&gt;97742399&lt;/span&gt;
Overhead  Shared Object       Symbol
   &lt;span class=&#34;token number&#34;&gt;7.28&lt;/span&gt;%  perf                &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 0x00000000001f78a4
   &lt;span class=&#34;token number&#34;&gt;4.72&lt;/span&gt;%  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;kernel&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;            &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; vsnprintf
   &lt;span class=&#34;token number&#34;&gt;4.32&lt;/span&gt;%  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;kernel&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;            &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; module_get_kallsym
   &lt;span class=&#34;token number&#34;&gt;3.65&lt;/span&gt;%  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;kernel&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;            &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; _raw_spin_unlock_irqrestore
第一列 Overhead ，是该符号的性能事件在所有采样中的比例，用百分比来表示。
第二列 Shared ，是该函数或指令所在的动态共享对象（Dynamic Shared Object），如内核、进程名、动态链接库名、内核模块名等。
第三列 Object ，是动态共享对象的类型。比如 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 表示用户空间的可执行程序、或者动态链接库，而 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 则表示内核空间。
最后一列 Symbol 是符号名，也就是函数名。当函数名未知时，用十六进制的地址来表示。
$ perf record
$ perf report


&lt;span class=&#34;token comment&#34;&gt;# 并发 10 个请求测试 Nginx 性能，总共测试 100 个请求&lt;/span&gt;
$ ab &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; http://192.168.0.10:10000/
This is ApacheBench, Version &lt;span class=&#34;token number&#34;&gt;2.3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$Revision&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1706008&lt;/span&gt; $&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;
Copyright &lt;span class=&#34;token number&#34;&gt;1996&lt;/span&gt; Adam Twiss, Zeus Technology Ltd, 
&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.
Requests per second:    &lt;span class=&#34;token number&#34;&gt;11.63&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#/sec] (mean)&lt;/span&gt;
Time per request:       &lt;span class=&#34;token number&#34;&gt;859.942&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ms&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mean&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.


$ ab &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt; http://10.240.0.5:10000/
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;. 运行 &lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt; 命令，并按下数字 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; ，切换到每个 CPU 的使用率,查看那个进程 CPU 高记录 PID
&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;. &lt;span class=&#34;token comment&#34;&gt;# -g 开启调用关系分析，-p 指定 php-fpm 的进程号 21515&lt;/span&gt;
$ perf &lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21515&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 高CPU调用时找不到进程的场景&lt;/span&gt;
第一个原因，进程在不停地崩溃重启，比如因为段错误、配置错误等等，这时，进程在退出后可能又被监控系统自动重启了。
第二个原因，这些进程都是短时进程，也就是在其他应用内部通过 &lt;span class=&#34;token builtin class-name&#34;&gt;exec&lt;/span&gt; 调用的外面命令。这些命令一般都只运行很短的时间就会结束，你很难用 &lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt; 这种间隔时间比较长的工具发现（上面的案例，我们碰巧发现了）。

方案如下：
&lt;span class=&#34;token comment&#34;&gt;# 记录性能事件，等待大约 15 秒后按 Ctrl+C 退出&lt;/span&gt;
$ perf record &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;# 查看报告&lt;/span&gt;
$ perf report


碰到常规问题无法解释的 CPU 使用率情况时，首先要想到有可能是短时应用导致的问题，比如有可能是下面这两种情况。

第一，应用里直接调用了其他二进制程序，这些程序通常运行时间比较短，通过 &lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt; 等工具也不容易发现。
第二，应用本身在不停地崩溃重启，而启动过程的资源初始化，很可能会占用相当多的 CPU。
对于这类进程，我们可以用 pstree 或者 execsnoop 找到它们的父进程，再从父进程所在的应用入手，排查问题的根源。

&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/linux-cmd-lists.png&#34;&gt;&lt;br&gt;&lt;img src=&#34;/img/linux-cmd-lists1.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="Default" />
        <updated>2025-04-16T15:06:58.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2025/04/10/java17jvm-params/</id>
        <title>java17jvm-params</title>
        <link rel="alternate" href="https://gyoliu.github.io/2025/04/10/java17jvm-params/"/>
        <content type="html">&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;--add-opens&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;java.base/java.lang&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-Xms1500m&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-Xmx1500m&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:ReservedCodeCacheSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;256m &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:InitialCodeCacheSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;256m &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt; 
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:+UnlockExperimentalVMOptions&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:+UseZGC&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:ConcGCThreads&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-XX:ParallelGCThreads&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:ZCollectionInterval&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-XX:ZAllocationSpikeTolerance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:+UnlockDiagnosticVMOptions&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-XX:-ZProactive&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    -Xlog:safepoint,classhisto*&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;trace,age*,gc*&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info:file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/gc-%t.log:time,tid,tags:filecount&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;,filesize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;50m &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;token parameter variable&#34;&gt;-XX:HeapDumpPath&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/errorDump.hprof


&lt;span class=&#34;token parameter variable&#34;&gt;-Xmx18g&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-Xms18g&lt;/span&gt; 堆大小
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:MaxDirectMemorySize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;2G 直接内存
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/span&gt; 当JVM发生OOM时，自动生成DUMP文件。
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:ReservedCodeCacheSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;256m &lt;span class=&#34;token parameter variable&#34;&gt;-XX:InitialCodeCacheSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;256m 设置codecache大小 默认128m
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:+UseZGC&lt;/span&gt; 使用ZGC
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:ZAllocationSpikeTolerance&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; ZGC触发自适应算法的修正系数，默认2，数值越大，越早的触发ZGC
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:ZCollectionInterval&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; ZGC的周期。默认值为0，表示不需要触发垃圾回收。固定周期垃圾回收。ZGC发生的最小时间间隔，单位秒
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:ConcGCThreads&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; 并发阶段的GC线程数，默认是总核数的12.5%
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:ZStatisticsInterval&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; 控制统计信息输出的间隔，默认10s
&lt;span class=&#34;token parameter variable&#34;&gt;-XX:ParallelGCThreads&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt; 并行工作线程数据，STW阶段使用线程数，默认是总核数的60%
-Xlog:safepoint,classhisto&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;trace,age,gc*&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;info:file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/logs/logs/gc-%t.log:time,tid,tags:filecount&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;,filesize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;50m’ 设置GC日志中的内容、格式、位置以及每个日志的大小&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Default" />
        <updated>2025-04-10T01:08:04.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2025/03/11/mysql%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/</id>
        <title>mysql主从搭建</title>
        <link rel="alternate" href="https://gyoliu.github.io/2025/03/11/mysql%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/"/>
        <content type="html">&lt;h1 id=&#34;主服务器配置&#34;&gt;&lt;a href=&#34;#主服务器配置&#34; class=&#34;headerlink&#34; title=&#34;主服务器配置&#34;&gt;&lt;/a&gt;主服务器配置&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#服务器 id，随意，但要唯一&lt;/span&gt;
server-id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;  
&lt;span class=&#34;token comment&#34;&gt;#二进制文件存放路径&lt;/span&gt;
log-bin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql-bin 
&lt;span class=&#34;token comment&#34;&gt;#参数用于排除自带的数据库。  &lt;/span&gt;
binlog-ignore-db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql 
binlog-ignore-db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; information_schema
binlog-ignore-db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; performance_schema
&lt;span class=&#34;token comment&#34;&gt;#二进制日志格式，建议使用ROW格式以获得更好的兼容性和可靠性。&lt;/span&gt;
binlog-format &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ROW 


&lt;span class=&#34;token comment&#34;&gt;#创建用户&lt;/span&gt;
CREATE &lt;span class=&#34;token environment constant&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;db_sync&#39;&lt;/span&gt;@&lt;span class=&#34;token string&#34;&gt;&#39;%&#39;&lt;/span&gt; IDENTIFIED BY &lt;span class=&#34;token string&#34;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#授权账号复制权限&lt;/span&gt;
GRANT REPLICATION SLAVE ON *.* TO &lt;span class=&#34;token string&#34;&gt;&#39;db_sync&#39;&lt;/span&gt;@&lt;span class=&#34;token string&#34;&gt;&#39;%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#刷新配置&lt;/span&gt;
FLUSH PRIVILEGES&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

CREATE &lt;span class=&#34;token environment constant&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;repl&#39;&lt;/span&gt;@&lt;span class=&#34;token string&#34;&gt;&#39;从库IP&#39;&lt;/span&gt; IDENTIFIED BY &lt;span class=&#34;token string&#34;&gt;&#39;密码&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
GRANT REPLICATION SLAVE ON *.* TO &lt;span class=&#34;token string&#34;&gt;&#39;repl&#39;&lt;/span&gt;@&lt;span class=&#34;token string&#34;&gt;&#39;从库IP&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
FLUSH PRIVILEGES&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;#记下输出中的 File 和 Position 值，后续在从服务器上使用。&lt;/span&gt;
SHOW MASTER STATUS &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;G&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;从服务器配置&#34;&gt;&lt;a href=&#34;#从服务器配置&#34; class=&#34;headerlink&#34; title=&#34;从服务器配置&#34;&gt;&lt;/a&gt;从服务器配置&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;server-id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#中继日志文件的名称，用于从主服务器接收二进制日志事件。&lt;/span&gt;
relay-log &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql-relay-bin 
&lt;span class=&#34;token comment&#34;&gt;#从服务器的二进制日志文件的名称。&lt;/span&gt;
log_bin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql-bin 
&lt;span class=&#34;token comment&#34;&gt;# 从库只读‌&lt;/span&gt;
read_only &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;                   
&lt;span class=&#34;token comment&#34;&gt;#不同步相关的库&lt;/span&gt;
replicate-ignore-db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql 
replicate-ignore-db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; information_schema
replicate-ignore-db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; performance_schema

为了保障较高的数据安全性，master配置sync_binlog&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;，innodb_flush_log_at_trx_commit&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;等设置。
而Slave可以关闭binlog，innodb_flush_log_at_trx_commit也可以设置为0来提高sql的执行效率

&lt;span class=&#34;token comment&#34;&gt;# sync_binlog的工作原理&lt;/span&gt;
- 当sync_binlog设置为0时，MySQL在事务提交后不会立即执行磁盘同步操作，而是依赖文件系统来决定何时同步。这种设置可以提高性能，但在系统崩溃的情况下可能会丢失数据。
- 设置为1时，MySQL会在每次事务提交后立即将binlog缓存中的数据同步到磁盘，这提供了最高的数据安全性，但会增加磁盘I/O的负担，从而影响性能。
- 设置为大于1的值时，MySQL会在多次事务提交后执行一次磁盘同步，这是一种折中的策略，既保证了一定程度的数据安全性，又提高了性能。

&lt;span class=&#34;token comment&#34;&gt;# innodb_flush_log_at_trx_commit&lt;/span&gt;
该参数是MySQL InnoDB存储引擎独有的参数，用于控制InnoDB的Redo log日志记录方式。取值范围为0、1、2：
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;：每秒将日志缓冲区（Log Buffer）中的数据写入磁盘，事务提交时不主动刷盘。
优点：性能最高。
风险：实例崩溃时可能丢失最多1秒的事务数据。
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;（默认值）：每次事务提交时，立即将日志缓冲区的数据写入磁盘并刷盘。
优点：完全遵守ACID特性，数据安全性最高。
缺点：性能开销较大，尤其在高并发场景下。
&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;：每次事务提交时将日志缓冲区的数据写入文件系统缓存，每秒由操作系统调度刷盘一次。
优点：性能优于1，数据安全性高于0。
风险：实例崩溃时可能丢失最近1秒内的事务数据。

调优原则
高安全性场景：建议将innodb_flush_log_at_trx_commit和sync_binlog均设置为1，确保数据实时落盘。
高性能场景：可以将innodb_flush_log_at_trx_commit设置为 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;，sync_binlog设置为1000，以提升性能，但需接受一定的数据丢失风险。
不推荐的配置：
将innodb_flush_log_at_trx_commit设置为0：可能导致实例重启时丢失大量数据。
将sync_binlog设置为0：可能导致Binlog Rotate阻塞时间过长，影响性能稳定性。

&lt;span class=&#34;token comment&#34;&gt;#启动从库&lt;/span&gt;
systemctl restart mysqld

&lt;span class=&#34;token comment&#34;&gt;#在从服务器指定主库并开启同步&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#暂停同步&lt;/span&gt;
STOP SLAVE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

CHANGE MASTER TO
 MASTER_HOST &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;10.10.104.51&#39;&lt;/span&gt;,
 MASTER_USER &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;db_sync&#39;&lt;/span&gt;,
 MASTER_PASSWORD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;xxx&#39;&lt;/span&gt;,
 &lt;span class=&#34;token comment&#34;&gt;#主服务器数据库上的file值(不能有空格)&lt;/span&gt;
 &lt;span class=&#34;token comment&#34;&gt;#这里的填写主服务器，上面2.4部分的File 值&lt;/span&gt;
 MASTER_LOG_FILE &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;mysql-bin.000001&#39;&lt;/span&gt;,   
 &lt;span class=&#34;token comment&#34;&gt;#这里的填写主服务器，上面2.4部分的Position值 SHOW MASTER STATUS \G; 获取&lt;/span&gt;
 MASTER_LOG_POS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;157&lt;/span&gt;,
 &lt;span class=&#34;token assign-left variable&#34;&gt;get_master_public_key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;


 &lt;span class=&#34;token comment&#34;&gt;# gtid模式&lt;/span&gt;

CHANGE MASTER TO
&lt;span class=&#34;token assign-left variable&#34;&gt;MASTER_HOST&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;主库IP&#39;&lt;/span&gt;,
&lt;span class=&#34;token assign-left variable&#34;&gt;MASTER_USER&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;repl&#39;&lt;/span&gt;,
&lt;span class=&#34;token assign-left variable&#34;&gt;MASTER_PASSWORD&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;密码&#39;&lt;/span&gt;,
&lt;span class=&#34;token assign-left variable&#34;&gt;MASTER_AUTO_POSITION&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;


&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;sync-binlog-innodb-flush-log-at-trx-commit-参数设置示例-下文通过几个典型的场景对上述两个参数的配置进行说明：&#34;&gt;&lt;a href=&#34;#sync-binlog-innodb-flush-log-at-trx-commit-参数设置示例-下文通过几个典型的场景对上述两个参数的配置进行说明：&#34; class=&#34;headerlink&#34; title=&#34;sync_binlog innodb_flush_log_at_trx_commit 参数设置示例 下文通过几个典型的场景对上述两个参数的配置进行说明：&#34;&gt;&lt;/a&gt;sync_binlog innodb_flush_log_at_trx_commit 参数设置示例 下文通过几个典型的场景对上述两个参数的配置进行说明：&lt;/h1&gt;&lt;h1 id=&#34;场景一：只读实例延迟&#34;&gt;&lt;a href=&#34;#场景一：只读实例延迟&#34; class=&#34;headerlink&#34; title=&#34;场景一：只读实例延迟&#34;&gt;&lt;/a&gt;场景一：只读实例延迟&lt;/h1&gt;&lt;p&gt;RDS MySQL提供只读实例功能，用于分担主实例的读压力。如果只读实例使用默认参数模板（sync_binlog&amp;#x3D;1，innodb_flush_log_at_trx_commit&amp;#x3D;1），在主实例写压力较大时，可能导致只读实例的Binlog应用延迟。&lt;br&gt;优化建议：&lt;br&gt;将只读实例的sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为2，提升Binlog应用效率。&lt;br&gt;注意：此配置不能完全消除延迟，需根据具体情况进行分析。&lt;/p&gt;
&lt;h1 id=&#34;场景二：DTS数据迁移速度慢&#34;&gt;&lt;a href=&#34;#场景二：DTS数据迁移速度慢&#34; class=&#34;headerlink&#34; title=&#34;场景二：DTS数据迁移速度慢&#34;&gt;&lt;/a&gt;场景二：DTS数据迁移速度慢&lt;/h1&gt;&lt;p&gt;在使用 DTS 进行数据迁移时，目标实例可能因频繁的Binlog和Redo Log落盘操作导致写入性能瓶颈。&lt;br&gt;优化建议：&lt;br&gt;将目标实例的sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为 2，加速数据写入。&lt;br&gt;数据迁移完成后，可根据需求恢复默认配置。&lt;/p&gt;
&lt;h1 id=&#34;场景三：热点更新性能差&#34;&gt;&lt;a href=&#34;#场景三：热点更新性能差&#34; class=&#34;headerlink&#34; title=&#34;场景三：热点更新性能差&#34;&gt;&lt;/a&gt;场景三：热点更新性能差&lt;/h1&gt;&lt;p&gt;在大促或秒杀场景中，若sync_binlog和innodb_flush_log_at_trx_commit均设置为 1，可能导致大量并发写入时性能下降。&lt;br&gt;优化建议：&lt;br&gt;临时将sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为 2，提升并发能力。&lt;br&gt;活动结束后恢复默认配置，确保数据安全性。&lt;/p&gt;
&lt;h1 id=&#34;如果主从不同步需要全量初始化从库&#34;&gt;&lt;a href=&#34;#如果主从不同步需要全量初始化从库&#34; class=&#34;headerlink&#34; title=&#34;如果主从不同步需要全量初始化从库&#34;&gt;&lt;/a&gt;如果主从不同步需要全量初始化从库&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#停止异常的同步&lt;/span&gt;
stop slave&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#重置slave，会重置从库相关设置。&lt;/span&gt;
reset slave all&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#清除已同步数据库 请重视备份&lt;/span&gt;
drop database &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;***&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#重置主库同步设置&lt;/span&gt;
RESET MASTER&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#锁定主库，只能读&lt;/span&gt;
FLUSH TABLES WITH READ LOCK&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 导出数据库&lt;/span&gt;
mysqldump –h&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip***&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; –P&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;port***&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; –u&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user***&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; –p&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pwd***&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; --all-databases &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; /master-dump.sql
&lt;span class=&#34;token comment&#34;&gt;#解锁主库&lt;/span&gt;
UNLOCK TABLES&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mysql-设置root密码&#34;&gt;&lt;a href=&#34;#mysql-设置root密码&#34; class=&#34;headerlink&#34; title=&#34;mysql 设置root密码&#34;&gt;&lt;/a&gt;mysql 设置root密码&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 初始化&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; mysql_secure_installation

&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; /etc/mysql/mysql.conf.d/mysqld.cnf
skip-grant-tables

&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl restart mysql
mysql &lt;span class=&#34;token parameter variable&#34;&gt;-uroot&lt;/span&gt;

flush privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
ALTER &lt;span class=&#34;token environment constant&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;@&lt;span class=&#34;token string&#34;&gt;&#39;localhost&#39;&lt;/span&gt; IDENTIFIED WITH mysql_native_password BY &lt;span class=&#34;token string&#34;&gt;&#39;xx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
flush privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; /var/run/mysqld
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; mysql:mysql /var/run/mysqld
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;750&lt;/span&gt; /var/run/mysqld


&lt;span class=&#34;token comment&#34;&gt;# 如果要改msyql 的socket 等文件位置 必须修改 AppArmor 策略文件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; /etc/apparmor.d/usr.sbin.mysqld
/var/lib/mysqld/** rwkl,
/var/lib/mysqld/ rw,
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; apparmor_parser &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; /etc/apparmor.d/usr.sbin.mysqld
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl restart mysql


&lt;span class=&#34;token comment&#34;&gt;# 解决主从同步错误的临时方案&lt;/span&gt;
STOP SLAVE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
SET GLOBAL &lt;span class=&#34;token assign-left variable&#34;&gt;SQL_SLAVE_SKIP_COUNTER&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
START SLAVE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;h3 id=&#34;查看表碎片情况&#34;&gt;&lt;a href=&#34;#查看表碎片情况&#34; class=&#34;headerlink&#34; title=&#34;查看表碎片情况&#34;&gt;&lt;/a&gt;查看表碎片情况&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;Table&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
       &lt;span class=&#34;token function&#34;&gt;ROUND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data_length &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; index_length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;Size (MB)&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;token function&#34;&gt;ROUND&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data_free &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;Free Space (MB)&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_schema &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_database_name&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; data_free &lt;span class=&#34;token keyword&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;碎片优化语句&#34;&gt;&lt;a href=&#34;#碎片优化语句&#34; class=&#34;headerlink&#34; title=&#34;碎片优化语句&#34;&gt;&lt;/a&gt;碎片优化语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;OPTIMIZE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; table_name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;批量优化整个数据库&#34;&gt;&lt;a href=&#34;#批量优化整个数据库&#34; class=&#34;headerlink&#34; title=&#34;批量优化整个数据库&#34;&gt;&lt;/a&gt;批量优化整个数据库&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@tables&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; GROUP_CONCAT&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@tables&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_schema &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_database_name&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; table_type &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;BASE TABLE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@tables&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; CONCAT&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;OPTIMIZE TABLE &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@tables&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;PREPARE&lt;/span&gt; stmt &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@tables&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DEALLOCATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PREPARE&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;分析表结构‌&#34;&gt;&lt;a href=&#34;#分析表结构‌&#34; class=&#34;headerlink&#34; title=&#34;分析表结构‌&#34;&gt;&lt;/a&gt;分析表结构‌&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;ANALYZE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; table_name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;&#34;&gt;&lt;a href=&#34;#&#34; class=&#34;headerlink&#34; title=&#34;&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;p&gt;‌锁表问题‌：OPTIMIZE TABLE操作会锁定表，在高负载时段应谨慎使用‌78&lt;br&gt;‌存储引擎差异‌：&lt;br&gt;MyISAM表：OPTIMIZE会完全重建表，效果显著‌&lt;br&gt;InnoDB表：会重建表并重新组织数据和索引页‌&lt;/p&gt;
&lt;p&gt;‌替代方案‌：对于InnoDB表，可以考虑使用ALTER TABLE table_name ENGINE&amp;#x3D;InnoDB来重建表‌&lt;br&gt;‌定期执行‌：建议在业务低峰期定期执行碎片整理，特别是频繁增删改的表‌&lt;br&gt;‌空间回收‌：OPTIMIZE TABLE可以回收删除数据后未释放的空间‌&lt;/p&gt;
&lt;h3 id=&#34;mysql-慢查询&#34;&gt;&lt;a href=&#34;#mysql-慢查询&#34; class=&#34;headerlink&#34; title=&#34;mysql 慢查询&#34;&gt;&lt;/a&gt;mysql 慢查询&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;mysqldumpslow -s r -t 10 &amp;#x2F;data&amp;#x2F;mysql&amp;#x2F;debian-kjlog-db1-slow.log &amp;gt; slow1.sql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;h3 id=&#34;主库配置&#34;&gt;&lt;a href=&#34;#主库配置&#34; class=&#34;headerlink&#34; title=&#34;主库配置&#34;&gt;&lt;/a&gt;主库配置&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-conf&#34; data-language=&#34;conf&#34;&gt;&lt;code class=&#34;language-conf&#34;&gt;[mysqld]
server-id &amp;#x3D; 1  # 必须唯一，主库通常设为1
log-bin &amp;#x3D; mysql-bin  # 启用二进制日志
binlog-format &amp;#x3D; ROW  # 推荐生产环境使用ROW格式
binlog_expire_logs_seconds &amp;#x3D; 2592000  # 设置binlog保留30天(可选)
sync_binlog &amp;#x3D; 1  # 每次事务提交都同步binlog到磁盘
gtid_mode &amp;#x3D; ON  # 启用GTID模式‌:ml-citation&amp;#123;ref&amp;#x3D;&amp;quot;6,8&amp;quot; data&amp;#x3D;&amp;quot;citationList&amp;quot;&amp;#125;
enforce_gtid_consistency &amp;#x3D; ON  # 强制GTID一致性
binlog_group_commit_sync_delay &amp;#x3D; 100  # 组提交优化参数(可选)
binlog_group_commit_sync_no_delay_count &amp;#x3D; 10  # 组提交优化参数(可选)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从库配置&#34;&gt;&lt;a href=&#34;#从库配置&#34; class=&#34;headerlink&#34; title=&#34;从库配置&#34;&gt;&lt;/a&gt;从库配置&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-conf&#34; data-language=&#34;conf&#34;&gt;&lt;code class=&#34;language-conf&#34;&gt;[mysqld]
server-id &amp;#x3D; 2  # 必须唯一且不同于主库 
log-bin &amp;#x3D; mysql-bin  # 推荐从库也开启binlog‌ 
log_slave_updates &amp;#x3D; ON  # 启用级联复制时需要
read_only &amp;#x3D; ON  # 设置从库为只读模式
super_read_only &amp;#x3D; ON  # 防止特权用户写入(8.0+)
skip_slave_start &amp;#x3D; ON  # 防止自动启动复制(生产安全)
gtid_mode &amp;#x3D; ON 
enforce_gtid_consistency &amp;#x3D; ON&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SHOW BINARY LOG STATUS \G;&lt;br&gt;SHOW REPLICA STATUS \G;&lt;br&gt;START REPLICA;&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; show binary log status \G;&lt;br&gt;*************************** 1. row ***************************&lt;br&gt;             File: binlog.000008&lt;br&gt;         Position: 12543683&lt;br&gt;     Binlog_Do_DB: tai_hua&lt;br&gt; Binlog_Ignore_DB:&lt;br&gt;Executed_Gtid_Set: 2170bdc8-093b-11f0-b82d-005056b87daf:1-57547,&lt;br&gt;f6f51b80-d477-11ef-bc3e-005056b87daf:1-52662&lt;/p&gt;
&lt;p&gt;CHANGE REPLICATION SOURCE TO&lt;br&gt;SOURCE_HOST&amp;#x3D;’主库IP’,&lt;br&gt;SOURCE_USER&amp;#x3D;’repl’,&lt;br&gt;SOURCE_PASSWORD&amp;#x3D;’password’,&lt;br&gt;SOURCE_PORT&amp;#x3D;3306,&lt;br&gt;SOURCE_AUTO_POSITION&amp;#x3D;1;&lt;/p&gt;
</content>
        <category term="Default" />
        <category term="mysql" />
        <updated>2025-03-11T01:16:40.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2025/03/06/XtraBackup-mysql-backup/</id>
        <title>XtraBackup mysql backup</title>
        <link rel="alternate" href="https://gyoliu.github.io/2025/03/06/XtraBackup-mysql-backup/"/>
        <content type="html">&lt;h1 id=&#34;1-安装-Percona-XtraBackup&#34;&gt;&lt;a href=&#34;#1-安装-Percona-XtraBackup&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Percona XtraBackup&#34;&gt;&lt;/a&gt;1. 安装 Percona XtraBackup&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# Ubuntu/Debian&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://repo.percona.com/apt/percona-release_latest.&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;lsb_release &lt;span class=&#34;token parameter variable&#34;&gt;-sc&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;_all.deb
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; dpkg &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; percona-release_latest.&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;lsb_release &lt;span class=&#34;token parameter variable&#34;&gt;-sc&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;_all.deb
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; percona-xtrabackup-80

&lt;span class=&#34;token comment&#34;&gt;# CentOS/RHEL&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; https://repo.percona.com/yum/percona-release-latest.noarch.rpm
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; percona-xtrabackup-80&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;备份需要的权限&#34;&gt;&lt;a href=&#34;#备份需要的权限&#34; class=&#34;headerlink&#34; title=&#34;备份需要的权限&#34;&gt;&lt;/a&gt;备份需要的权限&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;Xtrabackup 备份工具，备份时用户需要有以下权限。
Reload：用于执行 FLUSH TABLES WITH REDO LOCK 和 FLUSH NO_WRITE_TO_BINLOG TABLES 是必需权限。
Replication client：用于执行 SHOW MASTER STATUS 和 SHOW SLAVE STATUS 查看位点信息，是必需权限。
BACKUP_ADMIN：用于执行 LOCK INSTANCE FOR BACKUP，是必需权限。
Process：用于执行 SHOW ENGINE INNODB STATUS 和 SHOW PROCESSLIST 是必需权限。
SYSTEM_VARIABLES_ADMIN：用于在增量备份时执行 SET GLOBAL mysqlbackup.backupid &amp;#x3D; xxx 操作，是非必需权限。
SUPER：在指定 –kill-long-queries-timeout 需要杀掉慢查询，和从库备份指定 –safe-slave-backup 需要重启复制，需要用到该权限。
SHOW VIEW：确认是否有非 INNODB 引擎表。
如果使用 Page Tracking 进行增量备份，还需要 mysql.component 表的查询权限。
如果指定 –history 还需要 performance_schema.xtraback_history 的 SELECT、INSERT、CREATE、ALTER 权限。
以下是 MySQL 8.0 以上版本的完整授权示例：
CREATE USER &amp;#39;backuser&amp;#39;@&amp;#39;localhost&amp;#39;  IDENTIFIED WITH mysql_native_password BY &amp;#39;BackUser@2025&amp;#39;;
GRANT BACKUP_ADMIN, PROCESS, RELOAD, LOCK TABLES, REPLICATION CLIENT ON *.* TO &amp;#39;backuser&amp;#39;@&amp;#39;localhost&amp;#39;;
GRANT SELECT ON performance_schema.log_status TO &amp;#39;backuser&amp;#39;@&amp;#39;localhost&amp;#39;;
GRANT SELECT ON performance_schema.keyring_component_status TO backuser@&amp;#39;localhost&amp;#39;;
GRANT SELECT ON performance_schema.replication_group_members TO backuser@&amp;#39;localhost&amp;#39;;
FLUSH PRIVILEGES;
以下是 MySQL 5.7 版本的完整授权示例：
CREATE USER &amp;#39;bkpuser&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;s3cret&amp;#39;;
GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT ON *.* TO &amp;#39;bkpuser&amp;#39;@&amp;#39;localhost&amp;#39;;
FLUSH PRIVILEGES;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-全量备份（Full-Backup）&#34;&gt;&lt;a href=&#34;#2-全量备份（Full-Backup）&#34; class=&#34;headerlink&#34; title=&#34;2. 全量备份（Full Backup）&#34;&gt;&lt;/a&gt;2. 全量备份（Full Backup）&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建全量备份目录&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;BACKUP_DIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/backup/mysql/full/&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 执行备份（无锁表）&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--backup&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  &lt;span class=&#34;token parameter variable&#34;&gt;--user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;backup_user &lt;span class=&#34;token parameter variable&#34;&gt;--password&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;YourSecurePassword &lt;span class=&#34;token parameter variable&#34;&gt;-H&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;-P3306&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  &lt;span class=&#34;token parameter variable&#34;&gt;--databases&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xxx&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --exclude-tables&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;TARGET_DATABASE&amp;#125;&lt;/span&gt;.&lt;span class=&#34;token variable&#34;&gt;$&amp;#123;EXCLUDE_TABLE&amp;#125;&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  &lt;span class=&#34;token parameter variable&#34;&gt;--compress&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --slave-info &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --compress-threads&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;gzip&lt;/span&gt; - &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; xxx.tar.gz

&lt;span class=&#34;token comment&#34;&gt;# 生成校验文件（可选）&lt;/span&gt;
sha256sum &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;/backup.xbstream &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;/checksum.sha256

&lt;span class=&#34;token comment&#34;&gt;# 上传至云存储（AWS S3示例）&lt;/span&gt;
aws s3 &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--sse&lt;/span&gt; AES256 &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt; s3://your-bucket/mysql/full/ &lt;span class=&#34;token parameter variable&#34;&gt;--recursive&lt;/span&gt;

关键参数介绍：
–backup：发起全量备份。
-u, -H, -P, -p：连接 mysql 实例，用户名、主机 IP、端口、密码。
–slave-info：记录 slave 复制位点信息，一般备份从库需要指定该参数。
–target-dir：备份文件的存放路径。
–parallel：并发拷贝的线程数。
&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&gt;&lt;/span&gt; /tmp/xtrabackup.log：将备份过程中的日志重定向到 /tmp/xtrabackup.log 文件中。

备份出来的文件中，除了数据文件，还有以下额外的文件：
backup-my.cnf：该文件不是 MySQL 参数文件的备份，只是记录了一些 Innodb 引擎的参数，会在 Prepare 阶段用到。
xtrabackup_logfile：该文件用来保存拷贝的 redo log。
xtrabackup_binlog_info：binlog 位点信息和 GTID 信息。使用该备份恢复后，需要从该 binlog 位点进行增量恢复。
xtrabackup_slave_info：如果是对从库进行备份，指定 –slave-info 该文件会记录主节点的位点信息，取自 SHOW SLAVE STATUS 中的 Relay_Master_Log_File 和 Exec_Master_Log_Pos。如果是给主库备份，该文件为空。
xtrabackup_checkpoints：该文件记录了备份类型和 LSN 信息。
xtrabackup_info：该文件中，记录备份的详细信息。
xtrabackup_tablespaces：记录备份集中表空间的信息。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;全量流式备份&#34;&gt;&lt;a href=&#34;#全量流式备份&#34; class=&#34;headerlink&#34; title=&#34;全量流式备份&#34;&gt;&lt;/a&gt;全量流式备份&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--backup&lt;/span&gt; --slave-info  &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; root &lt;span class=&#34;token parameter variable&#34;&gt;-H&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;-P3306&lt;/span&gt; -p&lt;span class=&#34;token string&#34;&gt;&#39;YouPassword&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
 &lt;span class=&#34;token parameter variable&#34;&gt;--stream&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;xbstream --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/data/backup/bakup_&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; +&lt;span class=&#34;token string&#34;&gt;&#34;%F_%H_%M_%S&#34;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&gt;&lt;/span&gt;/data/backup/xtrabackup.log  &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt; root@172.16.104.7 &lt;span class=&#34;token function&#34;&gt;gzip&lt;/span&gt; -  &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; /data/backup/backup.gz

 远程恢复的时候，需要先使用 xbstream 命令进行解压：
 xbstream &lt;span class=&#34;token parameter variable&#34;&gt;-x&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--parallel&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-C&lt;/span&gt; /data/backup/20231113 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ./backup.xbstream
 xbstream 中的 &lt;span class=&#34;token parameter variable&#34;&gt;-x&lt;/span&gt; 表示解压，–parallel 表示并行度，-C 指定解压的目录，最后一级目录必须存在。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;3-增量备份（Incremental-Backup）&#34;&gt;&lt;a href=&#34;#3-增量备份（Incremental-Backup）&#34; class=&#34;headerlink&#34; title=&#34;3. 增量备份（Incremental Backup）&#34;&gt;&lt;/a&gt;3. 增量备份（Incremental Backup）&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 假设最后一次全量备份路径：/backup/mysql/full/20231001&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;# 获取上一次备份目录（全量或增量）&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;LAST_BACKUP&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; /backup/mysql/*/* &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 创建增量备份目录&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;INC_DIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/backup/mysql/inc/&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$INC_DIR&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 执行增量备份&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--backup&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  &lt;span class=&#34;token parameter variable&#34;&gt;--user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;backup_user &lt;span class=&#34;token parameter variable&#34;&gt;--password&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;YourSecurePassword &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$INC_DIR&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --incremental-basedir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LAST_BACKUP&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  &lt;span class=&#34;token parameter variable&#34;&gt;--compress&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --compress-threads&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 上传至云存储&lt;/span&gt;
aws s3 &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--sse&lt;/span&gt; AES256 &lt;span class=&#34;token variable&#34;&gt;$INC_DIR&lt;/span&gt; s3://your-bucket/mysql/inc/ &lt;span class=&#34;token parameter variable&#34;&gt;--recursive&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;3-Binlog-实时备份&#34;&gt;&lt;a href=&#34;#3-Binlog-实时备份&#34; class=&#34;headerlink&#34; title=&#34;3. Binlog 实时备份&#34;&gt;&lt;/a&gt;3. Binlog 实时备份&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 定时任务（每5分钟同步一次）&lt;/span&gt;
*/5 * * * * &lt;span class=&#34;token function&#34;&gt;rsync&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-avz&lt;/span&gt; /var/lib/mysql/mysql-bin.* /backup/mysql/binlog/
&lt;span class=&#34;token comment&#34;&gt;# 每日归档并清理旧文件&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; * * * &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /backup/mysql/binlog/ &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;mysql-bin.*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-mtime&lt;/span&gt; +30 &lt;span class=&#34;token parameter variable&#34;&gt;-exec&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;1-恢复全量备份&#34;&gt;&lt;a href=&#34;#1-恢复全量备份&#34; class=&#34;headerlink&#34; title=&#34;1. 恢复全量备份&#34;&gt;&lt;/a&gt;1. 恢复全量备份&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 停止 MySQL 服务&lt;/span&gt;
systemctl stop mysql

&lt;span class=&#34;token comment&#34;&gt;# 清空数据目录&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /var/lib/mysql/*

&lt;span class=&#34;token comment&#34;&gt;# 解压并准备备份&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--decompress&lt;/span&gt; --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; --apply-log-only --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001

&lt;span class=&#34;token comment&#34;&gt;# 复制数据文件&lt;/span&gt;
xtrabackup --copy-back --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001

&lt;span class=&#34;token comment&#34;&gt;# 修改权限并启动&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; mysql:mysql /var/lib/mysql
systemctl start mysql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;2-应用增量备份&#34;&gt;&lt;a href=&#34;#2-应用增量备份&#34; class=&#34;headerlink&#34; title=&#34;2. 应用增量备份&#34;&gt;&lt;/a&gt;2. 应用增量备份&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 解压数据&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--decompress&lt;/span&gt; --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001
&lt;span class=&#34;token comment&#34;&gt;# 准备全量备份（必须步骤）&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; --apply-log-only --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001

&lt;span class=&#34;token comment&#34;&gt;# 应用第一个增量备份&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; --apply-log-only &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --incremental-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/inc/20231002

&lt;span class=&#34;token comment&#34;&gt;# 应用后续增量备份（按时间顺序）&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; --apply-log-only &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001 &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
  --incremental-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/inc/20231003

&lt;span class=&#34;token comment&#34;&gt;# 最后准备（确保一致性）&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001

&lt;span class=&#34;token comment&#34;&gt;# 复制数据并启动 MySQL（同上）&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 复制数据文件&lt;/span&gt;
xtrabackup --copy-back --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/backup/mysql/full/20231001

&lt;span class=&#34;token comment&#34;&gt;# 修改权限并启动&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; mysql:mysql /var/lib/mysql
systemctl start mysql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-通过-Binlog-恢复至最新状态&#34;&gt;&lt;a href=&#34;#3-通过-Binlog-恢复至最新状态&#34; class=&#34;headerlink&#34; title=&#34;3. 通过 Binlog 恢复至最新状态&#34;&gt;&lt;/a&gt;3. 通过 Binlog 恢复至最新状态&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 解析增量备份后的 Binlog 位置&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /backup/mysql/full/20231001/xtrabackup_binlog_info
&lt;span class=&#34;token comment&#34;&gt;# 输出示例：mysql-bin.000007 154&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用 mysqlbinlog 导出 SQL（从指定位置到故障时间点）&lt;/span&gt;
mysqlbinlog --start-position&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;154&lt;/span&gt; /var/lib/mysql/mysql-bin.000007 &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;. &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; mysql &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; root &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;1-备份脚本示例（mysql-backup-sh）&#34;&gt;&lt;a href=&#34;#1-备份脚本示例（mysql-backup-sh）&#34; class=&#34;headerlink&#34; title=&#34;1. 备份脚本示例（mysql_backup.sh）&#34;&gt;&lt;/a&gt;1. 备份脚本示例（mysql_backup.sh）&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 全量备份（每周日执行）&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; +%u&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-eq&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;token assign-left variable&#34;&gt;BACKUP_DIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/backup/mysql/full/&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;
  &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;
  xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--backup&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;root &lt;span class=&#34;token parameter variable&#34;&gt;--password&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;YourPassword --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;
  &lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-czf&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;.tar.gz &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;
  aws s3 &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;.tar.gz s3://your-bucket/mysql-backup/full/
&lt;span class=&#34;token comment&#34;&gt;# 增量备份（其他日期）&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
  &lt;span class=&#34;token assign-left variable&#34;&gt;LAST_FULL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; /backup/mysql/full/* &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&#34;token assign-left variable&#34;&gt;BACKUP_DIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/backup/mysql/inc/&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;
  &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;
  xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--backup&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;root &lt;span class=&#34;token parameter variable&#34;&gt;--password&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;YourPassword --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt; --incremental-basedir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$LAST_FULL&lt;/span&gt;
  &lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-czf&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;.tar.gz &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;
  aws s3 &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$BACKUP_DIR&lt;/span&gt;.tar.gz s3://your-bucket/mysql-backup/inc/
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 清理旧备份（每日 4:00 AM）&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; * * * &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /backup/mysql/full/ &lt;span class=&#34;token parameter variable&#34;&gt;-mtime&lt;/span&gt; +30 &lt;span class=&#34;token parameter variable&#34;&gt;-exec&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; * * * &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /backup/mysql/inc/ &lt;span class=&#34;token parameter variable&#34;&gt;-mtime&lt;/span&gt; +7 &lt;span class=&#34;token parameter variable&#34;&gt;-exec&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 查看全部定时任务&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;crontab&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 编辑 crontab&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;crontab&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 全量备份（每周日 2:00 AM）&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; * * &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt; /scripts/full_backup.sh
&lt;span class=&#34;token comment&#34;&gt;# 增量备份（每日 3:00 AM）&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; * * &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;-6 /scripts/inc_backup.sh

&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt; * * * /home/syscook/xtrabackup_backup.sh full
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt; * * * /home/syscook/xtrabackup_backup.sh inc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;[生产MySQL] → [XtraBackup 全量&amp;#x2F;增量] → [本地SSD] → [加密上传至S3]
                          ↓
                  [Binlog 实时同步] → [独立存储]
                          ↓
                   [监控告警] → [运维团队]&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;命令参数&#34;&gt;&lt;a href=&#34;#命令参数&#34; class=&#34;headerlink&#34; title=&#34;命令参数&#34;&gt;&lt;/a&gt;命令参数&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;
&lt;span class=&#34;token parameter variable&#34;&gt;--backup&lt;/span&gt; 模式，用于在目标目录中进行备份
&lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; 模式，用于从备份中恢复数据（在--backup模式下创建）
--copy-back 模式，用于从备份中复制数据到原始数据所在的位置；若要移动数据而不是复制，请使用替代的--move-back模式。
&lt;span class=&#34;token parameter variable&#34;&gt;--stats&lt;/span&gt; 模式，用于扫描指定的数据文件并打印出索引统计信息。

xtrabackup &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;--defaults-file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#] --backup|--prepare|--copy-back|--stats [OPTIONS]&lt;/span&gt;
xtrabackup &lt;span class=&#34;token parameter variable&#34;&gt;--prepare&lt;/span&gt; --target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/data/backup/mysql/


参数值                                参数用途
–print-defaults             输出mysql实例的参数配置信息
–no-defaults                不从任何配置文件中读取参数信息，除了登录文件
–defaults-file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#            仅从指定的配置文件读取参数&lt;/span&gt;
–defaults-extra-file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#      读取额外的配置信息文件&lt;/span&gt;
–defaults-group-suffix&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#    Also read groups with concat(group, suffix)&lt;/span&gt;
–login-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#               读取登录文件的路径&lt;/span&gt;
-v, &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;               打印 xtrabackup版本信息
–target-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name            备份文件的目录，默认为当前目录xtrabackup_backupfiles/
–backup                     备份操作,备份到target-dir指定的目录
–stats                      计算datadir的统计信息&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;推荐mysqld离线&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; calc statistic of datadir &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;offline mysqld is recommended&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
–prepare                    指定备份的准备阶段 （准备一个在备份上启动mysql服务器的备份。）
–export                     当在prepare阶段创建文件到另外的一个数据库 create files to &lt;span class=&#34;token function&#34;&gt;import&lt;/span&gt; to another database when prepare.
–apply-log-only             一般情况下,在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务。
                            因此，此时数据 文件仍处理不一致状态。
–apply-log                  它的作用是通过回滚未提交的事务及同步已经提交的事务至数据文件使数据文件处于一致性状态。
–print-param                输出mysqld copyback必须的参数  print parameter of mysqld needed &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; copyback.
–use-memory&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;                备份的时候指定的内存，该选项表示和–apply-log选项一起使用，
                            prepare 备份的时候，xtrabackup做crash recovery分配的内存大小，单位字节。也可&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;1MB,1M,1G,1GB&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;，推荐1G。用于替代buffer_pool_size
–throttle&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#                 和–backup一起使用，指定每秒操作读写对的数量。&lt;/span&gt;
–log&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;                 忽略MySQL选项兼容性的选项
–log-copy-interval&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#        日志复制线程完成的检查之间的时间间隔（以毫秒为单位,默认为1秒）。&lt;/span&gt;
–extra-lsndir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name          和–backup一起使用,在当前目录保存一份额外的xtrabackup_checkpoints文件
–to-archived-lsn&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#          指定prepare备份时apply事务日志的LSN，只能和xtarbackup --prepare选项一起用。&lt;/span&gt;
–tables&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name                通过正则表达式过滤表
–tables-file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name           按文件中的精确的database.table名称列表进行筛选。
–databases&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name             按照数据库进行过滤
–databases-file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name        按照文件中的数据进行过滤
–tables-exclude&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name        操作方式和–tables一样，但是匹配的表名将不备份，此参数的优先级高于–tables.
–databases-exclude&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name     操作方式和–databases一样，但是匹配的库名将不被备份，优先级高于–databases.
–create-ib-logfile          此参数当前不生效，无效参数
–stream&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name                该选项表示流式备份的格式，backup完成之后以指定格式到STDOUT，目前只支持tar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8.0&lt;/span&gt;版本仅支持&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;和xbstream
–decompress                 该选项表示解压–compress选项压缩的文件，解压.qp扩展文件。
–compress&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;            压缩所有输出数据，包括事务日志文件和元数据文件，通过指定的压缩算法，
                            目前唯一支持的算法是quicklz.结果文件是qpress归档格式，
                            每个xtrabackup创建的*.qp文件都可以通过qpress程序提取或者解压缩
–compress-threads&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;# 备份压缩的并行线程，默认为1.并行压缩（‘compress-threads’）可以和并行文件拷贝(‘parallel’)一起使用。&lt;/span&gt;
                            例如:’–parallel&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--compress&lt;/span&gt; --compress-threads&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;’会创建4个IO线程读取数据并通过管道传送给2个压缩线程。
–compress-chunk-size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#      压缩线程工作buffer的字节大小，默认是64K&lt;/span&gt;
–encrypt&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name               该选项表示通过ENCRYPTION_ALGORITHM的算法加密innodb数据文件的备份，
                            目前支持的算法有ASE128,AES192,AES256。
–encrypt-key&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name           该选项使用合适长度加密key，因为会记录到命令行，所以不推荐使用。
–encrypt-key-file&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name      该选项表示文件必须是一个简单二进制或者文本文件，加密key可通过以下命令行命令生成：openssl rand &lt;span class=&#34;token parameter variable&#34;&gt;-base64&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt;。
–encrypt-threads&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#          该选项表示并行加密的worker线程数量，默认为1.&lt;/span&gt;
–encrypt-chunk-size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#       该选项表示每个加密线程worker buffer的大小，单位是字节，默认是64K。&lt;/span&gt;
–decrypt&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name               该选项表示解密通过–encrypt选项加密的.xbcrypt文件。
–remove-original            当删除解密和解压完后删除 .qp and .xbcrypt 文件
–rebuild_indexes            在apply事务日志之后重建innodb辅助索引，只有和–prepare一起才生效。
–rebuild_threads&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#          在紧凑备份重建辅助索引的线程数，只有和–prepare和rebuild-index一起才生效。&lt;/span&gt;
–close-files                该选项表示关闭不再访问的文件句柄，当xtrabackup打开表空间通常并不关闭文件句柄目的是正确的处理DDL操作。
                            如果表空间数量巨大，这是一种可以关闭不再访问的文件句柄的方法。使用该选项有风险，会有产生不一致备份的可能。
–core-file                  Write core on fatal signals
–copy-back                  做数据恢复时将备份数据文件拷贝到MySQL服务器的datadir。
–move-back                  这个选项与–copy-back相似，唯一的区别是它不拷贝文件，而是移动文件到目的地。
                            这个选项移除backup文件，用时候必须小心。使用场景：没有足够的磁盘空间同事保留数据文件和Backup副本
                            注意：
                            &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;.datadir目录必须为空。除非指定innobackupex --force-non-empty-directorires选项指定，否则–copy-backup选项不会覆盖
                            &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;.在restore之前,必须shutdown MySQL实例，你不能将一个运行中的实例restore到datadir目录中
                            &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.由于文件属性会被保留，大部分情况下你需要在启动实例之前将文件的属主改为mysql，这些文件将属于创建备份的用户

–galera-info                该选项表示生成了包含创建备份时候本地节点状态的文件xtrabackup_galera_info文件，该选项只适用于备份PXC。
–slave-info                 该选项表示对slave进行备份的时候使用，打印出master的名字和binlog pos，
                            同样将这些信息以change master的命令写入xtrabackup_slave_info文件。可以通过基于这份备份启动一个从库。
–no-lock                    该选项表示关闭FTWRL的表锁，只有在所有表都是Innodb表并且不关心backup的binlog pos点，
                            如果有任何DDL语句正在执行或者非InnoDB正在更新时（包括mysql库下的表），都不应该使用这个选项，
                            后果是导致备份数据不一致，如果考虑备份因为获得锁失败，可以考虑–safe-slave-backup立刻停止复制线程。
–lock-ddl                   若mysql serve支持在备份支持发出LOCK TABLES FOR BACKUP指令阻止所有的DDL操作。
–lock-ddl-timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;#若在指定时间内未返回值则终止备份。&lt;/span&gt;
–lock-ddl-per-table         在xtrabackup开始复制之前锁定每个表的DDL直到备份完成
–safe-slave-backup          该选项表示为保证一致性复制状态，这个选项停止SQL线程并且等到show status中的slave_open_temp_tables为0的时候开始备份，
                            如果没有打开临时表，bakcup会立刻开始，否则SQL线程启动或者关闭知道没有打开的临时表。
–safe-slave-backup-timeout  如果slave_open_temp_tables在–safe-slave-backup-timeount（默认300秒）秒之后不为0，从库sql线程会在备份完成的时候重启。
–rsync                      该选项表示通过rsync工具优化本地传输，当指定这个选项，innobackupex使用rsync拷贝非Innodb文件而替换cp，当有很多DB和表的时候会快很多，不能–stream一起使用。
–force-non-empty-directories指定该参数时候，使得 --copy-back或–move-back选项转移文件到非空目录，已存在的文件不会被覆盖。如果–copy-back和–move-back文件需要从备份目录拷贝一个在datadir已经存在的文件，会报错失败。
–no-version-check           该选项关闭版本检查，当–version-check选项开启的时候。
–tables-compatibility-check 此选项开启表存储引擎兼容性告警，默认开启。可使用–skip-tables-compatibility-check关闭。
–no-backup-locks            该选项在backup阶段控制锁，替换FLUSH TABLES WITH READ LOCK命令。默认开启，关闭需使用参数–no-backup-locks。
                            当mysql服务器不支持backup locks时候此参数无效。
-u, &lt;span class=&#34;token parameter variable&#34;&gt;--user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name             备份的用户名
-H, &lt;span class=&#34;token parameter variable&#34;&gt;--host&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name             备份的IP地址
-P, &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#                备份的端口&lt;/span&gt;
-p, --password&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;       备份时用户的密码
-S, &lt;span class=&#34;token parameter variable&#34;&gt;--socket&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name           备份时连接的unix操作系统的socket文件
-h, &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name          数据恢复时候的数据目录.从my.cnf中读取，或者命令行指定。
-t, &lt;span class=&#34;token parameter variable&#34;&gt;--tmpdir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name           当使用–print-param指定的时候打印出正确的tmpdir参数。用于存储临时文件的路径，在轮训模式下可以指定多个路径，使用英文的:分隔
–parallel&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;                  指定备份时拷贝多个数据文件并发的进程数，默认值为1。
–log-bin&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;             binlog的日志序列
–incremental-lsn&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name       和–backup一起使用。
–incremental-basedir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name   和–backup一起使用，仅拷贝.ibd中新增的数据到指定路径，增量备份.
–incremental-dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name       和–prepare一起使用，将.delta文件和logfile保存在指定的路径.
–incremental-force-scan     该选项表示创建一份增量备份时，强制扫描所有增量备份中的数据页
–incremental-history-name   该选项表示存储在PERCONA_SCHEMA.xtrabackup_history基于增量备份的历史记录的名字。
                            Percona Xtrabackup搜索历史表查找最近（innodb_to_lsn）成功备份并且将to_lsn值作为增量备份启动出事lsn.
                            与innobackupex–incremental-history-uuid、–incremental-basedir、–incremental-lsn互斥。
                            如果没有检测到有效的lsn，xtrabackup会返回error。
                            和选项–incremental一起使用。
                            –incremental-history-uuid   该选项表示存储在percona_schema.xtrabackup_history基于增量备份的特定历史记录的UUID。
                            和选项–incremental一起使用。
innobackupex遗留参数
​
参数值                                        参数用途
–ftwrl-wait-query-type  该选项表示获得全局锁之前允许那种查询完成，默认是ALL，可选update。
–ftwrl-wait-threshold   该选项表示检测到长查询，单位是秒，表示长查询的阈值。
                        若–ftwrl-wait-timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;此参数无效，默认值为60s。
–ftwrl-wait-timeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#   此选项指定innobackupex在运行之前应等待阻止FTWRL的查询的时间（以秒为单位）。&lt;/span&gt;
                        如果超时到期时仍有此类查询，则innobackupex将终止并显示错误。
                        默认值为0，在这种情况下，innobackupex不会等待查询完成并立即启动FTWRL。
–kill-long-queries-timeout  该选项表示从开始执行FLUSH TABLES WITH READ LOCK到kill掉阻塞它的这些查询之间等待的秒数。默认值为0，不会kill任何查询，使用这个选项xtrabackup需要有Process和super权限。
–kill-long-query-type       该选项表示kill的类型，默认是all，可选select。
–history                    该选项表示percona server 的备份历史记录在percona_schema.xtrabackup_history表。
–debug-sleep-before-unlock  仅用于xtrabackup测试套件的debug信息
–check-privileges           在执行查询之前检查数据库用户的权限。

安全备份的参数
​
参数值                               参数用途
–server-public-key-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name    File path to the server public RSA key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; PEM format.
–server-public-key-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name    File path to the server public RSA key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; PEM format.
–get-server-public-key  Get server public key
–ssl-mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name  SSL connection mode.
–ssl-ca&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name    CA &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; PEM format.
–ssl-capath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name    CA directory.
–ssl-cert&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name  X509 cert &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; PEM format.
–ssl-cipher&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name    SSL cipher to use.
–ssl-key&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name   X509 key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; PEM &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt;
–ssl-crl&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name   Certificate revocation list.
–ssl-crlpath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name   Certificate revocation list path.
–tls-version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name   TLS version to use, permitted values are: TLSv1, TLSv1.1,TLSv1.2
–ssl-fips-mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name SL FIPS mode to use, permitted values are: OFF, ON,STRICT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="Default" />
        <updated>2025-03-06T08:29:54.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2024/12/26/follow/</id>
        <title>follow</title>
        <link rel="alternate" href="https://gyoliu.github.io/2024/12/26/follow/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;This message is used to verify that this feed (feedId:94993712362846208) belongs to me (userId:569moaUVDrYGrgssS2Lwv). Join me in enjoying the next generation information browser &lt;a href=&#34;https://follow.is/&#34;&gt;https://follow.is&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Default" />
        <updated>2024-12-26T06:41:29.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2024/08/29/nginx-proxy/</id>
        <title>nginx 正向代理配置 https 支持</title>
        <link rel="alternate" href="https://gyoliu.github.io/2024/08/29/nginx-proxy/"/>
        <content type="html">&lt;h1 id=&#34;nginx-正向代理配置-https-支持&#34;&gt;&lt;a href=&#34;#nginx-正向代理配置-https-支持&#34; class=&#34;headerlink&#34; title=&#34;nginx 正向代理配置 https 支持&#34;&gt;&lt;/a&gt;nginx 正向代理配置 https 支持&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt; -- 遇到很多需要的包安装下来就好

yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; perl perl-ExtUtils-Embed gperftools geoip-devel

&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://github.com/chobits/ngx_http_proxy_connect_module/archive/refs/heads/master.zip
&lt;span class=&#34;token function&#34;&gt;unzip&lt;/span&gt; master.zip
&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://nginx.org/download/nginx-1.20.2.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; xzvf nginx-1.20.2.tar.gz

&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; nginx-1.20.2

patch &lt;span class=&#34;token parameter variable&#34;&gt;-p1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;/ngx_http_proxy_connect_module_master/patch/proxy_connect_rewrite_1018.patch

./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/share/nginx --sbin-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/sbin/nginx --modules-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/lib64/nginx/modules --conf-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/etc/nginx/nginx.conf --error-log-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/log/nginx/error.log --http-log-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/log/nginx/access.log --http-client-body-temp-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/lib/nginx/tmp/client_body --http-proxy-temp-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/var/lib/nginx/tmp/scgi --pid-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/run/nginx.pid --lock-path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/run/lock/subsys/nginx &lt;span class=&#34;token parameter variable&#34;&gt;--user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;nginx &lt;span class=&#34;token parameter variable&#34;&gt;--group&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;nginx --with-compat --with-debug --with-file-aio --with-google_perftools_module --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;dynamic --with-http_mp4_module --with-http_perl_module&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;dynamic --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --add-module&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;/ngx_http_proxy_connect_module-master --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_xslt_module&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;dynamic --with-mail&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads

&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;

systemctl restart nginx

-- 测试代理
&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-x&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;117.72&lt;/span&gt;.44.94:81 https://www.qq.com --proxy-insecure &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;nginx-配置&#34;&gt;&lt;a href=&#34;#nginx-配置&#34; class=&#34;headerlink&#34; title=&#34;nginx 配置&#34;&gt;&lt;/a&gt;nginx 配置&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;server &amp;#123;
        listen                         81;

        # dns resolver used by forward proxying
        resolver                       8.8.8.8;

        # forward proxy for CONNECT requests
        proxy_connect;
        proxy_connect_allow            all;
        proxy_connect_connect_timeout  100s;
        proxy_connect_data_timeout     100s;

        # defined by yourself for non-CONNECT requests
        # Example: reverse proxy for non-CONNECT requests

        location &amp;#x2F; &amp;#123;
            proxy_pass http:&amp;#x2F;&amp;#x2F;$http_host$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        &amp;#125;

    &amp;#125;

server &amp;#123;
        listen 443 default;
        # self signed certificate generated via openssl command
        ssl_certificate_key            &amp;#x2F;root&amp;#x2F;ssl&amp;#x2F;server.key;
        ssl_certificate                &amp;#x2F;root&amp;#x2F;ssl&amp;#x2F;server.crt;
        ssl_session_cache              shared:SSL:1m;

        # dns resolver used by forward proxying
        resolver                       8.8.8.8 8.8.4.4;

        # forward proxy for CONNECT request
        proxy_connect;
        proxy_connect_allow            all;
        proxy_connect_connect_timeout  100s;
        proxy_connect_data_timeout     100s;

        # defined by yourself for non-CONNECT request
        # Example: reverse proxy for non-CONNECT requests
        location &amp;#x2F; &amp;#123;
            proxy_pass http:&amp;#x2F;&amp;#x2F;$http_host$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        &amp;#125;
&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Default" />
        <category term="nginx" />
        <updated>2024-08-29T05:23:54.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2024/07/29/PaddleSpeech/</id>
        <title>基于百度飞浆平台语音识别PaddleSpeech</title>
        <link rel="alternate" href="https://gyoliu.github.io/2024/07/29/PaddleSpeech/"/>
        <content type="html">&lt;h1 id=&#34;PaddleSpeech-是基于飞桨-PaddlePaddle-的语音方向的开源模型库&#34;&gt;&lt;a href=&#34;#PaddleSpeech-是基于飞桨-PaddlePaddle-的语音方向的开源模型库&#34; class=&#34;headerlink&#34; title=&#34;PaddleSpeech 是基于飞桨 PaddlePaddle 的语音方向的开源模型库&#34;&gt;&lt;/a&gt;&lt;strong&gt;PaddleSpeech&lt;/strong&gt; 是基于飞桨 &lt;a href=&#34;https://gitee.com/link?target=https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt; 的语音方向的开源模型库&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech&#34;&gt;https://github.com/PaddlePaddle/PaddleSpeech&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;文本介绍-Docker-部署方式&#34;&gt;&lt;a href=&#34;#文本介绍-Docker-部署方式&#34; class=&#34;headerlink&#34; title=&#34;文本介绍 Docker 部署方式&#34;&gt;&lt;/a&gt;文本介绍 Docker 部署方式&lt;/h2&gt;&lt;p&gt;依赖环境介绍,docker 环境就不用担心这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc &amp;gt;&amp;#x3D; 4.8.5&lt;/li&gt;
&lt;li&gt;paddlepaddle &amp;lt;&amp;#x3D; 2.5.1 桨桨 &amp;lt;&amp;#x3D; 2.5.1&lt;/li&gt;
&lt;li&gt;python &amp;gt;&amp;#x3D; 3.8 &lt;br&gt;自 2024 年 6 月以来 Docker Hub 访问不了，国内开源厂商镜像如清华等都宣布下架。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 设置 &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; mirrors
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt;  /etc/docker/daemon.json
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;registry-mirrors&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;token string&#34;&gt;&#34;https://registry.docker-cn.com&#34;&lt;/span&gt;,
        &lt;span class=&#34;token string&#34;&gt;&#34;https://docker.mirrors.ustc.edu.cn&#34;&lt;/span&gt;,
        &lt;span class=&#34;token string&#34;&gt;&#34;https://hub-mirror.c.163.com&#34;&lt;/span&gt;,
        &lt;span class=&#34;token string&#34;&gt;&#34;https://mirror.baidubce.com&#34;&lt;/span&gt;,
        &lt;span class=&#34;token string&#34;&gt;&#34;https://ccr.ccs.tencentyun.com&#34;&lt;/span&gt;,
        &lt;span class=&#34;token string&#34;&gt;&#34;https://dockerhub.icu/&#34;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# GPU版本&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; pull paddlecloud/paddlespeech:develop-gpu-cuda10.2-cudnn7-latest
&lt;span class=&#34;token comment&#34;&gt;# CPU版本&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; pull paddlecloud/paddlespeech:develop-cpu-latest
&lt;span class=&#34;token comment&#34;&gt;# 或者使用 docker search paddlespeech 搜索相关的镜像版本&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 启动服务&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run &lt;span class=&#34;token parameter variable&#34;&gt;--name&lt;/span&gt; dev &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token environment constant&#34;&gt;$PWD&lt;/span&gt;:/mnt &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;:8888 &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8090&lt;/span&gt;:8090 &lt;span class=&#34;token parameter variable&#34;&gt;-it&lt;/span&gt; paddlecloud/paddlespeech:develop-cpu-latest  /bin/bash

&lt;span class=&#34;token comment&#34;&gt;# 自然语言处理工具库NLTK安装&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; 镜像内的目录是 /root/nltk_data/
可以将下载好的传输到服务器上复制到这个目录下如：cp &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; /mnt/nltk_data-gh-pages/packages/ /root/nltk_data/
NLTK 数据下载： https://github.com/nltk/nltk_data/archive/refs/heads/gh-pages.zip&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 设置 python pip 
pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; xxx &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; https://mirror.baidu.com/pypi/simple
or 
pip config &lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; global.index-url https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试数据下载：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; https://paddlespeech.bj.bcebos.com/PaddleAudio/zh.wav
&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动 WEB 服务&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;paddlespeech_server start &lt;span class=&#34;token parameter variable&#34;&gt;--config_file&lt;/span&gt; ./demos/speech_server/conf/application.yaml&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;识别语音命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;paddlespeech asr &lt;span class=&#34;token parameter variable&#34;&gt;--lang&lt;/span&gt; zh &lt;span class=&#34;token parameter variable&#34;&gt;--input&lt;/span&gt; zh.wav&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文字转语音命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;paddlespeech tts &lt;span class=&#34;token parameter variable&#34;&gt;--input&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;你好，欢迎使用百度飞桨深度学习框架！&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--output&lt;/span&gt; output.wav&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他命令请参考开源：&lt;br&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech&#34;&gt;https://github.com/PaddlePaddle/PaddleSpeech&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;docker 命令回顾&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看正在运行的 docker hub&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 进入一个正在运行的 docker hub&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; attach 36e3553f6bb3
or 
&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run &lt;span class=&#34;token parameter variable&#34;&gt;-it&lt;/span&gt; xxx /bin/bash&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Default" />
        <category term="PaddleSpeech" />
        <updated>2024-07-29T05:20:51.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2024/07/08/nginx-config-https/</id>
        <title>https 证书自动续期，永久免费</title>
        <link rel="alternate" href="https://gyoliu.github.io/2024/07/08/nginx-config-https/"/>
        <content type="html">&lt;h1 id=&#34;https-证书自动续期，永久免费&#34;&gt;&lt;a href=&#34;#https-证书自动续期，永久免费&#34; class=&#34;headerlink&#34; title=&#34;https 证书自动续期，永久免费&#34;&gt;&lt;/a&gt;https 证书自动续期，永久免费&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;开源组织的免费证书：&lt;a href=&#34;https://letsencrypt.org/zh-cn/&#34;&gt;https://letsencrypt.org/zh-cn/&lt;/a&gt;&lt;br&gt;Let’s Encrypt 和 &lt;a href=&#34;https://tools.ietf.org/html/rfc8555&#34;&gt;ACME 协议&lt;/a&gt;的目标是实现可信数字证书的自动获取，从而简化 HTTPS 服务器部署中的人工操作。 这一目标是由 Web 服务器上的证书管理软件完成的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;入门指南&#34;&gt;&lt;a href=&#34;#入门指南&#34; class=&#34;headerlink&#34; title=&#34;入门指南&#34;&gt;&lt;/a&gt;入门指南&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;为了在您的网站上启用 HTTPS，您需要从证书颁发机构（CA）获取证书（一种文件）。 Let’s Encrypt 正是其中一家证书颁发机构。 要从 Let’s Encrypt 获取您网站域名的证书，您必须证明您对域名的实际控制权。 这一过程通常由 Web 主机上运行的 &lt;a href=&#34;https://tools.ietf.org/html/rfc8555&#34;&gt;ACME 协议&lt;/a&gt;客户端完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;申请证书的最佳方式取决于您是否具备服务器的&lt;a href=&#34;https://en.wikipedia.org/wiki/Shell_account&#34;&gt;命令行访问权限&lt;/a&gt;（也称为 SSH 权限）。 如果您仅使用控制面板（例如 &lt;a href=&#34;https://cpanel.net/&#34;&gt;cPanel&lt;/a&gt;、&lt;a href=&#34;https://www.plesk.com/&#34;&gt;Plesk&lt;/a&gt; 或 &lt;a href=&#34;https://wordpress.org/&#34;&gt;WordPress&lt;/a&gt;）管理您的网站，您很有可能没有命令行访问权限。 您可以联系您的托管服务提供商确认。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;拥有命令行访问权限&#34;&gt;&lt;a href=&#34;#拥有命令行访问权限&#34; class=&#34;headerlink&#34; title=&#34;拥有命令行访问权限&#34;&gt;&lt;/a&gt;拥有命令行访问权限&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我们建议大多数具有命令行访问权限的人使用 &lt;a href=&#34;https://certbot.eff.org/&#34;&gt;Certbot&lt;/a&gt; ACME 客户端。 它可以在不下线您的服务器的前提下自动执行证书颁发和安装。 对于不需要自动配置的用户，Certbot 还提供专家模式。 它易于使用，适用于许多操作系统，并且具有出色的（注：英文）文档。 前往 &lt;a href=&#34;https://certbot.eff.org/&#34;&gt;Certbot 官网&lt;/a&gt;即可获取针对各类操作系统与服务器软件的使用说明。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 &lt;a href=&#34;https://certbot.eff.org/&#34;&gt;Certbot&lt;/a&gt; 不能满足您的需求，或者您想尝试别的客户端，还有&lt;a href=&#34;https://letsencrypt.org/zh-cn/docs/client-options/&#34;&gt;更多 ACME 客户端&lt;/a&gt;可供选择。 选定 ACME 客户端软件后，请参阅该客户端的文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果您正在尝试不同的 ACME 客户端，请使用我们的&lt;a href=&#34;https://letsencrypt.org/zh-cn/docs/staging-environment/&#34;&gt;临时环境&lt;/a&gt;以避免遭到&lt;a href=&#34;https://letsencrypt.org/zh-cn/docs/rate-limits/&#34;&gt;速率限制&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;实现了-ACME-协议的客户端，官方推荐如下：&#34;&gt;&lt;a href=&#34;#实现了-ACME-协议的客户端，官方推荐如下：&#34; class=&#34;headerlink&#34; title=&#34;实现了 ACME 协议的客户端，官方推荐如下：&#34;&gt;&lt;/a&gt;实现了 ACME 协议的客户端，官方推荐如下：&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;https:&amp;#x2F;&amp;#x2F;certbot.eff.org&amp;#x2F;instructions?ws&amp;#x3D;nginx&amp;amp;os&amp;#x3D;centosrhel7&amp;amp;tab&amp;#x3D;wildcard&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;阿里云-Centos-7-实现如下：&#34;&gt;&lt;a href=&#34;#阿里云-Centos-7-实现如下：&#34; class=&#34;headerlink&#34; title=&#34;阿里云 Centos 7 实现如下：&#34;&gt;&lt;/a&gt;阿里云 Centos 7 实现如下：&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;必备条件：
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;. 安装阿里云 CLI 命令行工具，参考如下：
https://help.aliyun.com/zh/cli/install-cli-on-linux?spm&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;a2c4g.11186623.0.0.5fd7606ftkgvZH
&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;. 安装证书生成 ACME 客户端 
yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; epel-release &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;
yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; certbot &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;. certbot 文档
https://eff-certbot.readthedocs.io/en/latest/using.html&lt;span class=&#34;token comment&#34;&gt;#nginx&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;. 阿里云自动续期脚本
https://github.com/justjavac/certbot-dns-aliyun?tab&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;readme-ov-file
&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;. 成功后如下输出证书保存的路径，之后将 nginx 的证书配置指向该证书
&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;. 重要命令 - 申请证书
certbot certonly &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; *.example.com &lt;span class=&#34;token parameter variable&#34;&gt;--manual&lt;/span&gt; --preferred-challenges dns --manual-auth-hook &lt;span class=&#34;token string&#34;&gt;&#34;alidns&#34;&lt;/span&gt; --manual-cleanup-hook &lt;span class=&#34;token string&#34;&gt;&#34;alidns clean&#34;&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;. 重要命令 - 续期
certbot renew &lt;span class=&#34;token parameter variable&#34;&gt;--manual&lt;/span&gt; --preferred-challenges dns --manual-auth-hook &lt;span class=&#34;token string&#34;&gt;&#34;alidns&#34;&lt;/span&gt; --manual-cleanup-hook &lt;span class=&#34;token string&#34;&gt;&#34;alidns clean&#34;&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;. 重要命令 - 自动续期
&lt;span class=&#34;token function&#34;&gt;crontab&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; */1 * * root certbot renew &lt;span class=&#34;token parameter variable&#34;&gt;--manual&lt;/span&gt; --preferred-challenges dns --manual-auth-hook &lt;span class=&#34;token string&#34;&gt;&#34;alidns&#34;&lt;/span&gt; --manual-cleanup-hook &lt;span class=&#34;token string&#34;&gt;&#34;alidns clean&#34;&lt;/span&gt; --deploy-hook &lt;span class=&#34;token string&#34;&gt;&#34;nginx -s reload&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：&#34;&gt;&lt;a href=&#34;#alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：&#34; class=&#34;headerlink&#34; title=&#34;alidns脚本如下，作用动态添加阿里云 DNS 解析用来验证：&#34;&gt;&lt;/a&gt;alidns&lt;strong&gt;脚本如下，作用动态添加阿里云 DNS 解析用来验证：&lt;/strong&gt;&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;FLAG&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;(\.com\.cn|\.gov\.cn|\.net\.cn|\.org\.cn|\.ac\.cn|\.gd\.cn)$&#34;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; aliyun &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;/dev/null&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
	&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;错误: 你需要先安装 aliyun 命令行工具 https://help.aliyun.com/document_detail/121541.html。&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;&amp;amp;2&lt;/span&gt;
	&lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token assign-left variable&#34;&gt;DOMAIN&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expr&lt;/span&gt; match &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$CERTBOT_DOMAIN&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.*\.\(.*\..*\)&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;SUB_DOMAIN&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;expr&lt;/span&gt; match &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$CERTBOT_DOMAIN&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\(.*\)\..*\..*&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$CERTBOT_DOMAIN&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-E&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-q&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$FLAG&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;

  &lt;span class=&#34;token assign-left variable&#34;&gt;DOMAIN&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; $CERTBOT_DOMAIN &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-oP&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;(?&amp;lt;=)[^.]+(&#39;&lt;/span&gt;$FLAG&lt;span class=&#34;token string&#34;&gt;&#39;)&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&#34;token assign-left variable&#34;&gt;SUB_DOMAIN&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; $CERTBOT_DOMAIN &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-oP&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.*(?=\.[^.]+(&#39;&lt;/span&gt;$FLAG&lt;span class=&#34;token string&#34;&gt;&#39;))&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-z&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$DOMAIN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token assign-left variable&#34;&gt;DOMAIN&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$CERTBOT_DOMAIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-z&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$SUB_DOMAIN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token assign-left variable&#34;&gt;SUB_DOMAIN&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;.&lt;span class=&#34;token variable&#34;&gt;$SUB_DOMAIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$#&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-eq&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
	aliyun alidns AddDomainRecord &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--DomainName&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$DOMAIN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--RR&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;_acme-challenge&#34;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$SUB_DOMAIN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--Type&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;TXT&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--Value&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$CERTBOT_VALIDATION&lt;/span&gt;
	/bin/sleep &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
	&lt;span class=&#34;token assign-left variable&#34;&gt;RecordId&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;aliyun alidns DescribeDomainRecords &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--DomainName&lt;/span&gt; $DOMAIN &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--RRKeyWord&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;_acme-challenge&#34;&lt;/span&gt;$SUB_DOMAIN &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--Type&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;TXT&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--ValueKeyWord&lt;/span&gt; $CERTBOT_VALIDATION &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;RecordId&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-Eo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;[0-9]+&#34;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

	aliyun alidns DeleteDomainRecord &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
		&lt;span class=&#34;token parameter variable&#34;&gt;--RecordId&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$RecordId&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Default" />
        <category term="证书" />
        <category term="nginx" />
        <updated>2024-07-08T05:15:44.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2022/03/02/idea-plugin/</id>
        <title>idea常用插件</title>
        <link rel="alternate" href="https://gyoliu.github.io/2022/03/02/idea-plugin/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;alibaba java coding guidelines 代码规范&lt;/li&gt;
&lt;li&gt;git commit template git提交模板&lt;/li&gt;
&lt;li&gt;ide eval reset&lt;/li&gt;
&lt;li&gt;java bean to json&lt;/li&gt;
&lt;li&gt;SequenceDiagram 代码时序图&lt;/li&gt;
&lt;li&gt;SonarLint 代码规范&lt;/li&gt;
&lt;li&gt;Translation 翻译&lt;/li&gt;
&lt;li&gt;JRebel or XRebel 热部署&lt;/li&gt;
&lt;li&gt;RESTfultoolkit&lt;/li&gt;
&lt;li&gt;MyBatisCodeHelper-Pro&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Default" />
        <updated>2022-03-02T04:36:04.000Z</updated>
    </entry>
    <entry>
        <id>https://gyoliu.github.io/2020/09/08/browser-cookies-SameSite-attribute/</id>
        <title>浏览器 SameSite 属性设置</title>
        <link rel="alternate" href="https://gyoliu.github.io/2020/09/08/browser-cookies-SameSite-attribute/"/>
        <content type="html">&lt;h3 id=&#34;1-起因&#34;&gt;&lt;a href=&#34;#1-起因&#34; class=&#34;headerlink&#34; title=&#34;1. 起因&#34;&gt;&lt;/a&gt;1. 起因&lt;/h3&gt;&lt;p&gt;Chrome 51 开始，浏览器的 Cookie 新增加了一个SameSite属性，用来防止 CSRF 攻击和用户追踪。&lt;br&gt;Chrome 浏览器版本从 80 版后 默认是将 Cookie 设置成 Lax&lt;/p&gt;
&lt;h3 id=&#34;2-SameSite-属性值&#34;&gt;&lt;a href=&#34;#2-SameSite-属性值&#34; class=&#34;headerlink&#34; title=&#34;2. SameSite 属性值&#34;&gt;&lt;/a&gt;2. SameSite 属性值&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Strict&lt;/li&gt;
&lt;li&gt;Lax&lt;/li&gt;
&lt;li&gt;None&lt;blockquote&gt;
&lt;p&gt;Strict最为严格，完全禁止第三方 Cookie，跨站点时，任何情况下都不会发送 Cookie。换言之，只有当前网页的 URL 与请求目标一致，才会带上 Cookie。Lax规则稍稍放宽，大多数情况也是不发送第三方 Cookie，但是导航到目标网址的 Get 请求除外。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;请求类型&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;正常情况&lt;/th&gt;
&lt;th&gt;Lax&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;链接&lt;/td&gt;
&lt;td&gt;《a href&amp;#x3D;”…”&amp;gt;&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;预加载&lt;/td&gt;
&lt;td&gt;《link rel&amp;#x3D;”prerender” href&amp;#x3D;”…”&amp;#x2F;&amp;gt;&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET 表单&lt;/td&gt;
&lt;td&gt;《form method&amp;#x3D;”GET” action&amp;#x3D;”…”&amp;gt;&lt;/td&gt;
&lt;td&gt;发送Cookie&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST 表单&lt;/td&gt;
&lt;td&gt;《form method&amp;#x3D;”POST” action&amp;#x3D;”…”&amp;gt;&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;td&gt;不发送&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iframe&lt;/td&gt;
&lt;td&gt;《iframe src&amp;#x3D;”…”&amp;gt;&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;td&gt;不发送&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AJAX&lt;/td&gt;
&lt;td&gt;$.get(“…”)&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;td&gt;不发送&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Image&lt;/td&gt;
&lt;td&gt;《img src&amp;#x3D;”…”》&lt;/td&gt;
&lt;td&gt;发送 Cookie&lt;/td&gt;
&lt;td&gt;不发送&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Chrome 计划将Lax变为默认设置。这时，网站可以选择显式关闭SameSite属性，&lt;strong&gt;将其设为None。不过，前提是必须同时设置Secure属性（Cookie 只能通过 HTTPS 协议发送），否则无效。&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-language&#34; data-language=&#34;language&#34;&gt;&lt;code class=&#34;language-language&#34;&gt;下面的设置无效。
Set-Cookie: widget_session&amp;#x3D;abc123; SameSite&amp;#x3D;None
下面的设置有效。
Set-Cookie: widget_session&amp;#x3D;abc123; SameSite&amp;#x3D;None; Secure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-该用哪种模式？&#34;&gt;&lt;a href=&#34;#3-该用哪种模式？&#34; class=&#34;headerlink&#34; title=&#34;3. 该用哪种模式？&#34;&gt;&lt;/a&gt;3. 该用哪种模式？&lt;/h3&gt;&lt;p&gt;假如你的网站有用 iframe 形式嵌在别的网站里的需求，那么连 Lax 你也不能用，因为 iframe 请求也是一种异步请求。或者假如别的网站有使用你的网站的 JSONP 接口，那么同样 Lax 你也不能用，比如天猫就是通过淘宝的 JSONP 接口来判断用户是否登录的。&lt;/p&gt;
&lt;p&gt;有时安全性和灵活性就是矛盾的，需要取舍。具体判断参照上面表格设置。&lt;/p&gt;
&lt;h3 id=&#34;4-解决方案&#34;&gt;&lt;a href=&#34;#4-解决方案&#34; class=&#34;headerlink&#34; title=&#34;4. 解决方案&#34;&gt;&lt;/a&gt;4. 解决方案&lt;/h3&gt;&lt;h4 id=&#34;4-1-方案1&#34;&gt;&lt;a href=&#34;#4-1-方案1&#34; class=&#34;headerlink&#34; title=&#34;4.1 方案1&#34;&gt;&lt;/a&gt;4.1 方案1&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;在chrome浏览器地址栏输入&lt;a href=&#34;chrome://flags并回车&#34;&gt;chrome://flags并回车&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在搜索栏中输入SameSite by default cookies搜索，并禁用如图中的两项设置，改为Disabled即可&lt;/li&gt;
&lt;li&gt;重启浏览器&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;4-2-方案2&#34;&gt;&lt;a href=&#34;#4-2-方案2&#34; class=&#34;headerlink&#34; title=&#34;4.2 方案2&#34;&gt;&lt;/a&gt;4.2 方案2&lt;/h4&gt;&lt;p&gt;如果使用的是 iframe 方式最好设置&lt;br&gt;X-Frame-OptionsHTTP 响应报头可以被用来指示一个浏览器是否应该被允许在一个以呈现页面《frame》，《iframe》或《object》标签。通过确保其内容未嵌入其他网站，网站可以使用此功能来避免 点击劫持 攻击。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-language&#34; data-language=&#34;language&#34;&gt;&lt;code class=&#34;language-language&#34;&gt;apache 配置
Header always append X-Frame-Options DENY
Header set X-Frame-Options &amp;quot;ALLOW-FROM https:&amp;#x2F;&amp;#x2F;example.com&amp;#x2F;&amp;quot;

Header always edit Set-Cookie &amp;quot;path&amp;#x3D;&amp;#x2F;&amp;quot; &amp;quot;path&amp;#x3D;&amp;#x2F;;  Secure; HttpOnly; SameSite&amp;#x3D;None;&amp;quot; 

#apache2.4 官方文档
#http:&amp;#x2F;&amp;#x2F;httpd.apache.org&amp;#x2F;docs&amp;#x2F;2.4&amp;#x2F;mod&amp;#x2F;mod_session_cookie.html
#http:&amp;#x2F;&amp;#x2F;httpd.apache.org&amp;#x2F;docs&amp;#x2F;2.4&amp;#x2F;mod&amp;#x2F;mod_usertrack.html


Nginx 配置
add_header X-Frame-Options ALLOWALL; #允许所有域名iframe
add_header X-Frame-Options DENY; #不允许任何域名iframe,包括相同的域名
add_header X-Frame-Options SANEORIGIN; #允许相同域名iframe,如a.test.com允许b.test.com
add_header X-Frame-Options ALLOW-FROM uri; #允许指定域名iframe 多个用逗号分隔
# 只支持 proxy 模式下设置
proxy_cookie_path &amp;#x2F; &amp;quot;&amp;#x2F;; httponly; secure; SameSite&amp;#x3D;None&amp;quot;;

#http:&amp;#x2F;&amp;#x2F;nginx.org&amp;#x2F;en&amp;#x2F;docs&amp;#x2F;http&amp;#x2F;ngx_http_proxy_module.html#proxy_cookie_path&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="Default" />
        <updated>2020-09-08T08:58:59.000Z</updated>
    </entry>
</feed>
