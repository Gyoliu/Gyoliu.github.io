{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gyo • All posts by \"java\" category",
    "description": "Gyo的博客",
    "home_page_url": "https://gyoliu.github.io",
    "items": [
        {
            "id": "https://gyoliu.github.io/2023/08/17/spring-cloud-properties/",
            "url": "https://gyoliu.github.io/2023/08/17/spring-cloud-properties/",
            "title": "spring cloud 性能优化",
            "date_published": "2023-08-17T05:09:02.000Z",
            "content_html": "<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># undertow 服务器优化</span>\nserver.undertow.threads.io=8\nserver.undertow.threads.worker=256\nserver.undertow.buffer<span class=\"token punctuation\">-</span>size=2048\nserver.undertow.direct<span class=\"token punctuation\">-</span>buffers=true\n\n<span class=\"token comment\"># 开启HTTP GZIP压缩</span>\nserver.compression.enabled=true\nserver.compression.min<span class=\"token punctuation\">-</span>response<span class=\"token punctuation\">-</span>size=1KB\n\n<span class=\"token comment\">#开启Feign请求压缩 FeignContentGzipEncodingAutoConfiguration</span>\nfeign.compression.request.enabled=true\nfeign.compression.request.mime<span class=\"token punctuation\">-</span>types=text/xml<span class=\"token punctuation\">,</span>application/xml<span class=\"token punctuation\">,</span>application/json\nfeign.compression.request.min<span class=\"token punctuation\">-</span>request<span class=\"token punctuation\">-</span>size=2048\n<span class=\"token comment\"># 开启响应压缩 FeignAcceptGzipEncodingAutoConfiguration DefaultGzipDecoderConfiguration DefaultGzipDecoder</span>\nfeign.compression.response.enabled=true\nfeign.compression.response.useGzipDecoder=true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Java",
                "Spring Cloud"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2023/07/20/spring-bean-extension-point/",
            "url": "https://gyoliu.github.io/2023/07/20/spring-bean-extension-point/",
            "title": "spring bean 扩展点记录",
            "date_published": "2023-07-20T05:03:23.000Z",
            "content_html": "<p><img src=\"/img/spring%20bean%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%B5%81%E7%A8%8B-mjrg.png\" alt=\"spring bean实例化流程-mjrg.png\"><br><img src=\"/img/springbean%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%B5%81%E7%A8%8B%E5%9B%BE.png\" alt=\"springbean实例化流程图.png\"><br><img src=\"/img/spring%E6%89%A9%E5%B1%95%E6%8E%A5%E5%8F%A3%E7%82%B9.png\" alt=\"spring扩展接口点.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// spring 核心代码</span>\n<span class=\"token comment\">// BeanFactoryPostProcessor 接口 ，this.postProcessBeanFactory(beanFactory);</span>\n<span class=\"token comment\">// </span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalStateException</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">synchronized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startupShutdownMonitor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepareRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">obtainFreshBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepareBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">postProcessBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeBeanFactoryPostProcessors</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerBeanPostProcessors</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">finishBeanFactoryInitialization</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">finishRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeansException</span> var9<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isWarnEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exception encountered during context initialization - cancelling refresh attempt: \"</span> <span class=\"token operator\">+</span> var9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">destroyBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelRefresh</span><span class=\"token punctuation\">(</span>var9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> var9<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetCommonCaches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"1-BeanFactoryPostProcessor接口\"><a href=\"#1-BeanFactoryPostProcessor接口\" class=\"headerlink\" title=\"1. BeanFactoryPostProcessor接口\"></a>1. BeanFactoryPostProcessor接口</h1><blockquote>\n<p>在容器启动阶段，允许我们在容器实例化 Bean 之前对注册到该容器的 BeanDefinition 做出修改，Spring 为我们提供了几个常用的BeanFactoryPostProcessor，他们是PropertyPlaceholderConfigurer 和 PropertyOverrideConfigurer。在AbstractApplicationContext类的refresh()方法中调用</p>\n</blockquote>\n<h1 id=\"2-BeanDefinitionRegistryPostProcessor\"><a href=\"#2-BeanDefinitionRegistryPostProcessor\" class=\"headerlink\" title=\"2. BeanDefinitionRegistryPostProcessor\"></a>2. <strong>BeanDefinitionRegistryPostProcessor</strong></h1><p>BeanDefinitionRegistryPostProcessor是BeanFactoryPostProcessor的子接口，<strong>可以动态注册BeanDefinition到Spring容器</strong>，Spring的注解驱动实现就向容器注入了ConfigurationClassPostProcessor类，ConfigurationClassPostProcessor处理Config的相关注解</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerScannerProcessor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationContextAware</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">BeanDefinitionRegistryPostProcessor</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">></span></span> beans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">></span></span> definitionMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> orders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AnnotationBeanNameGenerator</span> beanNameGenerator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationBeanNameGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AnnotationScopeMetadataResolver</span> scopeMetadataResolver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationScopeMetadataResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">BASE_PACKAGES</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"要扫描的包\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">postProcessBeanDefinitionRegistry</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanDefinitionRegistry</span> beanDefinitionRegistry<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 通过 ClassPathScanningCandidateComponentProvider 扫描相应的类 得到 BeanDefinition</span>\n        <span class=\"token class-name\">ListenerScanner</span> listenerScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListenerScanner</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">></span></span> beanDefinitions <span class=\"token operator\">=</span> listenerScanner<span class=\"token punctuation\">.</span><span class=\"token function\">doScan</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BASE_PACKAGES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">></span></span> iterator <span class=\"token operator\">=</span> beanDefinitions<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">BeanDefinition</span> next <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">ScopeMetadata</span> scopeMetadata <span class=\"token operator\">=</span> scopeMetadataResolver<span class=\"token punctuation\">.</span><span class=\"token function\">resolveScopeMetadata</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> beanName <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>beanNameGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">generateBeanName</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span> beanDefinitionRegistry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 判断是否存在相关的 bean </span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">checkCandidate</span><span class=\"token punctuation\">(</span>beanName <span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">,</span> beanDefinitionRegistry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">BeanDefinitionHolder</span> definitionHolder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanDefinitionHolder</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span> beanName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">ScopedProxyMode</span> scopedProxyMode <span class=\"token operator\">=</span> scopeMetadata<span class=\"token punctuation\">.</span><span class=\"token function\">getScopedProxyMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scopedProxyMode<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScopedProxyMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">boolean</span> proxyTargetClass <span class=\"token operator\">=</span> scopedProxyMode<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScopedProxyMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TARGET_CLASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    definitionHolder <span class=\"token operator\">=</span> <span class=\"token class-name\">ScopedProxyUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">createScopedProxy</span><span class=\"token punctuation\">(</span>definitionHolder<span class=\"token punctuation\">,</span> beanDefinitionRegistry<span class=\"token punctuation\">,</span> proxyTargetClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 注入到 spring</span>\n                <span class=\"token class-name\">BeanDefinitionReaderUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerBeanDefinition</span><span class=\"token punctuation\">(</span>definitionHolder<span class=\"token punctuation\">,</span> beanDefinitionRegistry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            definitionMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>beanName<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            orders<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>beanName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">getAttributes</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span> <span class=\"token string\">\"order\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> collect <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparingInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token operator\">::</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token operator\">::</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        collect<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-></span> beans<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> definitionMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getAttributes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanDefinition</span> beanDefinition<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">ScannedGenericBeanDefinition</span> beanDefinition1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ScannedGenericBeanDefinition</span><span class=\"token punctuation\">)</span> beanDefinition<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> attributes <span class=\"token operator\">=</span> beanDefinition1<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotationAttributes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Listener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> attributes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> beans<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">postProcessBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span> configurableListableBeanFactory<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationContext <span class=\"token operator\">=</span> applicationContext<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkCandidate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> beanName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinition</span> beanDefinition<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinitionRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IllegalStateException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>registry<span class=\"token punctuation\">.</span><span class=\"token function\">containsBeanDefinition</span><span class=\"token punctuation\">(</span>beanName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">BeanDefinition</span> existingDef <span class=\"token operator\">=</span> registry<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinition</span><span class=\"token punctuation\">(</span>beanName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">BeanDefinition</span> originatingDef <span class=\"token operator\">=</span> existingDef<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginatingBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>originatingDef <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                existingDef <span class=\"token operator\">=</span> originatingDef<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isCompatible</span><span class=\"token punctuation\">(</span>beanDefinition<span class=\"token punctuation\">,</span> existingDef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Annotation-specified bean name '\"</span> <span class=\"token operator\">+</span> beanName <span class=\"token operator\">+</span> <span class=\"token string\">\"' for bean class [\"</span> <span class=\"token operator\">+</span> beanDefinition<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"] conflicts with existing, non-compatible bean definition of same name and class [\"</span> <span class=\"token operator\">+</span> existingDef<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isCompatible</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanDefinition</span> newDefinition<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinition</span> existingDefinition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>existingDefinition <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ScannedGenericBeanDefinition</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> newDefinition<span class=\"token punctuation\">.</span><span class=\"token function\">getSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>existingDefinition<span class=\"token punctuation\">.</span><span class=\"token function\">getSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> newDefinition<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>existingDefinition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"3-BeanFactoryPostProcessor\"><a href=\"#3-BeanFactoryPostProcessor\" class=\"headerlink\" title=\"3.BeanFactoryPostProcessor\"></a><strong>3.BeanFactoryPostProcessor</strong></h1><p>**通过 **AbstractApplicationContext. refresh() -&gt; this.invokeBeanFactoryPostProcessors(beanFactory); 实例化</p>\n<h1 id=\"4-BeanPostProcessor\"><a href=\"#4-BeanPostProcessor\" class=\"headerlink\" title=\"4.BeanPostProcessor\"></a>4.BeanPostProcessor</h1><p>在 Bean 实例化前后，我们可以通过自定义BeanPostProcessor拦截所有的bean（在bean实例化之前和之后拦截），对bean做增强处理（前、后置处理），相当于bean实例化前后插入了方法</p>\n<ul>\n<li><p>InstantiationAwareBeanPostProcessor 继承自BeanPostProcessor，InstantiationAwareBeanPostProcessor 调用时机是bean实例化（<strong>Instantiation</strong>）阶段，用于替换bean默认创建方式， 主要用于基础框架层面</p>\n</li>\n<li><p><strong>SmartInstantiationAwareBeanPostProcessor</strong></p>\n</li>\n<li><p>MergedBeanDefinitionPostProcessor 主要处理合并后的BeanDefinition，其子类AutowiredAnnotationBeanPostProcessor提供了属性自动注入的功能</p>\n</li>\n<li><p>**AutowiredAnnotationBeanPostProcessor **处理 @Autowired和@Value的属性注入，</p>\n</li>\n<li><p><strong>InitDestroyAnnotationBeanPostProcessor</strong></p>\n</li>\n<li><p>**CommonAnnotationBeanPostProcessor **继承了InitDestroyAnnotationBeanPostProcessor，处理 @Resource 以及几个EJB注解，并且通过setInitAnnotationType设置了参与生命周期的注解（@PostConstruct、@PreDestory）（不过具体调用是在父类#…BeforeInit里调用的，上面说过了）</p>\n<p><strong>@PostConstruct 、InitializingBean和init-method 的调用区别就在这了</strong>，PostConstruct就是在这个InitDestroyAnnotationBeanPostProcessor#BeforeInit** 初始化前置**方法调用的，而像InitializingBean#afterPropertySet则和BPP无关，其是在bean的InitializeBean方法进入即调用的，同时如果调用afterPropertySet出错了，也不会调用init-method了。</p>\n</li>\n<li><p><strong>AbstractAutowireCapableBeanFactory -》</strong>initializeBean()** 在实例化的前后调用 **<em>原理 applyBeanPostProcessorsBeforeInitialization方法和applyBeanPostProcessorsAfterInitialization</em></p>\n</li>\n</ul>\n<h1 id=\"5-Aware接口\"><a href=\"#5-Aware接口\" class=\"headerlink\" title=\"5.Aware接口\"></a>5.<strong>Aware接口</strong></h1><blockquote>\n<p>Aware 接口是 Spring 容器的核心接口，实现了该接口的 bean 会通过事件回调机制完成Spring容器的通知功能；<br>在AbstractAutowireCapableBeanFactory中的initializeBean方法会调用Aware接口的方法</p>\n</blockquote>\n<p><strong>部分 Aware 接口是通过BeanPostProcessor的实现类ApplicationContextAwareProcessor实现的</strong></p>\n<h1 id=\"6-常用的接口\"><a href=\"#6-常用的接口\" class=\"headerlink\" title=\"6.常用的接口\"></a>6.常用的接口</h1><table>\n<thead>\n<tr>\n<th><strong>Aware接口</strong></th>\n<th><strong>注入依赖</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BeanNameAware</td>\n<td>Bean 的名称</td>\n</tr>\n<tr>\n<td>BeanFactoryAware</td>\n<td>当前上下文的 BeanFactory</td>\n</tr>\n<tr>\n<td>ApplicationContextAware</td>\n<td>当前上下文的 ApplicationContext</td>\n</tr>\n<tr>\n<td>ApplicationEventPublisherAware</td>\n<td>当前上下文的事件发布者 ApplicationEventPublisher</td>\n</tr>\n<tr>\n<td>BeanClassLoaderAware</td>\n<td>加载 Bean 类的类加载器</td>\n</tr>\n<tr>\n<td>InstantiationAwareBeanPostProcessor</td>\n<td></td>\n</tr>\n<tr>\n<td>DestructionAwareBeanPostProcessor</td>\n<td></td>\n</tr>\n<tr>\n<td>DisposableBean</td>\n<td></td>\n</tr>\n<tr>\n<td>InitializingBean</td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"7-ImportBeanDefinitionRegistrar。实现自己的-EnableXXX\"><a href=\"#7-ImportBeanDefinitionRegistrar。实现自己的-EnableXXX\" class=\"headerlink\" title=\"7.ImportBeanDefinitionRegistrar。实现自己的@EnableXXX\"></a>7.<strong>ImportBeanDefinitionRegistrar。实现自己的@EnableXXX</strong></h1><p>一些组件可以在开启后才进行使用。比如 @EnableAspectJAutoProxy 开启AspectJ支持。原理就是在注解内部Import了一个 ImportBeanDefinitionRegistrar，这个接口也可以帮你注册BeanDefinition到容器中，且优先于上文 BeanDefinitionRegistryPostProcessor 。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">FeignClientsRegistrar\nRibbonClientConfigurationRegistrar\nAspectJAutoProxyRegistrar<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Java",
                "spring"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2023/05/06/jvm-params/",
            "url": "https://gyoliu.github.io/2023/05/06/jvm-params/",
            "title": "JVM常用参数",
            "date_published": "2023-05-06T05:01:17.000Z",
            "content_html": "<p><a href=\"https://help.aliyun.com/document_detail/148851.html?spm=a2c4g.383255.0.0.30855accl7pyIr\">阿里 Serverless JVM 最佳实践</a></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># [阿里 Serverless JVM 最佳实践]\nhttps:&#x2F;&#x2F;help.aliyun.com&#x2F;document_detail&#x2F;148851.html?spm&#x3D;a2c4g.383255.0.0.30855accl7pyIr\n\n在Java虚拟机的参数中，有3种表示方法\n\n标准参数（-），所有的JVM实现都必须实现这些参数的功能，而且向后兼容；\n非标准参数（-X），默认jvm实现这些参数的功能，但是并不保证所有jvm实现都满足，且不保证向后兼容；\n非Stable参数（-XX），此类参数各个jvm实现会有所不同，将来可能会随时取消，需要慎重使用（但是，这些参数往往是非常有用的）；\n\n\n# 感知容器内存限制\n-XX:+UseContainerSupport\n# 设置JVM最大内存为整个宿主总内存的占比，适合docker容器内存动态调整\n-XX:MaxRAMPercentage&#x3D;80.0  -XX:MinRAMPercentage&#x3D;80.0 -XX:InitialRAMPercentage&#x3D;80.0\n# 固定设置堆内存大小，不能感知宿主内存大小动态调整\n-Xmx&#x2F;-Xms\n\n# GC 日志打印 \n-XX:+PrintGCDetails\n-XX:+PrintGCDateStamps\n-XX:+PrintHeapAtGC\n-XX:+PrintCommandLineFlags\n-XX:+PrintFlagsFinal\n-Xloggc:&#x2F;gc-%t.log \n-XX:+HeapDumpOnOutOfMemoryError \n-XX:HeapDumpPath&#x3D;&#x2F;data&#x2F;logs&#x2F;heapdump.hprof \n\n# 垃圾回收器\n-XX:+UseSerialGC\n# 允许使用并行清除垃圾收集器（也称为吞吐量收集器），以利用多个处理器来提高应用程序的性能。默认情况下，此选项是禁用的\n-XX:+UseParallelGC\n# 允许在年轻代中使用并行线程进行收集。默认情况下，此选项处于禁用状态。\n-XX:+USeParNewGC\n-XX:+UseG1GC\n-XX:+UseZGC\n\n\njps： 跟linux的ps一样，只不过是列出java程序\njps -m  列出所有java程序，并显示传入参数 \njps -l  列出所有java程序，显示类的全限名\n\njstat：观察java程序运行时的相关信息，主要是堆信息\njstat -class -t pid 1000 2  查看classLoader相关信息，每隔一秒执行一次，总共收集两次\njstat -gc pid 查看gc情况\njstat -gcnew pid  查看新生代的详细信息\njstat -gcold pid  查看老年代的详细信息\n\njinfo：查看java应用程序的扩展参数，部分参数可支持动态修改\njinfo -flag MaxtenuringThreshold pid 查看gc升级年龄\njinfo -flag +PrintGCDetails pid  修改使用PrintGCDetails参数\n\njmap：导出堆到文件\njmap -histo pid &gt; &#x2F;usr&#x2F;local&#x2F;tmp&#x2F;a.txt  java程序的对象统计信息\njmap -histo:live \njmap -dump:format&#x3D;b file&#x3D;&#x2F;tmp&#x2F;heap.hprof PID 得到java程序的当前快照，主要用于分析线程的运行情况\n\njstack：查看线程堆栈\njstack -l pid &gt; &#x2F;tmp&#x2F;stack.hprof 这里-l是打印锁的详细信息然后\n输出到指定目录的*.hprof文件中\n\n# 常用启动命令\nnohup java -Xms2g -Xmx2g -server -verbose:gc -XX:HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;dump.hprof -XX:+PrintGCDateStamps \n-XX:+PrintGCDetails -Xloggc:log&#x2F;gc-%t.log -XX:+UseGCLogFileRotation \n-XX:NumberOfGCLogFiles&#x3D;2 -XX:GCLogFileSize&#x3D;100M -XX:+CrashOnOutOfMemoryError \n-jar app.jar  &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;\n\n\n# 容器docker file\nENV JAVA_OPTS&#x3D;&quot;-server -XX:+UseContainerSupport -XX:+UseG1GC -XX:MaxRAMPercentage&#x3D;80.0  -XX:MinRAMPercentage&#x3D;80.0 -XX:InitialRAMPercentage&#x3D;80.0 -Duser.timezone&#x3D;GMT+8 -Ddruid.mysql.usePingMethod&#x3D;false&quot;\nENV PARAMS&#x3D;&quot;&quot;\nENTRYPOINT [&quot;sh&quot;,&quot;-c&quot;, &quot;java -jar $JAVA_OPTS &#x2F;itsm-module-job-service.jar $PARAMS&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><a href=\"/archives/hello-halo\" title=\"Hello Halo\">上一篇 </a><a href=\"/archives/hibernate%E5%8E%9F%E7%94%9F%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E9%9B%86%E6%98%A0%E5%B0%84%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB\" title=\"hibernate原生查询，结果集映射源码阅读\">下一篇</a></p>\n",
            "tags": [
                "Java",
                "JVM"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/09/23/hibernate-query-result/",
            "url": "https://gyoliu.github.io/2022/09/23/hibernate-query-result/",
            "title": "hibernate原生查询，结果集映射源码阅读",
            "date_published": "2022-09-23T04:56:46.000Z",
            "content_html": "<h1 id=\"1-hibernate-版本-5-4-21-Final\"><a href=\"#1-hibernate-版本-5-4-21-Final\" class=\"headerlink\" title=\"1.hibernate 版本 5.4.21.Final\"></a>1.hibernate 版本 5.4.21.Final</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">SQLQuery</span> nativeQuery <span class=\"token operator\">=</span> entityManager<span class=\"token punctuation\">.</span><span class=\"token function\">createNativeQuery</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLQuery</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnativeQuery<span class=\"token punctuation\">.</span><span class=\"token function\">setResultTransformer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanResultTransformer</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-代码执行栈\"><a href=\"#2-代码执行栈\" class=\"headerlink\" title=\"2.代码执行栈\"></a>2.代码执行栈</h1><p><img src=\"/img/hibernate-query-result.png\" alt=\"hibernate-query-result.png\"></p>\n<h1 id=\"3-org-hibernate-loader-Loader\"><a href=\"#3-org-hibernate-loader-Loader\" class=\"headerlink\" title=\"3.org.hibernate.loader.Loader\"></a>3.org.hibernate.loader.Loader</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span> <span class=\"token function\">listIgnoreQueryCache</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SharedSessionContractImplementor</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">QueryParameters</span> queryParameters<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResultList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> queryParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> queryParameters<span class=\"token punctuation\">.</span><span class=\"token function\">getResultTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n# 其中 <span class=\"token keyword\">this</span> 指向的是 <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>hql<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>classic<span class=\"token punctuation\">.</span></span>QueryTranslatorImpl</span>\n\n<span class=\"token comment\">/**\nResultTransformer resultTransformer 是在查询时指定的\n核心：Object result = holderInstantiator.instantiate(row);\n*/</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">List</span> <span class=\"token function\">getResultList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span> results<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ResultTransformer</span> resultTransformer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">QueryException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">HolderInstantiator</span> holderInstantiator <span class=\"token operator\">=</span> <span class=\"token class-name\">HolderInstantiator</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHolderInstantiator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultTransformer</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> resultTransformer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReturnAliasesForTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>holderInstantiator<span class=\"token punctuation\">.</span><span class=\"token function\">isRequired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> results<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> row <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Object</span> result <span class=\"token operator\">=</span> holderInstantiator<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                results<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">return</span> resultTransformer<span class=\"token punctuation\">.</span><span class=\"token function\">transformList</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"4-调用指定的-ResultTransformer\"><a href=\"#4-调用指定的-ResultTransformer\" class=\"headerlink\" title=\"4.调用指定的 ResultTransformer\"></a>4.调用指定的 ResultTransformer</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>hql<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>HolderInstantiator</span>\n\n<span class=\"token comment\">// 调用 ResultTransformer 的 transformTuple方法</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transformer <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> row <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">.</span><span class=\"token function\">transformTuple</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getQueryReturnAliases</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"5-最后\"><a href=\"#5-最后\" class=\"headerlink\" title=\"5.最后\"></a>5.最后</h1><p>除了可以自定义 ResultTransformer 外，还有个小技巧<br>设置数据库方言：<br>spring.jpa.properties.hibernate.dialect&#x3D;xxx.MySQL8027Dialect<br>自定义方言时指定数据类型映射：<br>&#x2F;&#x2F; 将 bitint 映射成 long<br>registerColumnType(Types.BIGINT, StandardBasicTypes.LONG.getName());<br>registerHibernateType(Types.BIGINT,StandardBasicTypes.LONG.getName());</p>\n<h1 id=\"hibernate-配置项\"><a href=\"#hibernate-配置项\" class=\"headerlink\" title=\"hibernate 配置项\"></a>hibernate 配置项</h1><blockquote>\n<p>org.hibernate.jpa.AvailableSettings<br>org.hibernate.cfg.AvailableSettings<br>org.hibernate.cfg.Environment</p>\n</blockquote>\n",
            "tags": [
                "Java",
                "hibernate"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/09/16/mysql-error-collection/",
            "url": "https://gyoliu.github.io/2022/09/16/mysql-error-collection/",
            "title": "mysql 遇到的一些错误",
            "date_published": "2022-09-16T04:50:56.000Z",
            "content_html": "<h2 id=\"1-3100-Error-on-observer-while-running-replication-hook-‘before-commit’\"><a href=\"#1-3100-Error-on-observer-while-running-replication-hook-‘before-commit’\" class=\"headerlink\" title=\"1. 3100 - Error on observer while running replication hook ‘before_commit’.\"></a>1. 3100 - Error on observer while running replication hook ‘before_commit’.</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">global</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">'%group_replication_transaction_size_limit%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> group_replication_transaction_size_limit<span class=\"token operator\">=</span><span class=\"token number\">1500000000</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-Err-9001-Max-connect-timeout-reached-while-reaching-hostgroup-10-after-1\"><a href=\"#2-Err-9001-Max-connect-timeout-reached-while-reaching-hostgroup-10-after-1\" class=\"headerlink\" title=\"2. [Err] 9001 - Max connect timeout reached while reaching hostgroup 10 after 1\"></a>2. [Err] 9001 - Max connect timeout reached while reaching hostgroup 10 after 1</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">global</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">'%connect%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">set</span> <span class=\"token keyword\">GLOBAL</span> max_connections <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-Caused-by-java-sql-SQLException-Illegal-mix-of-collations-utf8mb4-general-ci-COERCIBLE-and-utf8mb4-0900-ai-ci-COERCIBLE-for-operation-‘-’\"><a href=\"#3-Caused-by-java-sql-SQLException-Illegal-mix-of-collations-utf8mb4-general-ci-COERCIBLE-and-utf8mb4-0900-ai-ci-COERCIBLE-for-operation-‘-’\" class=\"headerlink\" title=\"3. Caused by: java.sql.SQLException: Illegal mix of collations (utf8mb4_general_ci,COERCIBLE) and (utf8mb4_0900_ai_ci,COERCIBLE) for operation ‘&#x3D;’\"></a>3. Caused by: java.sql.SQLException: Illegal mix of collations (utf8mb4_general_ci,COERCIBLE) and (utf8mb4_0900_ai_ci,COERCIBLE) for operation ‘&#x3D;’</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span>GenericJDBCException</span><span class=\"token operator\">:</span> could not extract <span class=\"token class-name\">ResultSet</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>StandardSQLExceptionConverter</span><span class=\"token punctuation\">.</span><span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardSQLExceptionConverter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">47</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span></span>SqlExceptionHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SqlExceptionHelper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">113</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>spi<span class=\"token punctuation\">.</span></span>SqlExceptionHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SqlExceptionHelper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">99</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>ResultSetReturnImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultSetReturnImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">69</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResultSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2167</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeQueryStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1930</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeQueryStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1892</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">937</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doQueryAndInitializeNonLazyCollections</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">340</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2689</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2672</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">listIgnoreQueryCache</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2506</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2501</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>custom<span class=\"token punctuation\">.</span></span>CustomLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">338</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>SessionImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">listCustomQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2223</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractSharedSessionContract</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractSharedSessionContract</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1053</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>NativeQueryImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NativeQueryImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">170</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractProducedQuery</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractProducedQuery</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1505</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token number\">100</span> common frames omitted\n<span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span>SQLException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Illegal</span> mix of collations <span class=\"token punctuation\">(</span>utf8mb4_general_ci<span class=\"token punctuation\">,</span><span class=\"token constant\">COERCIBLE</span><span class=\"token punctuation\">)</span> and <span class=\"token punctuation\">(</span>utf8mb4_0900_ai_ci<span class=\"token punctuation\">,</span><span class=\"token constant\">COERCIBLE</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> operation <span class=\"token char\">'='</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLError</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSQLException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLError</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">129</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLExceptionsMapping</span><span class=\"token punctuation\">.</span><span class=\"token function\">translateException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLExceptionsMapping</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">122</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>ClientPreparedStatement</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientPreparedStatement</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">953</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>ClientPreparedStatement</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientPreparedStatement</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1009</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>FilterChainImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">preparedStatement_executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterChainImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">3240</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>wall<span class=\"token punctuation\">.</span></span>WallFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">preparedStatement_executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WallFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">684</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>FilterChainImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">preparedStatement_executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterChainImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">3237</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>FilterEventAdapter</span><span class=\"token punctuation\">.</span><span class=\"token function\">preparedStatement_executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterEventAdapter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">465</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>FilterChainImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">preparedStatement_executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterChainImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">3237</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>PreparedStatementProxyImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PreparedStatementProxyImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">181</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span></span>DruidPooledPreparedStatement</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DruidPooledPreparedStatement</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">227</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>ResultSetReturnImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultSetReturnImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token number\">114</span> common frames omitted\n    <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h3><ul>\n<li>修改数据库编码：<br>ALTER DATABSE database_name DEFAULT CHARACTER SET utf8mb4;</li>\n<li>修改表编码<br>ALTER TABLE table_name DEFAULT CHARACTER SET utf8mb4;</li>\n<li>查询编码是否一致<br>select * from information_schema.COLUMNS where table_schema &#x3D; ‘数据库’ and TABLE_NAME &#x3D; ‘表名’;</li>\n<li>使用 cast 类型转换函数<br>例：select cast(字段a as char) from 表;<br>例：select * from 表 where cast(字段a as char) &#x3D; ‘’;</li>\n</ul>\n<h2 id=\"4-java-lang-StringIndexOutOfBoundsException-String-index-out-of-range-0\"><a href=\"#4-java-lang-StringIndexOutOfBoundsException-String-index-out-of-range-0\" class=\"headerlink\" title=\"4. java.lang.StringIndexOutOfBoundsException: String index out of range: 0\"></a>4. java.lang.StringIndexOutOfBoundsException: String index out of range: 0</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>StringIndexOutOfBoundsException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">String</span> index out of range<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>String</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">658</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>descriptor<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span></span>CharacterTypeDescriptor</span><span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CharacterTypeDescriptor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">61</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>descriptor<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">.</span></span>CharacterTypeDescriptor</span><span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CharacterTypeDescriptor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>descriptor<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span>VarcharTypeDescriptor</span>$<span class=\"token number\">2.</span><span class=\"token function\">doExtract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VarcharTypeDescriptor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">62</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span>descriptor<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span>BasicExtractor</span><span class=\"token punctuation\">.</span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BasicExtractor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">47</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span></span>AbstractStandardBasicType</span><span class=\"token punctuation\">.</span><span class=\"token function\">nullSafeGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractStandardBasicType</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">261</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span></span>AbstractStandardBasicType</span><span class=\"token punctuation\">.</span><span class=\"token function\">nullSafeGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractStandardBasicType</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">257</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span></span>AbstractStandardBasicType</span><span class=\"token punctuation\">.</span><span class=\"token function\">nullSafeGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractStandardBasicType</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">253</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>custom<span class=\"token punctuation\">.</span></span>ScalarResultColumnProcessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScalarResultColumnProcessor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">54</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>custom<span class=\"token punctuation\">.</span></span>ResultRowProcessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildResultRow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultRowProcessor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">83</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>custom<span class=\"token punctuation\">.</span></span>ResultRowProcessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildResultRow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultRowProcessor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>custom<span class=\"token punctuation\">.</span></span>CustomLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResultColumnOrRow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">412</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRowFromResultSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">760</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">processResultSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">990</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">948</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doQueryAndInitializeNonLazyCollections</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">340</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2689</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2672</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">listIgnoreQueryCache</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2506</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>Loader</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Loader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2501</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>custom<span class=\"token punctuation\">.</span></span>CustomLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">338</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>SessionImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">listCustomQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2223</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractSharedSessionContract</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractSharedSessionContract</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1053</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>NativeQueryImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NativeQueryImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">170</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractProducedQuery</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractProducedQuery</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1505</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span></span>Query</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResultList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Query</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">135</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>workorder<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>MeterServiceImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResultList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MeterServiceImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">51</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>workorder<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>MeterServiceImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSuperTrend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MeterServiceImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">331</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>workorder<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">.</span></span>MeterController</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSuperTrend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MeterController</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">326</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>workorder<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">.</span></span>MeterController</span>$$<span class=\"token class-name\">FastClassBySpringCGLIB</span>$$e7d8818b<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>generated<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>cglib<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">.</span></span>MethodProxy</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodProxy</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">204</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span></span>CglibAopProxy</span>$<span class=\"token class-name\">CglibMethodInvocation</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeJoinpoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CglibAopProxy</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">737</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span></span>ReflectiveMethodInvocation</span><span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReflectiveMethodInvocation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">157</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span></span>MethodInvocationProceedingJoinPoint</span><span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodInvocationProceedingJoinPoint</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">84</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>comn<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span>AopDoAround</span><span class=\"token punctuation\">.</span><span class=\"token function\">doAround</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AopDoAround</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>workorder<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span></span>ControllerAop</span><span class=\"token punctuation\">.</span><span class=\"token function\">doAround</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ControllerAop</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">41</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>GeneratedMethodAccessor159</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Unknown</span> <span class=\"token class-name\">Source</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>DelegatingMethodAccessorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DelegatingMethodAccessorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">43</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">497</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span></span>AbstractAspectJAdvice</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeAdviceMethodWithGivenArgs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractAspectJAdvice</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">627</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span></span>AbstractAspectJAdvice</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeAdviceMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractAspectJAdvice</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">616</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>aspectj<span class=\"token punctuation\">.</span></span>AspectJAroundAdvice</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AspectJAroundAdvice</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">70</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span></span>ReflectiveMethodInvocation</span><span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReflectiveMethodInvocation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">168</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span>ExposeInvocationInterceptor</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExposeInvocationInterceptor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">92</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span></span>ReflectiveMethodInvocation</span><span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ReflectiveMethodInvocation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">179</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>aop<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">.</span></span>CglibAopProxy</span>$<span class=\"token class-name\">DynamicAdvisedInterceptor</span><span class=\"token punctuation\">.</span><span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CglibAopProxy</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">672</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>workorder<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">.</span></span>MeterController</span>$$<span class=\"token class-name\">EnhancerBySpringCGLIB</span>$$<span class=\"token number\">5</span>c8114a3<span class=\"token punctuation\">.</span><span class=\"token function\">getSuperTrend</span><span class=\"token punctuation\">(</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>generated<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>NativeMethodAccessorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke0</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>NativeMethodAccessorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NativeMethodAccessorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">62</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>DelegatingMethodAccessorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DelegatingMethodAccessorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">43</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">497</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span>InvocableHandlerMethod</span><span class=\"token punctuation\">.</span><span class=\"token function\">doInvoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InvocableHandlerMethod</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">205</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span>InvocableHandlerMethod</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeForRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InvocableHandlerMethod</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">133</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span>ServletInvocableHandlerMethod</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeAndHandle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletInvocableHandlerMethod</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span>RequestMappingHandlerAdapter</span><span class=\"token punctuation\">.</span><span class=\"token function\">invokeHandlerMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestMappingHandlerAdapter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">854</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span>RequestMappingHandlerAdapter</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestMappingHandlerAdapter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">765</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span></span>AbstractHandlerMethodAdapter</span><span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractHandlerMethodAdapter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span>DispatcherServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">doDispatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DispatcherServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">967</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span>DispatcherServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">doService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DispatcherServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">901</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span>FrameworkServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">processRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FrameworkServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">970</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span>FrameworkServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FrameworkServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">872</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>HttpServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">648</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span>FrameworkServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FrameworkServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">846</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>HttpServlet</span><span class=\"token punctuation\">.</span><span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">729</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">230</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span>WsFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WsFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>ApplicationContextHeaderFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContextHeaderFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>comn<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span>CustomizeRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomizeRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">net<span class=\"token punctuation\">.</span>bull<span class=\"token punctuation\">.</span>javamelody<span class=\"token punctuation\">.</span></span>MonitoringFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MonitoringFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">239</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">net<span class=\"token punctuation\">.</span>bull<span class=\"token punctuation\">.</span>javamelody<span class=\"token punctuation\">.</span></span>MonitoringFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MonitoringFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">215</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>actuate<span class=\"token punctuation\">.</span>trace<span class=\"token punctuation\">.</span></span>WebRequestTraceFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebRequestTraceFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">108</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>RequestContextFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestContextFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">99</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>HttpPutFormContentFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpPutFormContentFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">109</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>HiddenHttpMethodFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HiddenHttpMethodFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">93</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>SessionRepositoryFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionRepositoryFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">167</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>CharacterEncodingFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CharacterEncodingFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">197</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>actuate<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span>MetricsFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetricsFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">106</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span>OncePerRequestFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OncePerRequestFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">internalDoFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>ApplicationFilterChain</span><span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationFilterChain</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">165</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>StandardWrapperValve</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardWrapperValve</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">198</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>StandardContextValve</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardContextValve</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>authenticator<span class=\"token punctuation\">.</span></span>AuthenticatorBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticatorBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">474</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>StandardHostValve</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardHostValve</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">140</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>valves<span class=\"token punctuation\">.</span></span>ErrorReportValve</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ErrorReportValve</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>StandardEngineValve</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardEngineValve</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">87</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span></span>CoyoteAdapter</span><span class=\"token punctuation\">.</span><span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CoyoteAdapter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">349</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>coyote<span class=\"token punctuation\">.</span>http11<span class=\"token punctuation\">.</span></span>Http11Processor</span><span class=\"token punctuation\">.</span><span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Http11Processor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">783</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>coyote<span class=\"token punctuation\">.</span></span>AbstractProcessorLight</span><span class=\"token punctuation\">.</span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractProcessorLight</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">66</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>coyote<span class=\"token punctuation\">.</span></span>AbstractProtocol</span>$<span class=\"token class-name\">ConnectionHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractProtocol</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">798</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>NioEndpoint</span>$<span class=\"token class-name\">SocketProcessor</span><span class=\"token punctuation\">.</span><span class=\"token function\">doRun</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NioEndpoint</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1434</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>SocketProcessorBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketProcessorBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span>ThreadPoolExecutor</span><span class=\"token punctuation\">.</span><span class=\"token function\">runWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1142</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span>ThreadPoolExecutor</span>$<span class=\"token class-name\">Worker</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">617</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>threads<span class=\"token punctuation\">.</span></span>TaskThread</span>$<span class=\"token class-name\">WrappingRunnable</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TaskThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">61</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">745</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h3><ul>\n<li>修改char(1)为 varchar() 或 给定一个默认值</li>\n<li>修改数据库方言： MySQL8Dialect<br>registerColumnType(Types.NULL, “string”);<br>registerHibernateType(Types.NULL,“string”);</li>\n</ul>\n",
            "tags": [
                "Java",
                "mysql"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/06/29/elasticsearch-query/",
            "url": "https://gyoliu.github.io/2022/06/29/elasticsearch-query/",
            "title": "elasticsearch 查询",
            "date_published": "2022-06-29T04:47:35.000Z",
            "content_html": "<h1 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a>分页</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;_search\n&#123;\n    &quot;from&quot; : 0, &quot;size&quot; : 10,\n    &quot;query&quot; : &#123;\n        &quot;term&quot; : &#123; &quot;user&quot; : &quot;kimchy&quot; &#125;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;_search\n&#123;\n   &quot;query&quot; : &#123;\n      &quot;term&quot; : &#123; &quot;product&quot; : &quot;chocolate&quot; &#125;\n   &#125;,\n   &quot;sort&quot; : [\n      &#123;&quot;price&quot; : &#123;&quot;order&quot; : &quot;asc&quot;, &quot;mode&quot; : &quot;avg&quot;&#125;&#125;\n   ]\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"in-或者-not-in-查询\"><a href=\"#in-或者-not-in-查询\" class=\"headerlink\" title=\"in 或者 not in 查询\"></a>in 或者 not in 查询</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;kibana_sample_data_logs&#x2F;_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;bool&quot;: &#123;\n    &#x2F;&#x2F; must是：in 查询，must_not：是 not in 查询\n      &quot;must&quot;: [\n        &#123;\n          &quot;terms&quot;: &#123;\n            &quot;clientip&quot;: [&quot;118.151.35.151&quot;, &quot;254.207.11.2&quot;]\n          &#125;\n        &#125;\n      ]\n    &#125;\n  &#125;,\n  &quot;sort&quot;: [\n    &#123;\n      &quot;utc_time&quot;: &#123;\n        &quot;order&quot;: &quot;desc&quot;\n      &#125;\n    &#125;\n  ],\n  &quot;from&quot;: 0, &quot;size&quot;: 20\n&#125;\n\nBoolQueryBuilder boolBuilder &#x3D; QueryBuilders.boolQuery();\nboolBuilder.must(QueryBuilders.matchPhraseQuery(&quot;param&quot;, &quot;1&quot;));\nboolBuilder.must(QueryBuilders.matchPhraseQuery(&quot;param&quot;, &quot;2&quot;));\nboolBuilder.must(QueryBuilders.matchPhraseQuery(&quot;param&quot;, &quot;3&quot;));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"or-and-条件查询\"><a href=\"#or-and-条件查询\" class=\"headerlink\" title=\"or and 条件查询\"></a>or and 条件查询</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">1.must\n文档 必须 匹配这些条件才能被包含进来。相当于sql中的 and\n2.must_not\n文档 必须不 匹配这些条件才能被包含进来。相当于sql中的 not\n3.should\n如果满足这些语句中的任意语句，将增加 _score ，否则，无任何影响。它们主要用于修正每个文档的相关性得分。相当于sql中的or\n4.filter\n必须 匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。\n\n构造查询条件\n1. termQuery：精确查询（不分词）\n使用termQuery要注意的是，Elasticsearch5之后，取消了string类型，将原来的string类型拆分为text和keyword两种类型，他们的区别在于text会对字段进行分词处理，而keyword则不会。\n2. matchQuery：匹配查询（分词）\nmatch query搜索的时候，首先会解析查询字符串，进行分词，然后查询，所以假如我搜索的条件输入的是&quot;六年级&quot;，则会把各个年级（一年级至九年级）的数据都查询出来，因为其中都包含’年级’ 。\n3. queryString：精确查询\n4. wildcardQuery：模糊查询\n5. rangeQuery：范围查询<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"多字段搜索\"><a href=\"#多字段搜索\" class=\"headerlink\" title=\"多字段搜索\"></a>多字段搜索</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;kibana_sample_data_logs&#x2F;_search\n&#123;\n  &quot;query&quot;: &#123;\n    &quot;multi_match&quot;: &#123;\n      &quot;query&quot;: &quot;你好 www.elastic.co Chrome&quot;,\n      &quot;fields&quot;: [&quot;message&quot;, &quot;host&quot;]\n    &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"operator-可以设置为-or-默认-或者-and\"><a href=\"#operator-可以设置为-or-默认-或者-and\" class=\"headerlink\" title=\"operator: 可以设置为 or(默认) 或者 and\"></a>operator: 可以设置为 or(默认) 或者 and</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">和分词有关系：\n如：数据是：万里长城真伟大\n分词后：[&quot;万里长城&quot;, &quot;万里&quot;,&quot;万&quot;,&quot;里长&quot;,&quot;里&quot;,&quot;长城&quot; ...]\n为or时：\n索引库中，只要文档的content这个字段内容包含“万里长城”，“里”，“真”，“伟大”等任何一个分词，该条文档就会被索引到。\n\n为and时：\n索引库中，文档的content这个字段必须包含“万里长城”，“里”，“真”，“伟大”等所有分词 ，这就是and。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"java-api\"><a href=\"#java-api\" class=\"headerlink\" title=\"java api\"></a>java api</h1><p><a href=\"https://www.bbsmax.com/A/B0zqrrEZJv/\">java api</a></p>\n<h1 id=\"注意点-RefreshPolicy\"><a href=\"#注意点-RefreshPolicy\" class=\"headerlink\" title=\"注意点 RefreshPolicy\"></a>注意点 RefreshPolicy</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">默认情况下ElasticSearch索引的refresh_interval为1秒，这意味着数据写1秒才就可以被搜索到。\n\n每次索引refresh会产生一个新的 lucene 段，这会导致频繁的 segment merge 行为，对系统 CPU 和 IO 占用都比较高。\n\n如果产品对于实时性要求不高，则可以降低刷新周期，如：index.refresh_interval: 120s。\n\n但是这种特性对于功能测试来说比较麻烦：\n\n因为实时性不能保证，所以每次插入测试数据之后，都需要sleep一段时间，才能进行测试。\n因为实时性不能保证，及时通过sleep策略通过的case，也可能偶尔失败。\n为了解决上述问题，需要提供ElasticSearch增删改数据之后数据立即刷新的策略。\n可知有以下三种刷新策略：\n\nRefreshPolicy#IMMEDIATE:\n请求向ElasticSearch提交了数据，立即进行数据刷新，然后再结束请求。\n优点：实时性高、操作延时短。\n缺点：资源消耗高。\nRefreshPolicy#WAIT_UNTIL:\n请求向ElasticSearch提交了数据，等待数据完成刷新，然后再结束请求。\n优点：实时性高、操作延时长。\n缺点：资源消耗低。\nRefreshPolicy#NONE:\n默认策略。\n请求向ElasticSearch提交了数据，不关系数据是否已经完成刷新，直接结束请求。\n优点：操作延时短、资源消耗低。\n缺点：实时性低\nupdateRequest.setRefreshPolicy(WriteRequest.RefreshPolicy.WAIT_UNTIL);\n每笔500ms以上，特别影响性能。尽量不要使用<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Java",
                "elasticsearch"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/06/27/elasticsearch-setting/",
            "url": "https://gyoliu.github.io/2022/06/27/elasticsearch-setting/",
            "title": "elasticsearch重要的设置",
            "date_published": "2022-06-27T04:44:51.000Z",
            "content_html": "<h1 id=\"1-堆大小检查\"><a href=\"#1-堆大小检查\" class=\"headerlink\" title=\"1. 堆大小检查\"></a>1. 堆大小检查</h1><blockquote>\n<p>如果 JVM 以不相等的初始堆大小和最大堆大小启动，则在系统使用期间调整 JVM 堆的大小时，它很容易出现暂停。为避免这些调整大小暂停，最好在初始堆大小等于最大堆大小的情况下启动 JVM。此外，如果 bootstrap.memory_lock启用，JVM 将在启动时锁定堆的初始大小。如果初始堆大小不等于最大堆大小，则在调整大小后，所有 JVM 堆都不会锁定在内存中。要通过堆大小检查，您必须配置堆大小。<br>-xms: 1g &#x2F;&#x2F; 最小堆内存<br>-xmx: 1g &#x2F;&#x2F; 最大堆内存</p>\n</blockquote>\n<h1 id=\"2-文件描述符\"><a href=\"#2-文件描述符\" class=\"headerlink\" title=\"2. 文件描述符\"></a>2. 文件描述符</h1><blockquote>\n<p>Elasticsearch 需要大量文件描述符（例如，每个分片由多个段和其他文件组成，加上与其他节点的连接等）。此引导检查在 OS X 和 Linux 上强制执行。要通过文件描述符检查，您可能必须配置文件描述符。<br><a href=\"https://blog.csdn.net/qq_32348883/article/details/124265412\">https://blog.csdn.net/qq_32348883/article/details/124265412</a><br>ulimit -n 65535</p>\n</blockquote>\n<h1 id=\"3-内存锁定检查\"><a href=\"#3-内存锁定检查\" class=\"headerlink\" title=\"3. 内存锁定检查\"></a>3. 内存锁定检查</h1><blockquote>\n<p>当 JVM 进行主要的垃圾回收时，它会触及堆的每一页。如果这些页面中的任何一个被换出到磁盘，则必须将它们换回内存。这会导致大量磁盘抖动，而 Elasticsearch 更愿意使用它来服务请求。有几种方法可以配置系统以禁止交换。一种方法是请求 JVM 通过mlockall(Unix) 或虚拟锁 (Windows) 将堆锁定在内存中。这是通过 Elasticsearch 设置完成的 bootstrap.memory_lock。但是，在某些情况下，可以将此设置传递给 Elasticsearch，但 Elasticsearch 无法锁定堆（例如，如果elasticsearch 用户没有memlock unlimited. 内存锁检查验证是否bootstrap.memory_lock设置已启用，JVM 已成功锁定堆。要通过内存锁定检查，您可能必须配置<br>bootstrap.memory_lock</p>\n</blockquote>\n<h1 id=\"4-最大线程数设置\"><a href=\"#4-最大线程数设置\" class=\"headerlink\" title=\"4. 最大线程数设置\"></a>4. 最大线程数设置</h1><blockquote>\n<p>Elasticsearch 通过将请求分解为多个阶段并将这些阶段交给不同的线程池执行器来执行请求。Elasticsearch 中的各种任务都有不同的线程池执行器。因此，Elasticsearch 需要能够创建大量线程。最大线程数检查确保 Elasticsearch 进程在正常使用情况下有权创建足够多的线程。此检查仅在 Linux 上强制执行。如果您在 Linux 上，要通过最大线程数检查，您必须配置您的系统以允许 Elasticsearch 进程能够创建至少 <strong>4096</strong> 个线程。这可以通过&#x2F;etc&#x2F;security&#x2F;limits.conf 使用nproc设置来完成<br>ulimit -u 4096</p>\n</blockquote>\n<h1 id=\"5-文件大小设置\"><a href=\"#5-文件大小设置\" class=\"headerlink\" title=\"5. 文件大小设置\"></a>5. 文件大小设置</h1><blockquote>\n<p>作为单个分片组件的段文件和作为 translog 组件的 translog 生成可能会变得很大（超过数 GB）。在 Elasticsearch 进程可以创建的最大文件大小受到限制的系统上，这可能会导致写入失败。因此，这里最安全的选择是最大文件大小是无限的，这就是最大文件大小引导检查所强制执行的。要通过最大文件检查，您必须将系统配置为允许 Elasticsearch 进程写入无限大小的文件。这可以通过 &#x2F;etc&#x2F;security&#x2F;limits.conf使用fsize设置来完成unlimited</p>\n</blockquote>\n<h1 id=\"6-最大大小虚拟内存检查\"><a href=\"#6-最大大小虚拟内存检查\" class=\"headerlink\" title=\"6. 最大大小虚拟内存检查\"></a>6. 最大大小虚拟内存检查</h1><blockquote>\n<p>Elasticsearch 和 Lucene 用于mmap将索引的一部分映射到 Elasticsearch 地址空间，效果非常好。这使某些索引数据远离 JVM 堆，但在内存中以实现极快的访问。为使其有效，Elasticsearch 应具有无限的地址空间。最大大小虚拟内存检查强制 Elasticsearch 进程具有无限的地址空间，并且仅在 Linux 上强制执行。要通过最大大小虚拟内存检查，您必须将系统配置为允许 Elasticsearch 进程拥有无限地址空间的能力。这可以通过&#x2F;etc&#x2F;security&#x2F;limits.conf使用as设置来完成unlimited</p>\n</blockquote>\n<h1 id=\"7-max-map-count文件包含限制一个进程可以拥有的VMA-虚拟内存区域-的数量\"><a href=\"#7-max-map-count文件包含限制一个进程可以拥有的VMA-虚拟内存区域-的数量\" class=\"headerlink\" title=\"7. max_map_count文件包含限制一个进程可以拥有的VMA(虚拟内存区域)的数量\"></a>7. max_map_count文件包含限制一个进程可以拥有的VMA(虚拟内存区域)的数量</h1><blockquote>\n<p>Elasticsearch 还需要能够创建许多内存映射区域。最大映射计数检查检查内核是否允许进程具有至少 262,144 个内存映射区域，并且仅在 Linux 上强制执行。要通过最大地图计数检查，您必须将vm.max_map_count 配置 sysctl 为至少262144.</p>\n</blockquote>\n<h1 id=\"8-系统调用过滤检查\"><a href=\"#8-系统调用过滤检查\" class=\"headerlink\" title=\"8. 系统调用过滤检查\"></a>8. 系统调用过滤检查</h1><blockquote>\n<p>Elasticsearch 会根据操作系统（例如，Linux 上的 seccomp）安装各种风格的系统调用过滤器。安装这些系统调用过滤器是为了防止执行与分叉相关的系统调用，以此作为防御机制来抵御对 Elasticsearch 的任意代码执行攻击。系统调用过滤器检查确保如果启用了系统调用过滤器，则它们已成功安装。要通过系统调用过滤器检查，您必须修复系统上阻止系统调用过滤器安装的任何配置错误（检查您的日志），或者通过设置为来自行承担禁用系统调用过滤器的风险。bootstrap.system_call_filter: false</p>\n</blockquote>\n<h1 id=\"9-elasticsearch-yml\"><a href=\"#9-elasticsearch-yml\" class=\"headerlink\" title=\"9. elasticsearch.yml\"></a>9. elasticsearch.yml</h1><table>\n<thead>\n<tr>\n<th>配置key</th>\n<th>配置value</th>\n<th>说明</th>\n<th>example</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>path.logs</td>\n<td>&#x2F;var&#x2F;log&#x2F;elasticsearch</td>\n<td>日志保存的文件路径</td>\n<td></td>\n</tr>\n<tr>\n<td>path.data</td>\n<td>&#x2F;var&#x2F;data&#x2F;elasticsearch</td>\n<td>数据保存的文件路径</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://cluster.name/\">cluster.name</a></td>\n<td>myes</td>\n<td>集群名称</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://node.name/\">node.name</a></td>\n<td>node1</td>\n<td>节点名称</td>\n<td>node.name&#x3D;${} HOSTNAME</td>\n</tr>\n<tr>\n<td>network.host</td>\n<td>192.168.1.1</td>\n<td>网络IP设置</td>\n<td></td>\n</tr>\n<tr>\n<td>discovery.zen.ping.unicast.hosts</td>\n<td>[“192.168.1.11”,“192.168.1.12”,“192.168.1.13”]</td>\n<td>集群发现其他节点机器配置</td>\n<td></td>\n</tr>\n<tr>\n<td>discovery.zen.minimum_master_nodes</td>\n<td>2</td>\n<td>避免脑裂设置，设置形成集群最少需要的票数。计算公式：(master_eligible_nodes &#x2F; 2) + 1 必须超过所有机器的一半</td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"10-jvm-options\"><a href=\"#10-jvm-options\" class=\"headerlink\" title=\"10. jvm.options\"></a>10. jvm.options</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">设置Xms和Xmx不超过物理 RAM 的 50%，以确保有足够的物理 RAM 留给内核文件系统缓存。\n- Xms2g \n- Xmx2g\n\n请注意，Elasticsearch 附带的默认 JVM 配置将 Elasticsearch 配置为使用 CMS 收集器。\n-XX:+UseSerialGC<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "Java",
                "elasticsearch"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/05/18/elasticsearch8-2-install/",
            "url": "https://gyoliu.github.io/2022/05/18/elasticsearch8-2-install/",
            "title": "elasticsearch8.2集群安装部署",
            "date_published": "2022-05-18T04:41:39.000Z",
            "content_html": "<h1 id=\"1-下载\"><a href=\"#1-下载\" class=\"headerlink\" title=\"- 1. 下载\"></a>- 1. 下载</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">[elasticsearch下载地址](https:&#x2F;&#x2F;www.elastic.co&#x2F;start)\n[elasticsearch下载地址](https:&#x2F;&#x2F;www.elastic.co&#x2F;downloads&#x2F;elasticsearch)\n[elasticsearch版本支持](https:&#x2F;&#x2F;www.elastic.co&#x2F;support&#x2F;matrix)\n\n[elastic8.2 文档](https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;8.2&#x2F;index.html)\n[中文文档（有些东西可能过时）](https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;cn&#x2F;elasticsearch&#x2F;guide&#x2F;current&#x2F;index.html)\n[elasticsearch概念介绍](http:&#x2F;&#x2F;t.zoukankan.com&#x2F;kevingrace-p-10682264.html)\n[运维指南](https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1836799)\n[客户端](https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;client&#x2F;index.html)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"2-集群配置文件\"><a href=\"#2-集群配置文件\" class=\"headerlink\" title=\"- 2. 集群配置文件\"></a>- 2. 集群配置文件</h1><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">cluster.name</span><span class=\"token punctuation\">:</span> myes\n<span class=\"token key atrule\">node.name</span><span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">-</span><span class=\"token number\">1</span>\n<span class=\"token key atrule\">network.host</span><span class=\"token punctuation\">:</span> 127.0.0.1\n<span class=\"token comment\">#transport.tcp.port: 9300</span>\n<span class=\"token key atrule\">http.port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9200</span>\n<span class=\"token key atrule\">http.cors.enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">http.cors.allow-origin</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span>\n<span class=\"token key atrule\">discovery.seed_hosts</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"127.0.0.1:9300\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"127.0.0.1:9301\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"127.0.0.1:9302\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">cluster.initial_master_nodes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"127.0.0.1:9300\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"127.0.0.1:9301\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"127.0.0.1:9302\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">path.data</span><span class=\"token punctuation\">:</span> ./data\n<span class=\"token key atrule\">path.logs</span><span class=\"token punctuation\">:</span> ./logs\n<span class=\"token comment\"># 不需要认证设置成 false </span>\n<span class=\"token key atrule\">xpack.security.enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">xpack.security.transport.ssl.enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">xpack.security.transport.ssl.verification_mode</span><span class=\"token punctuation\">:</span> certificate\n<span class=\"token comment\"># 证书的位置</span>\n<span class=\"token key atrule\">xpack.security.transport.ssl.keystore.path</span><span class=\"token punctuation\">:</span> certs/elastic<span class=\"token punctuation\">-</span>certificates.p12\n<span class=\"token key atrule\">xpack.security.transport.ssl.truststore.path</span><span class=\"token punctuation\">:</span> certs/elastic<span class=\"token punctuation\">-</span>certificates.p12\n注意 ：在一台机器上生成 elastic<span class=\"token punctuation\">-</span>certificates.p12 后，将文件复制到其他机器上不能重新生成<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"3-集群认证设置\"><a href=\"#3-集群认证设置\" class=\"headerlink\" title=\"- 3. 集群认证设置\"></a>- 3. 集群认证设置</h1><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">1. 配置文件需设置\n<span class=\"token key atrule\">xpack.security.enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">xpack.security.transport.ssl.enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">xpack.security.transport.ssl.verification_mode</span><span class=\"token punctuation\">:</span> certificate\n<span class=\"token key atrule\">xpack.security.transport.ssl.keystore.path</span><span class=\"token punctuation\">:</span> certs/elastic<span class=\"token punctuation\">-</span>certificates.p12\n<span class=\"token key atrule\">xpack.security.transport.ssl.truststore.path</span><span class=\"token punctuation\">:</span> certs/elastic<span class=\"token punctuation\">-</span>certificates.p12\n2. 生成通讯证书\n./bin/elasticsearch<span class=\"token punctuation\">-</span>certutil ca\n./bin/elasticsearch<span class=\"token punctuation\">-</span>certutil cert <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>ca elastic<span class=\"token punctuation\">-</span>stack<span class=\"token punctuation\">-</span>ca.p12\nmkdir config/certs\nmv <span class=\"token important\">*.p12</span> config/certs\n3. 所有节点设置节点通信密码（因每个节点使用相同的证书文件）\n必须设置所有集群的证书密码\n./bin/elasticsearch<span class=\"token punctuation\">-</span>keystore add xpack.security.transport.ssl.keystore.secure_password\n./bin/elasticsearch<span class=\"token punctuation\">-</span>keystore add xpack.security.transport.ssl.truststore.secure_password\n4. 设置账号密码，elastic 集群内置的一些账号密码\n./bin/elasticsearch<span class=\"token punctuation\">-</span>setup<span class=\"token punctuation\">-</span>passwords interactive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"4-java-lang-RuntimeException-can-not-run-elasticsearch-as-root\"><a href=\"#4-java-lang-RuntimeException-can-not-run-elasticsearch-as-root\" class=\"headerlink\" title=\"- 4. java.lang.RuntimeException: can not run elasticsearch as root\"></a>- 4. java.lang.RuntimeException: can not run elasticsearch as root</h1><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">groupadd elastic\nuseradd elastic -g elastic\npasswd elastic\nchown -R elastic:elastic elasticsearch-8.2.0\nsu elastic\n.&#x2F;bin&#x2F;elasticsearch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"5-org-elasticsearch-ElasticsearchException-Failure-running-machine-learning-native-code-This-could-be-due-to-running-on-an-unsupported-OS-or-distribution-missing-OS-libraries-or-a-problem-with-the-temp-directory-To-bypass-this-problem-by-running-Elasticsearch-without-machine-learning-functionality-set-xpack-ml-enabled-false\"><a href=\"#5-org-elasticsearch-ElasticsearchException-Failure-running-machine-learning-native-code-This-could-be-due-to-running-on-an-unsupported-OS-or-distribution-missing-OS-libraries-or-a-problem-with-the-temp-directory-To-bypass-this-problem-by-running-Elasticsearch-without-machine-learning-functionality-set-xpack-ml-enabled-false\" class=\"headerlink\" title=\"- 5. org.elasticsearch.ElasticsearchException: Failure running machine learning native code. This could be due to running on an unsupported OS or distribution, missing OS libraries, or a problem with the temp directory. To bypass this problem by running Elasticsearch without machine learning functionality set [xpack.ml.enabled: false].\"></a>- 5. org.elasticsearch.ElasticsearchException: Failure running machine learning native code. This could be due to running on an unsupported OS or distribution, missing OS libraries, or a problem with the temp directory. To bypass this problem by running Elasticsearch without machine learning functionality set [xpack.ml.enabled: false].</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">编辑：config\\elasticsearch.yml\n增加配置：xpack.ml.enabled: false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"6-bootstrap-check-failure-1-of-2-max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144\"><a href=\"#6-bootstrap-check-failure-1-of-2-max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144\" class=\"headerlink\" title=\"- 6. bootstrap check failure [1] of [2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]\"></a>- 6. bootstrap check failure [1] of [2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">修改：sysctl -w vm.max_map_count&#x3D;262144\n查看：sysctl -a | grep vm.max_map_count<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"7-bootstrap-check-failure-1-of-1-system-call-filters-failed-to-install-check-the-logs-and-fix-your-configuration\"><a href=\"#7-bootstrap-check-failure-1-of-1-system-call-filters-failed-to-install-check-the-logs-and-fix-your-configuration\" class=\"headerlink\" title=\"- 7. bootstrap check failure [1] of [1]: system call filters failed to install; check the logs and fix your configuration\"></a>- 7. bootstrap check failure [1] of [1]: system call filters failed to install; check the logs and fix your configuration</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">修改： config\\elasticsearch.yml\nbootstrap.memory_lock: false\nbootstrap.system_call_filter: false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"8-查询-ES-集群状态\"><a href=\"#8-查询-ES-集群状态\" class=\"headerlink\" title=\"- 8. 查询 ES 集群状态\"></a>- 8. 查询 ES 集群状态</h1><p><a href=\"https://www.cnblogs.com/aping-blog/p/16066928.html\">https://www.cnblogs.com/aping-blog/p/16066928.html</a></p>\n<p><a href=\"/archives/elasticsearch-zhong-yao-de-she-zhi\" title=\"elasticsearch重要的设置\">上一篇 </a><a href=\"/archives/oauth2jwt\" title=\"oauth2 jwt\">下一篇</a></p>\n",
            "tags": [
                "Java",
                "elasticsearch"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/03/04/quartz-workflow/",
            "url": "https://gyoliu.github.io/2022/03/04/quartz-workflow/",
            "title": "quartz启动执行流程",
            "date_published": "2022-03-04T04:38:04.000Z",
            "content_html": "<p>spring 整合 quartz 初始化执行流程, 写的不是一般乱</p>\n<blockquote>\n<p>SchedulerFactoryBean.afterPropertiesSet()<br>-&gt; prepareSchedulerFactory()<br>-&gt; initSchedulerFactory() 初始化StdSchedulerFactory<br>-&gt; prepareScheduler(SchedulerFactory schedulerFactory)<br>-&gt; createScheduler() 创建调度器<br>-&gt; StdSchedulerFactory.getScheduler()<br>-&gt; instantiate()</p>\n</blockquote>\n<ol>\n<li>初始化 读取 quartz.properties 中的配置</li>\n<li>实例化 QuartzSchedulerResources -&gt;<br>a. 初始化 JobStore （JobStoreSupport）<br>b. 初始化 SimpleThreadPool -&gt; initialize()<br>… 等等其他信息</li>\n<li>实例化 QuartzScheduler<br>a. 实例化 QuartzSchedulerThread<br>b. QuartzSchedulerResources.getThreadExecutor().execute(QuartzSchedulerThread)<br>b1. QuartzSchedulerThread.run() -&gt; getJobStore().acquireNextTriggers() 获取可以执行的触发器 -&gt; 根据触发器获取job的详细信息 getJobStore().triggersFired(triggers) 封装成对象 TriggerFiredResult -&gt; TriggerFiredBundle<br>b2. 根据 TriggerFiredBundle 创建任务执行脚本 -&gt; getJobRunShellFactory().createJobRunShell(TriggerFiredBundle); -&gt; shell.initialize(this.qs);<br>b3. 将任务添加进WorkerThread： getThreadPool().runInThread(shell)<br>b4. 执行具体任务：JobRunShell.run() -&gt; 获取 JobDetail</li>\n</ol>\n<p>-&gt; SchedulerFactoryBean.start() 什么时机触发start： SchedulerFactoryBean 实现了 SmartLifecycle 接口, 在 spring 容器初始化完成后，会调用 AbstractApplicationContext.finishRefresh()<br>-&gt; ClusterManager.initialize() -&gt; this.manage() -&gt; run()</p>\n<h3 id=\"问题1-前面初始化是就已经提交另一个线程-QuartzSchedulerResources-getThreadExecutor-execute-QuartzSchedulerThread-执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？\"><a href=\"#问题1-前面初始化是就已经提交另一个线程-QuartzSchedulerResources-getThreadExecutor-execute-QuartzSchedulerThread-执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？\" class=\"headerlink\" title=\"问题1. 前面初始化是就已经提交另一个线程 QuartzSchedulerResources.getThreadExecutor().execute(QuartzSchedulerThread) 执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？\"></a>问题1. 前面初始化是就已经提交另一个线程 QuartzSchedulerResources.getThreadExecutor().execute(QuartzSchedulerThread) 执行了去数据库扫描任务但是其实还有很多东西没有初始化完，这个是怎么处理的？</h3><blockquote>\n<p>答： QuartzSchedulerThread 中有个变量 paused 初始化时为 true ，则该线程一直处于轮询死循环状态，在调用 QuartzScheduler.start() 方法里面 this.schedThread.togglePause(false); 设置成 false ,则 QuartzSchedulerThread 才能去执行数据库任务扫描加载</p>\n</blockquote>\n<h3 id=\"问题2-如何感知集群中其他机器？\"><a href=\"#问题2-如何感知集群中其他机器？\" class=\"headerlink\" title=\"问题2. 如何感知集群中其他机器？\"></a>问题2. 如何感知集群中其他机器？</h3><blockquote>\n<p>答： 在 QuartzScheduler.start() 启动时会调用 QuartzSchedulerResources.getJobStore().schedulerStarted() 启动一个集群管理线程来感知 new JobStoreSupport.ClusterManager() -&gt; this.manage() -&gt; doCheckin()<br>每个机器启动时都会执行签入动作，如果是第一次签入则新增记录到表qrtz_scheduler_state中并设置签入时间，如果不是第一次则更新签入时间，感知同一集群根据 SCHED_NAME 来判断是否有集群机器离线<br>protected long calcFailedIfAfter(SchedulerStateRecord rec) {<br>return rec.getCheckinTimestamp() + Math.max(rec.getCheckinInterval(), System.currentTimeMillis() - this.lastCheckin) + 7500L &gt; 当前时间;<br>}<br>如果扫描到有机器离线，则锁定 STATE_ACCESS 并再次检查是否有离线的机器，如果还是检查到，则锁定 TRIGGER_ACCESS 扫描表 qrtz_fired_triggers 判断触发器的状态，释放 blocked triggers -&gt; STATE_WAITING 和 acquired triggers -&gt; STATE_PAUSED 。如果 job 设置了失效转移 isJobRequestsRecovery ，则更新表 qrtz_triggers 触发器为等待执行状态（WAITING），最后删除 deleteFiredTriggers 表的数据</p>\n</blockquote>\n<h3 id=\"根据上面的描述，有个问题：什么时候新增-qrtz-fired-triggers-表的数据呢？\"><a href=\"#根据上面的描述，有个问题：什么时候新增-qrtz-fired-triggers-表的数据呢？\" class=\"headerlink\" title=\"根据上面的描述，有个问题：什么时候新增 qrtz_fired_triggers 表的数据呢？\"></a>根据上面的描述，有个问题：什么时候新增 qrtz_fired_triggers 表的数据呢？</h3><blockquote>\n<p>答： QuartzSchedulerThread -&gt; acquireNextTrigger() 会新增那个机器执行了triggers 的记录激活了所有的触发器，则其他的机器根据抢占锁来获得执行触发器的权利， 执行acquireNextTrigger()方法时会抢占锁， quart 不支持任务分片，只能在一个机器上执行</p>\n</blockquote>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/02/24/xxljob-workflow/",
            "url": "https://gyoliu.github.io/2022/02/24/xxljob-workflow/",
            "title": "xxl-job执行流程和原理",
            "date_published": "2022-02-24T04:31:56.000Z",
            "content_html": "<h2 id=\"xxl-job项目地址-👈\"><a href=\"#xxl-job项目地址-👈\" class=\"headerlink\" title=\"xxl-job项目地址 👈\"></a><a href=\"https://github.com/xuxueli/xxl-job\">xxl-job项目地址 👈</a></h2><p><img src=\"/img/xxljob%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%92%8C%E5%8E%9F%E7%90%86.png\" alt=\"xxljob执行流程和原理.png\"><br><img src=\"/img/xxljob%E6%9E%B6%E6%9E%84%E5%9B%BE.png\" alt=\"xxljob架构图.png\"></p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2021/09/29/spring-redis-cache-lock/",
            "url": "https://gyoliu.github.io/2021/09/29/spring-redis-cache-lock/",
            "title": "springboot redis 死锁问题",
            "date_published": "2021-09-29T03:53:21.000Z",
            "content_html": "<h1 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h1><ul>\n<li>调用某个使用了 @Cacheable 的接口，一直没有响应，但是业务代码都执行完成。 如果使用的是 lockingRedisCacheWriter 实例化的缓存，那么在开发阶段不断重启应用强制杀掉进程，会导致锁没有释放问题。</li>\n</ul>\n<h1 id=\"缓存注解\"><a href=\"#缓存注解\" class=\"headerlink\" title=\"缓存注解\"></a>缓存注解</h1><p>@Cacheable、@CacheEvict、@CachePut、@Caching</p>\n<h1 id=\"spring-redis-的实现\"><a href=\"#spring-redis-的实现\" class=\"headerlink\" title=\"spring redis 的实现\"></a>spring redis 的实现</h1><p>RedisCacheManager、RedisCache 核心类<br>其中 RedisCache 实现了 redis 具体的缓存方式和执行的redis命令</p>\n<p>创建缓存时的 cacheNames<br>其中定义了 RedisCacheMetadata.class 会生成一个 cacheLockName &#x3D; cacheName + “~lock” 的缓存锁的 key</p>\n<p>在 get 缓存时，判断 redis 有没有缓存这个 key，没有则创建这个缓存，调用的是new RedisCache.RedisWriteThroughCallback().doInRedis()，其中第一步就是 lock() ，使用的就是上面的那个缓存锁的 key ，并且没有设置超时时间，代码如下，当这个缓存锁的 key 早已在 redis 中存在，那下的代码就是死循环，直到redis连接耗尽服务不可用。</p>\n<h1 id=\"解决方法就是删除这个key\"><a href=\"#解决方法就是删除这个key\" class=\"headerlink\" title=\"解决方法就是删除这个key\"></a>解决方法就是删除这个key</h1><p>线程 BLOCKED 分析：<br>执行代码 xxx 时使用了缓存注解 @Cacheable ，该注解实现最终是通过 org.springframework.data.redis.cache.DefaultRedisCacheWriter.get() 获取redis 是否存在缓存，源码如下：（spring-data-redis 2.3.4 Release 版本）</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span>*notNull<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> “<span class=\"token class-name\">Name</span> must not be <span class=\"token keyword\">null</span><span class=\"token operator\">!</span>”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span>*notNull<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> “<span class=\"token class-name\">Key</span> must not be <span class=\"token keyword\">null</span><span class=\"token operator\">!</span>”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 执行 execute</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">T</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RedisConnection</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">RedisConnection</span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connectionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token class-name\">Object</span> var4<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span> \n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkAndPotentiallyWaitUntilUnlocked</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> var4 <span class=\"token operator\">=</span> callback<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n      connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">return</span> var4<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 执行加锁逻辑 checkAndPotentiallyWaitUntilUnlocked</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkAndPotentiallyWaitUntilUnlocked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RedisConnection</span> connection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isLockingCacheWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doCheckLock</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>*sleep<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sleepTime<span class=\"token punctuation\">.</span><span class=\"token function\">toMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> var4<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>*currentThread<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">interrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PessimisticLockingFailureException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span>*format<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>“<span class=\"token class-name\">Interrupted</span> <span class=\"token keyword\">while</span> waiting <span class=\"token keyword\">to</span> <span class=\"token namespace\">unlock</span> cache <span class=\"token operator\">%</span>s”<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> var4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 获取锁 判断这个锁 key 是否存在，如果存在就一直循环等待锁资源,但是通过在 redis 服务器又没有找到相关的 ～lock</span>\n\n<span class=\"token keyword\">boolean</span> <span class=\"token function\">doCheckLock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RedisConnection</span> connection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">return</span> connection<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>createCacheLockKey<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 创建锁 key</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">createCacheLockKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> “<span class=\"token operator\">~</span>lock”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>*<span class=\"token constant\">UTF_8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span>\n\n代码和注释得知加锁逻辑导致一直在等待中的状态，导致线程阻塞。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h1><p>经源码跟踪发现有两种实现： nonLockingRedisCacheWriter 和 lockingRedisCacheWriter ，默认是通过 nonLockingRedisCacheWriter 实例化的，源码如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RedisCacheWriter</span> <span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">RedisCacheWriter</span> <span class=\"token function\">nonLockingRedisCacheWriter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisConnectionFactory</span> connectionFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span>*notNull<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>connectionFactory<span class=\"token punctuation\">,</span> “<span class=\"token class-name\">ConnectionFactory</span> must not be <span class=\"token keyword\">null</span><span class=\"token operator\">!</span>”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultRedisCacheWriter</span><span class=\"token punctuation\">(</span>connectionFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">&#125;</span> \n  <span class=\"token keyword\">static</span> <span class=\"token class-name\">RedisCacheWriter</span> <span class=\"token function\">lockingRedisCacheWriter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisConnectionFactory</span> connectionFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span>*notNull<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>connectionFactory<span class=\"token punctuation\">,</span> “<span class=\"token class-name\">ConnectionFactory</span> must not be <span class=\"token keyword\">null</span><span class=\"token operator\">!</span>”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultRedisCacheWriter</span><span class=\"token punctuation\">(</span>connectionFactory<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span>*ofMillis<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">50L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token punctuation\">&#125;</span> \n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> var1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var3<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Duration</span> var4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> var1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">putIfAbsent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> var1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var3<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Duration</span> var4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> var1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">clean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> var1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在实例化缓存管理组件时指定无锁缓存，可以避免获取缓存加锁问题。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2021/07/02/jdk-tools/",
            "url": "https://gyoliu.github.io/2021/07/02/jdk-tools/",
            "title": "jdk tools jvm jmap jstat jstack",
            "date_published": "2021-07-02T03:43:31.000Z",
            "content_html": "<h3 id=\"jmap输出内存快照\"><a href=\"#jmap输出内存快照\" class=\"headerlink\" title=\"jmap输出内存快照\"></a>jmap输出内存快照</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">jmap <span class=\"token parameter variable\">-dump:format</span><span class=\"token operator\">=</span>b,file<span class=\"token operator\">=</span>/data/jmap.hprof PID\n\n增加GC日志\n<span class=\"token parameter variable\">-XX:+HeapDumpOnOutOfMemoryError</span> \n-Xloggc:/data/tomcat/logs/gc.log \n<span class=\"token parameter variable\">-XX:+PrintGCDateStamps</span> \n<span class=\"token parameter variable\">-XX:+PrintGCDetails</span> \n<span class=\"token parameter variable\">-XX:+PrintGCApplicationStoppedTime</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"jstat-查看GC信息\"><a href=\"#jstat-查看GC信息\" class=\"headerlink\" title=\"jstat 查看GC信息\"></a>jstat 查看GC信息</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">3000</span> 是指定的频率\njstat <span class=\"token parameter variable\">-gcutil</span> PID <span class=\"token number\">3000</span>\n\n使用jstat -gccause：额外输出上次GC原因<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"jstack-死锁问题\"><a href=\"#jstack-死锁问题\" class=\"headerlink\" title=\"jstack 死锁问题\"></a>jstack 死锁问题</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">jstack主要的用途是打印出Thread dump\njstack pid  <span class=\"token operator\">></span> ./stack.log\n选项\t作用\n<span class=\"token parameter variable\">-F</span>\t当正常输出请求不被响应时，强制输出线程堆栈\n<span class=\"token parameter variable\">-l</span>\t除堆栈外，显示关于锁的附加信息<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"sz-下载大文件问题\"><a href=\"#sz-下载大文件问题\" class=\"headerlink\" title=\"sz 下载大文件问题\"></a>sz 下载大文件问题</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 把iso切分成500M大小的文件</span>\n<span class=\"token function\">cat</span> xxx文件 <span class=\"token operator\">|</span> <span class=\"token function\">split</span> <span class=\"token parameter variable\">-b</span> 500M - xxx_1\n\n<span class=\"token comment\"># 切分后都是以 .aa   .ab  .ac .... 类似这样的结构</span>\n\n<span class=\"token comment\"># sz 下载</span>\nsz xxx_1a*\n\n<span class=\"token comment\"># 合并文件</span>\n<span class=\"token function\">cat</span> xxx* <span class=\"token operator\">></span> xxx_1\n\n<span class=\"token comment\"># windows 文件合并</span>\ncopy /b ＜filename1＞+＜filename2＞+…+＜filenameN＞ ＜新filename＞<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2021/05/26/webservice-call/",
            "url": "https://gyoliu.github.io/2021/05/26/webservice-call/",
            "title": "webservice 的两种调用方式",
            "date_published": "2021-05-26T03:04:29.000Z",
            "content_html": "<h3 id=\"CXF\"><a href=\"#CXF\" class=\"headerlink\" title=\"CXF\"></a>CXF</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebserviceConfiguration</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> targetEndpointAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> targetNameSpace<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> operationName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> soapActionURI<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> binding<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> useSOAPAction<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> timeout<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SOAPHeaderElement</span> soapHeaderElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SOAPConstants</span> soapConstants<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> params<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> isObject<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> isArg0<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getTargetEndpointAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> targetEndpointAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTargetEndpointAddress</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> targetEndpointAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>targetEndpointAddress <span class=\"token operator\">=</span> targetEndpointAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getTargetNameSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> targetNameSpace<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTargetNameSpace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> targetNameSpace<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>targetNameSpace <span class=\"token operator\">=</span> targetNameSpace<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getOperationName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> operationName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setOperationName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> operationName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>operationName <span class=\"token operator\">=</span> operationName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSoapActionURI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> soapActionURI<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSoapActionURI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> soapActionURI<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>soapActionURI <span class=\"token operator\">=</span> soapActionURI<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">getUseSOAPAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> useSOAPAction<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUseSOAPAction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> useSOAPAction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>useSOAPAction <span class=\"token operator\">=</span> useSOAPAction<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SOAPHeaderElement</span> <span class=\"token function\">getSoapHeaderElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> soapHeaderElement<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSoapHeaderElement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SOAPHeaderElement</span> soapHeaderElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>soapHeaderElement <span class=\"token operator\">=</span> soapHeaderElement<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> params<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>params <span class=\"token operator\">=</span> params<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SOAPConstants</span> <span class=\"token function\">getSoapConstants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> soapConstants<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSoapConstants</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SOAPConstants</span> soapConstants<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>soapConstants <span class=\"token operator\">=</span> soapConstants<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> timeout<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> timeout<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> timeout<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> binding<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBinding</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> binding<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>binding <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> isObject<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        isObject <span class=\"token operator\">=</span> object<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isArg0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> isArg0<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setArg0</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> arg0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        isArg0 <span class=\"token operator\">=</span> arg0<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSON</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span>serializer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSONSerializer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span>serializer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimplePropertyPreFilter</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>knowledge<span class=\"token punctuation\">.</span>thirdapi<span class=\"token punctuation\">.</span>vo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebserviceResultVo</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Client</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientImpl</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Endpoint</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>jaxws<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span>dynamic<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JaxWsDynamicClientFactory</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectUtils</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>activation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataHandler</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">.</span>namespace<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QName</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PropertyDescriptor</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CxfWebserviceUtils</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> log <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CxfWebserviceUtils</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">SimplePropertyPreFilter</span> <span class=\"token constant\">PROPERTY_PRE_FILTER</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimplePropertyPreFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataHandler</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JSONSerializer</span> serializer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClazz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClazz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isInstance</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">WebserviceResultVo</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebserviceConfiguration</span> configuration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CxfWebserviceUtils parmas:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">,</span><span class=\"token constant\">PROPERTY_PRE_FILTER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">JaxWsDynamicClientFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token class-name\">JaxWsDynamicClientFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Client</span> client <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getTargetEndpointAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">QName</span> method <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getTargetNameSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getOperationName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Object</span> returnData <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">ClientImpl</span> client1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientImpl</span><span class=\"token punctuation\">)</span> client<span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Endpoint</span> endpoint <span class=\"token operator\">=</span> client1<span class=\"token punctuation\">.</span><span class=\"token function\">getEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">ServiceInfo</span> serviceInfo <span class=\"token operator\">=</span> endpoint<span class=\"token punctuation\">.</span><span class=\"token function\">getService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getServiceInfos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">QName</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getTargetNameSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">BindingInfo</span> binding <span class=\"token operator\">=</span> serviceInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getBinding</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">BindingOperationInfo</span> bindingOperation <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">.</span><span class=\"token function\">getOperation</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">BindingMessageInfo</span> input <span class=\"token operator\">=</span> bindingOperation<span class=\"token punctuation\">.</span><span class=\"token function\">getInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">MessagePartInfo</span> messagePartInfo <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> typeClass <span class=\"token operator\">=</span> messagePartInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTypeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">isArg0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    typeClass <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertyDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arg0\"</span><span class=\"token punctuation\">,</span> typeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token class-name\">Object</span> o <span class=\"token operator\">=</span> typeClass<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token class-name\">Map</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">)</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o1 <span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token class-name\">PropertyDescriptor</span> descriptor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertyDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> typeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">getWriteMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token class-name\">List</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">)</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">Field</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredFields <span class=\"token operator\">=</span> typeClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> declaredFields<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token class-name\">PropertyDescriptor</span> descriptor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertyDescriptor</span><span class=\"token punctuation\">(</span>declaredFields<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> typeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">getWriteMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> invoke <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">ObjectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>invoke<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    returnData <span class=\"token operator\">=</span> invoke<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token class-name\">Map</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">)</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    o <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token class-name\">List</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">)</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    o <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> invoke <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">ObjectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>invoke<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    returnData <span class=\"token operator\">=</span> invoke<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//            Object[] invoke = client.invoke(method, ((List)configuration.getParams()).toArray());</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>returnData <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CxfWebserviceUtils response:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>returnData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">WebserviceResultVo</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span>returnData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CxfWebserviceUtils response is null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">WebserviceResultVo</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response is null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CxfWebserviceUtils error!\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">WebserviceResultVo</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Axis\"><a href=\"#Axis\" class=\"headerlink\" title=\"Axis\"></a>Axis</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token class-name\">Call</span> call <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Call</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span>Service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//设置超时时间</span>\n<span class=\"token comment\">//      call.setTimeout(new Integer(20000));</span>\n        <span class=\"token comment\">//设置目标接口的地址</span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetEndpointAddress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// </span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setSOAPActionURI</span><span class=\"token punctuation\">(</span>soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//添加头部信息</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">ObjectUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>authDto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">SOAPHeaderElement</span> soapHeaderElement <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SOAPHeaderElement</span><span class=\"token punctuation\">(</span>targetNameSpace<span class=\"token punctuation\">,</span> <span class=\"token string\">\"AuthenticationInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//设置参数名称和值</span>\n            soapHeaderElement<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTextNode</span><span class=\"token punctuation\">(</span>authDto<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            soapHeaderElement<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTextNode</span><span class=\"token punctuation\">(</span>authDto<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            soapHeaderElement<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"authentication\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTextNode</span><span class=\"token punctuation\">(</span>authDto<span class=\"token punctuation\">.</span><span class=\"token function\">getAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            soapHeaderElement<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"locale\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTextNode</span><span class=\"token punctuation\">(</span>authDto<span class=\"token punctuation\">.</span><span class=\"token function\">getLocale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            soapHeaderElement<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"timeZone\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTextNode</span><span class=\"token punctuation\">(</span>authDto<span class=\"token punctuation\">.</span><span class=\"token function\">getTimezone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span>soapHeaderElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">//设置字符编码</span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setEncodingStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CharEncoding</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//设置返回值类型</span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">XSD_STRING</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        call.setReturnType(XMLType.SOAP_ARRAY);</span>\n        <span class=\"token comment\">// 设置具体调用的方法名 // WSDL里面描述的接口名称</span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setOperationName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>targetNameSpace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        call<span class=\"token punctuation\">.</span><span class=\"token function\">setUseSOAPAction</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 文件流</span>\ncall<span class=\"token punctuation\">.</span><span class=\"token function\">addParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>targetNameSpace<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOAP_BASE64BINARY</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParameterMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncall<span class=\"token punctuation\">.</span><span class=\"token function\">addParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>targetNameSpace<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">XSD_STRING</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParameterMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token class-name\">Object</span> returnData <span class=\"token operator\">=</span> call<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>paramValues<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2021/02/23/Spring-AOP/",
            "url": "https://gyoliu.github.io/2021/02/23/Spring-AOP/",
            "title": "Spring AOP",
            "date_published": "2021-02-23T02:06:35.000Z",
            "content_html": "<h3 id=\"AOP-概念\"><a href=\"#AOP-概念\" class=\"headerlink\" title=\"AOP 概念\"></a>AOP 概念</h3><ul>\n<li>Aspect：<ul>\n<li>Aspect 声明类似于 Java 中的类声明，在 Aspect 中会包含着一些 Pointcut 以及相应的 Advice。</li>\n</ul>\n</li>\n<li>Joint point：<ul>\n<li>表示在程序中明确定义的点，典型的包括方法调用，对类成员的访问以及异常处理程序块的执行等等，它自身还可以嵌套其它 joint point。</li>\n</ul>\n</li>\n<li>Pointcut：<ul>\n<li>表示一组 joint point，这些 joint point 或是通过逻辑关系组合起来，或是通过通配、正则表达式等方式集中起来，它定义了相应的 Advice 将要发生的地方。</li>\n</ul>\n</li>\n<li>Advice：<ul>\n<li>Advice 定义了在 pointcut 里面定义的程序点具体要做的操作，它通过 before、after 和 around 来区别是在每个 joint point 之前、之后还是代替执行的代码。</li>\n</ul>\n</li>\n<li>Advice 的类型<ul>\n<li>before advice, 在 join point 前被执行的 advice. 虽然 before advice 是在 join point 前被执行, 但是它并不能够阻止 join point 的执行, 除非发生了异常(即我们在 before advice 代码中, 不能人为地决定是否继续执行 join point 中的代码)</li>\n<li>after return advice, 在一个 join point 正常返回后执行的 advice</li>\n<li>after throwing advice, 当一个 join point 抛出异常后执行的 advice</li>\n<li>after(final) advice, 无论一个 join point 是正常退出还是发生了异常, 都会被执行的 advice.</li>\n<li>around advice, 在 join point 前和 joint point 退出后都执行的 advice. 这个是最常用的 advice.</li>\n<li>introduction，introduction可以为原有的对象增加新的属性和方法。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Spring-AOP-源码\"><a href=\"#Spring-AOP-源码\" class=\"headerlink\" title=\"Spring AOP 源码\"></a>Spring AOP 源码</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">[</span>源码解读<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>zhuanlan<span class=\"token punctuation\">.</span>zhihu<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>p<span class=\"token operator\">/</span><span class=\"token number\">44094896</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token number\">1.</span> <span class=\"token class-name\">AbstractAutowireCapableBeanFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> beanClass<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> \n<span class=\"token number\">2.</span> <span class=\"token function\">doCreateBean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> beanName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">RootBeanDefinition</span> mbd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> \n<span class=\"token number\">3.</span> <span class=\"token function\">getEarlyBeanReference</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> beanName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RootBeanDefinition</span> mbd<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> bean<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> \n<span class=\"token number\">4.</span> <span class=\"token class-name\">AbstractAutoProxyCreator</span><span class=\"token punctuation\">.</span><span class=\"token function\">getEarlyBeanReference</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> bean<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> beanName<span class=\"token punctuation\">)</span>  <span class=\"token operator\">-></span> \n<span class=\"token number\">5.</span> <span class=\"token function\">wrapIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> bean<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> beanName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> cacheKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> \n<span class=\"token number\">6.</span> <span class=\"token function\">shouldSkip</span><span class=\"token punctuation\">(</span>bean<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> beanName<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">findCandidateAdvisors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">7.</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Advisor</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token annotation punctuation\">@Aspect</span> <span class=\"token comment\">// 表示的是切面</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderImageAop</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 在切面中定义的切点 （Pointcut）</span>\n<span class=\"token comment\">// 其中 ButtonBusinessService.process 表示的是连接点 （Joint point）</span>\n    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* hk.com.cre.process.workflow.button.ButtonBusinessService.process(..))\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pointcut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 增强（Advice） 这些代码会植入到 ButtonBusinessService 的代理类中</span>\n<span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointcut()\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">doAround</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> proceedingJoinPoint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token class-name\">ButtonBusinessServicePoxy</span> 类\n其中有个 invoke 方法执行的就是 具体类的 <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 方法\n<span class=\"token annotation punctuation\">@Before</span> 就是先执行 在调用 具体的 invoke   源码类：<span class=\"token class-name\">MethodBeforeAdviceAdapter</span>\n\n如果是 <span class=\"token annotation punctuation\">@Around</span> proceedingJoinPoint<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 这个就是具体类的方法\n\n<span class=\"token comment\">// 源码查看 org.springframework.aop 下面的类</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2020/12/18/hibernate-cache-error/",
            "url": "https://gyoliu.github.io/2020/12/18/hibernate-cache-error/",
            "title": "记一个hibernate和redis缓存引起的错误",
            "date_published": "2020-12-17T16:50:55.000Z",
            "content_html": "<h3 id=\"错误现象\"><a href=\"#错误现象\" class=\"headerlink\" title=\"错误现象\"></a>错误现象</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span></span>LazyInitializationException</span><span class=\"token operator\">:</span> failed <span class=\"token keyword\">to</span> <span class=\"token namespace\">lazily</span> initialize a collection<span class=\"token punctuation\">,</span> could not initialize proxy <span class=\"token operator\">-</span> no <span class=\"token class-name\">Session</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractPersistentCollection</span><span class=\"token punctuation\">.</span><span class=\"token function\">throwLazyInitializationException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractPersistentCollection</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">587</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractPersistentCollection</span><span class=\"token punctuation\">.</span><span class=\"token function\">withTemporarySessionIfNeeded</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractPersistentCollection</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">204</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>AbstractPersistentCollection</span><span class=\"token punctuation\">.</span><span class=\"token function\">readSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AbstractPersistentCollection</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">148</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>PersistentBag</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersistentBag</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">261</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>databind<span class=\"token punctuation\">.</span>ser<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">.</span></span>CollectionSerializer</span><span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CollectionSerializer</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">102</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>databind<span class=\"token punctuation\">.</span>ser<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">.</span></span>CollectionSerializer</span><span class=\"token punctuation\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CollectionSerializer</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>databind<span class=\"token punctuation\">.</span>ser<span class=\"token punctuation\">.</span></span>BeanPropertyWriter</span><span class=\"token punctuation\">.</span><span class=\"token function\">serializeAsField</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanPropertyWriter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">704</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>databind<span class=\"token punctuation\">.</span>ser<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">.</span></span>BeanSerializerBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">serializeFields</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanSerializerBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">690</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token number\">76</span> common frames omitted<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a>原因分析</h3><p>导致这个的原因是因为redis中缓存了查询的数据：<br>使用@Cacheable 注解，Redis数据存储如下：</p>\n<blockquote>\n<p>{“@class”:”hk.com.cre.process.basic.dto.SrmcfgProcessDto”,”serviceItemRels”:[“org.hibernate.collection.internal.PersistentBag”,[]],”cChrDataSource”:null}</p>\n</blockquote>\n<blockquote>\n<p>这里有意思的是 org.hibernate.collection.internal.PersistentBag 当redis反序列这个类时，是没有当前hibernate session的，在readSize()中会调用 withTemporarySessionIfNeeded，这个方法是其中的关键点是 allowLoadOutsideTransaction，如果这个为 true 是会开启一个 readOnly 的事物去查询数据的，但是redis实例化 PersistentBag 只会调用无参构造函数来实例化，就导致这个 allowLoadOutsideTransaction 一直是false</p>\n</blockquote>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2020/12/07/Feign-Different-Bean-Question/",
            "url": "https://gyoliu.github.io/2020/12/07/Feign-Different-Bean-Question/",
            "title": "Feign不同服务的bean 如何不重复",
            "date_published": "2020-12-06T16:43:54.000Z",
            "content_html": "<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>项目中使用了 Feign 组件，指定 Fallback 时需要这个类是在spring bean ,使用 @Component 标记，类名为 ATest.class ，使用 @Component 注解生成的bean name 是类名第一个字母小写的，也就是 aTest。这时同事使用了 @Bean 注解 标注下面的方法生成bean , public xxx aTest(){}。@Bean 生成 bean 的规则是使用的方法名称，也是 aTest 。</p>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>有趣的问题就来了，这时生成的都是 aTest ，spring是怎么处理的？在同一个项目中，bean name 是不允许重复的，启动会报错。但是使用的 Feign 组件，涉及到各个微服务的相互调用，Feign 是怎么隔离不同服务之间的 bean 的呢？不同微服务 bean name 相同会导致什么问题？</p>\n<h3 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h3><p>Feign 其中有 FeignContext extends NamedContextFactory ，其中使用了 map 结构来存储不同的 applicationContext ，每个服务都有一个子容器，首先通过服务名获取子容器，再根据Class获取到这个容器内的bean</p>\n<blockquote>\n<p>Map&lt;String, AnnotationConfigApplicationContext&gt; contexts &#x3D; new ConcurrentHashMap();</p>\n</blockquote>\n<h3 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>contexts<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">synchronized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>contexts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>contexts<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 没有则先创建 context</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>contexts<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>contexts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">HystrixTargeter</span>  中获取 fallback 实例\n<span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">getFromContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fallbackMechanism<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> feignClientName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FeignContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> beanType<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> targetType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 根据 feignClientName 获取不同的 bean </span>\n        <span class=\"token class-name\">Object</span> fallbackInstance <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span>feignClientName<span class=\"token punctuation\">,</span> beanType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fallbackInstance <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No \"</span> <span class=\"token operator\">+</span> fallbackMechanism <span class=\"token operator\">+</span> <span class=\"token string\">\" instance of type %s found for feign client %s\"</span><span class=\"token punctuation\">,</span> beanType<span class=\"token punctuation\">,</span> feignClientName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>targetType<span class=\"token punctuation\">.</span><span class=\"token function\">isAssignableFrom</span><span class=\"token punctuation\">(</span>beanType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Incompatible \"</span> <span class=\"token operator\">+</span> fallbackMechanism <span class=\"token operator\">+</span> <span class=\"token string\">\" instance. Fallback/fallbackFactory of type %s is not assignable to %s for feign client %s\"</span><span class=\"token punctuation\">,</span> beanType<span class=\"token punctuation\">,</span> targetType<span class=\"token punctuation\">,</span> feignClientName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> fallbackInstance<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2020/11/10/NullPointerException-notifyAttributeAssigned/",
            "url": "https://gyoliu.github.io/2020/11/10/NullPointerException-notifyAttributeAssigned/",
            "title": "在 Web 程序中使用多线程处理任务，RequestContextHolder notifyAttributeAssigned NullPointerException 异常",
            "date_published": "2020-11-10T09:10:26.000Z",
            "content_html": "<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>在 web 程序中使用多线程处理任务报如下错误</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>NullPointerException</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span></span>Request</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyAttributeAssigned</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1528</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span></span>Request</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1514</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span></span>RequestFacade</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RequestFacade</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">540</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span>ServletRequestWrapper</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequestWrapper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">252</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>SessionRepositoryFilter</span>$<span class=\"token class-name\">SessionRepositoryRequestWrapper</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionRepositoryFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">264</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>SessionRepositoryFilter</span>$<span class=\"token class-name\">SessionRepositoryRequestWrapper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionRepositoryFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">375</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>SessionRepositoryFilter</span>$<span class=\"token class-name\">SessionRepositoryRequestWrapper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionRepositoryFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">390</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>SessionRepositoryFilter</span>$<span class=\"token class-name\">SessionRepositoryRequestWrapper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionRepositoryFilter</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">217</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span>HttpServletRequestWrapper</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequestWrapper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>SessionUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionUtil</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">127</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>SessionUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSessionId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionUtil</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">131</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">hk<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">.</span>cre<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span>FeignRequestInterceptor</span><span class=\"token punctuation\">.</span>lambda$headerInterceptor$<span class=\"token function\">80</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FeignRequestInterceptor</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">feign<span class=\"token punctuation\">.</span></span>SynchronousMethodHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">targetRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SynchronousMethodHandler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">158</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">feign<span class=\"token punctuation\">.</span></span>SynchronousMethodHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">executeAndDecode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SynchronousMethodHandler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">88</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">feign<span class=\"token punctuation\">.</span></span>SynchronousMethodHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SynchronousMethodHandler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">76</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">feign<span class=\"token punctuation\">.</span>hystrix<span class=\"token punctuation\">.</span></span>HystrixInvocationHandler</span>$<span class=\"token number\">1.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HystrixInvocationHandler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">108</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>netflix<span class=\"token punctuation\">.</span>hystrix<span class=\"token punctuation\">.</span></span>HystrixCommand</span>$<span class=\"token number\">2.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HystrixCommand</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">301</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>netflix<span class=\"token punctuation\">.</span>hystrix<span class=\"token punctuation\">.</span></span>HystrixCommand</span>$<span class=\"token number\">2.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HystrixCommand</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">297</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">rx<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>operators<span class=\"token punctuation\">.</span></span>OnSubscribeDefer</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OnSubscribeDefer</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">46</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">关键类导致：\n<span class=\"token class-name\">RequestAttributes</span> requestAttributes <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SessionRepositoryFilter&lt;S>.SessionRepositoryRequestWrapper</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">setRequestAttributes</span><span class=\"token punctuation\">(</span>requestAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 之后在想通过这个获取 request 里面的东西已经是获取不到了</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequestAttributes</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SessionRepositoryFilter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">.</span>SessionRepositoryRequestWrapper<span class=\"token punctuation\">.</span>HttpSessionWrapper <span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">// 获取时每次都新创建 session</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 之后会调用</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentSession</span><span class=\"token punctuation\">(</span>currentSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 最终会调用 notifyAttributeAssigned()</span>\n<span class=\"token comment\">// 在这个请求里面 context 为空 导致上面的异常</span>\n<span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n第二种写法\n<span class=\"token class-name\">RequestAttributes</span> requestAttributes <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true 设置子线程共享</span>\n<span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">setRequestAttributes</span><span class=\"token punctuation\">(</span>requestAttributes<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"事故测试的方法：\"><a href=\"#事故测试的方法：\" class=\"headerlink\" title=\"事故测试的方法：\"></a>事故测试的方法：</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">@RequestMapping(value &#x3D; &quot;&#x2F;help&#x2F;demo&quot;, method &#x3D; RequestMethod.GET, produces &#x3D; MediaType.APPLICATION_JSON_UTF8_VALUE)\n    public Object demo() &#123;\n        RequestAttributes requestAttributes &#x3D; RequestContextHolder.getRequestAttributes();\n        RequestContextHolder.setRequestAttributes(requestAttributes,true);\n        new Thread(() -&gt; &#123;\n            try &#123;\n&#x2F;&#x2F; 这里故意让主线程结束，下面就会获取不到值\n                Thread.sleep(10000);\n            &#125; catch (InterruptedException e) &#123;\n                e.printStackTrace();\n            &#125;\n            &#x2F;&#x2F; RequestContextHolder.setRequestAttributes(requestAttributes);\n            HttpServletRequest request &#x3D; ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n&#x2F;&#x2F; 获取参数或者 session 都需要主线程不结束的前提下才能获取到\n&#x2F;&#x2F; 当主请求结束，子线程里面的 request 对象也都会清除数据 .\n&#x2F;&#x2F; 当主请求结束 ，那么 Context context &#x3D; this.getContext(); 也就是 null 了。\n            request.getParameter(&quot;test&quot;)\n        &#125;).start();\n        try &#123;\n            Thread.sleep(20000);\n        &#125; catch (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125;\n&#x2F;&#x2F; try &#123;\n &#x2F;&#x2F;               Thread.sleep(20000);\n &#x2F;&#x2F;           &#125; catch (InterruptedException e) &#123;\n &#x2F;&#x2F;               e.printStackTrace();\n &#x2F;&#x2F;           &#125;\n        return &quot;demo&quot;;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"源码解读：\"><a href=\"#源码解读：\" class=\"headerlink\" title=\"源码解读：\"></a>源码解读：</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 在 DispatcherServlet extends FrameworkServlet 父类中的源码</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span> startTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Throwable</span> failureCause <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LocaleContext</span> previousLocaleContext <span class=\"token operator\">=</span> <span class=\"token class-name\">LocaleContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLocaleContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LocaleContext</span> localeContext <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildLocaleContext</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">RequestAttributes</span> previousAttributes <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ServletRequestAttributes</span> requestAttributes <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildRequestAttributes</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> previousAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">WebAsyncManager</span> asyncManager <span class=\"token operator\">=</span> <span class=\"token class-name\">WebAsyncUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAsyncManager</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        asyncManager<span class=\"token punctuation\">.</span><span class=\"token function\">registerCallableInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FrameworkServlet</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FrameworkServlet<span class=\"token punctuation\">.</span>RequestBindingInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initContextHolders</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> localeContext<span class=\"token punctuation\">,</span> requestAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doService</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletException</span> var17<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            failureCause <span class=\"token operator\">=</span> var17<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> var17<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> var18<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            failureCause <span class=\"token operator\">=</span> var18<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> var18<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> var19<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            failureCause <span class=\"token operator\">=</span> var19<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NestedServletException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Request processing failed\"</span><span class=\"token punctuation\">,</span> var19<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n\t <span class=\"token comment\">// 重置 previousAttributes</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetContextHolders</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> previousLocaleContext<span class=\"token punctuation\">,</span> previousAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>requestAttributes <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                requestAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">requestCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>failureCause <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Could not complete request\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">)</span>failureCause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>asyncManager<span class=\"token punctuation\">.</span><span class=\"token function\">isConcurrentHandlingStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Leaving response open for concurrent processing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successfully completed request\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">publishRequestHandledEvent</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> startTime<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">)</span>failureCause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。\"><a href=\"#引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。\" class=\"headerlink\" title=\"引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。\"></a>引发的问题：这样的话必须等待子线程处理完成，主线程才能结束，这样又变成同步执行了，异步失去了意义。</h3><h2 id=\"多线程如何传递-request-参数或者-session-？\"><a href=\"#多线程如何传递-request-参数或者-session-？\" class=\"headerlink\" title=\"多线程如何传递 request 参数或者 session ？\"></a>多线程如何传递 request 参数或者 session ？</h2><ol>\n<li>在主线程中获取到需要的信息，使用参数传递到子线程中</li>\n<li>包装 request 将数据复制一份在内存中，使用 ThreadLocal</li>\n</ol>\n",
            "tags": [
                "Java"
            ]
        }
    ]
}