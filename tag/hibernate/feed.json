{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gyo • All posts by \"hibernate\" tag",
    "description": "Gyo的博客",
    "home_page_url": "https://gyoliu.github.io",
    "items": [
        {
            "id": "https://gyoliu.github.io/2022/09/23/hibernate-query-result/",
            "url": "https://gyoliu.github.io/2022/09/23/hibernate-query-result/",
            "title": "hibernate原生查询，结果集映射源码阅读",
            "date_published": "2022-09-23T04:56:46.000Z",
            "content_html": "<h1 id=\"1-hibernate-版本-5-4-21-Final\"><a href=\"#1-hibernate-版本-5-4-21-Final\" class=\"headerlink\" title=\"1.hibernate 版本 5.4.21.Final\"></a>1.hibernate 版本 5.4.21.Final</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">SQLQuery</span> nativeQuery <span class=\"token operator\">=</span> entityManager<span class=\"token punctuation\">.</span><span class=\"token function\">createNativeQuery</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLQuery</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnativeQuery<span class=\"token punctuation\">.</span><span class=\"token function\">setResultTransformer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanResultTransformer</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-代码执行栈\"><a href=\"#2-代码执行栈\" class=\"headerlink\" title=\"2.代码执行栈\"></a>2.代码执行栈</h1><p><img src=\"/img/hibernate-query-result.png\" alt=\"hibernate-query-result.png\"></p>\n<h1 id=\"3-org-hibernate-loader-Loader\"><a href=\"#3-org-hibernate-loader-Loader\" class=\"headerlink\" title=\"3.org.hibernate.loader.Loader\"></a>3.org.hibernate.loader.Loader</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span> <span class=\"token function\">listIgnoreQueryCache</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SharedSessionContractImplementor</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">QueryParameters</span> queryParameters<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResultList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doList</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> queryParameters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> queryParameters<span class=\"token punctuation\">.</span><span class=\"token function\">getResultTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n# 其中 <span class=\"token keyword\">this</span> 指向的是 <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>hql<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>classic<span class=\"token punctuation\">.</span></span>QueryTranslatorImpl</span>\n\n<span class=\"token comment\">/**\nResultTransformer resultTransformer 是在查询时指定的\n核心：Object result = holderInstantiator.instantiate(row);\n*/</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">List</span> <span class=\"token function\">getResultList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span> results<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ResultTransformer</span> resultTransformer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">QueryException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">HolderInstantiator</span> holderInstantiator <span class=\"token operator\">=</span> <span class=\"token class-name\">HolderInstantiator</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHolderInstantiator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultTransformer</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> resultTransformer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReturnAliasesForTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>holderInstantiator<span class=\"token punctuation\">.</span><span class=\"token function\">isRequired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> results<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> row <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Object</span> result <span class=\"token operator\">=</span> holderInstantiator<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                results<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">return</span> resultTransformer<span class=\"token punctuation\">.</span><span class=\"token function\">transformList</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"4-调用指定的-ResultTransformer\"><a href=\"#4-调用指定的-ResultTransformer\" class=\"headerlink\" title=\"4.调用指定的 ResultTransformer\"></a>4.调用指定的 ResultTransformer</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>hql<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span></span>HolderInstantiator</span>\n\n<span class=\"token comment\">// 调用 ResultTransformer 的 transformTuple方法</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transformer <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> row <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">.</span><span class=\"token function\">transformTuple</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getQueryReturnAliases</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"5-最后\"><a href=\"#5-最后\" class=\"headerlink\" title=\"5.最后\"></a>5.最后</h1><p>除了可以自定义 ResultTransformer 外，还有个小技巧<br>设置数据库方言：<br>spring.jpa.properties.hibernate.dialect&#x3D;xxx.MySQL8027Dialect<br>自定义方言时指定数据类型映射：<br>&#x2F;&#x2F; 将 bitint 映射成 long<br>registerColumnType(Types.BIGINT, StandardBasicTypes.LONG.getName());<br>registerHibernateType(Types.BIGINT,StandardBasicTypes.LONG.getName());</p>\n<h1 id=\"hibernate-配置项\"><a href=\"#hibernate-配置项\" class=\"headerlink\" title=\"hibernate 配置项\"></a>hibernate 配置项</h1><blockquote>\n<p>org.hibernate.jpa.AvailableSettings<br>org.hibernate.cfg.AvailableSettings<br>org.hibernate.cfg.Environment</p>\n</blockquote>\n",
            "tags": [
                "Java",
                "hibernate"
            ]
        }
    ]
}