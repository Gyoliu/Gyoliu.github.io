{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gyo • All posts by \"selinux\" tag",
    "description": "Gyo的博客",
    "home_page_url": "https://gyoliu.github.io",
    "items": [
        {
            "id": "https://gyoliu.github.io/2025/06/25/nginx-install-error-collect/",
            "url": "https://gyoliu.github.io/2025/06/25/nginx-install-error-collect/",
            "title": "nginx-install-error-collect",
            "date_published": "2025-06-25T03:51:44.000Z",
            "content_html": "<h2 id=\"1-无法读取-ssl-密钥\"><a href=\"#1-无法读取-ssl-密钥\" class=\"headerlink\" title=\"1. 无法读取 ssl 密钥\"></a>1. 无法读取 ssl 密钥</h2><blockquote>\n<p>2025&#x2F;06&#x2F;25 11:41:21 [emerg] 8982#8982: cannot load certificate “&#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;star_crclogistics_com.pem”: BIO_new_file() failed (SSL: error:0200100D:system library:fopen:Permission denied:fopen(‘&#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F;star_crclogistics_com.pem’,’r’) error:2006D002:BIO routines:BIO_new_file:system lib)</p>\n</blockquote>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">问题1：SELinux 阻止了正常操作\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"avc:.*denied\"</span> /var/log/audit/audit.log\n\n解决方案：\n    查看状态： sestatus <span class=\"token parameter variable\">-v</span>\n    首先确认是否是 SELinux 导致的问题：\n    <span class=\"token function\">grep</span> <span class=\"token string\">\"avc:\"</span> /var/log/audit/audit.log\n    如果是，可以临时设置为 permissive 模式测试：\n    <span class=\"token function\">sudo</span> setenforce <span class=\"token number\">0</span>\n    永久解决方案是调整 SELinux 策略或修改文件上下文\n\n<span class=\"token punctuation\">[</span>root@scdp-ng-pro-01 nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -lrtZ /etc/nginx/ssl/</span>\n-rwxrwxrwx. root root unconfined_u:object_r:user_home_t:s0 star_crclogistics_com.key\n-rwxrwxrwx. root root unconfined_u:object_r:user_home_t:s0 star_crclogistics_com.pem\n\n<span class=\"token comment\"># 修复文件权限</span>\n<span class=\"token punctuation\">[</span>root@scdp-ng-pro-01 nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># restorecon -v -R /etc/nginx/ssl</span>\nrestorecon reset /etc/nginx/ssl context unconfined_u:object_r:user_home_t:s0-<span class=\"token operator\">></span>unconfined_u:object_r:httpd_config_t:s0\nrestorecon reset /etc/nginx/ssl/star_crclogistics_com.key context unconfined_u:object_r:user_home_t:s0-<span class=\"token operator\">></span>unconfined_u:object_r:httpd_config_t:s0\nrestorecon reset /etc/nginx/ssl/star_crclogistics_com.pem context unconfined_u:object_r:user_home_t:s0-<span class=\"token operator\">></span>unconfined_u:object_r:httpd_config_t:s0\n<span class=\"token punctuation\">[</span>root@scdp-ng-pro-01 nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># </span>\n<span class=\"token punctuation\">[</span>root@scdp-ng-pro-01 nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -lrtZ /etc/nginx/ssl/</span>\n-rwxrwxrwx. root root unconfined_u:object_r:httpd_config_t:s0 star_crclogistics_com.key\n-rwxrwxrwx. root root unconfined_u:object_r:httpd_config_t:s0 star_crclogistics_com.pem\n\n\n<span class=\"token comment\">#添加一个mysql数据目录</span>\nsemanage fcontext <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> mysqld_db_t “/disk1/data<span class=\"token punctuation\">(</span>/.*<span class=\"token punctuation\">)</span>?”\n<span class=\"token comment\"># 加载这个目录 restorecon，这个命令的作用就是把文件的安全上下文恢复成默认的安全上下文</span>\nrestorecon <span class=\"token parameter variable\">-Rv</span> /data\n\n\n<span class=\"token function\">sudo</span> semanage port <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> http_port_t <span class=\"token parameter variable\">-p</span> tcp <span class=\"token number\">8400</span>\n使用<span class=\"token variable\"><span class=\"token variable\">`</span>semanage port <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-t</span> mysql_port_t <span class=\"token parameter variable\">-p</span> tcp <span class=\"token number\">3306</span><span class=\"token variable\">`</span></span>命令添加MySQL默认端口到SELinux策略，同时确保数据目录正确标注，执行\n<span class=\"token comment\"># 安全上下文的修改</span>\n<span class=\"token variable\"><span class=\"token variable\">`</span>chcon <span class=\"token parameter variable\">-R</span> <span class=\"token parameter variable\">-t</span> mysqld_db_t /var/lib/mysql<span class=\"token variable\">`</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "Default",
                "nginx",
                "SELinux"
            ]
        }
    ]
}