{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gyo • All posts by \"default\" tag",
    "description": "Gyo的博客",
    "home_page_url": "https://gyoliu.github.io",
    "items": [
        {
            "id": "https://gyoliu.github.io/2025/04/16/linux-performance-optimization/",
            "url": "https://gyoliu.github.io/2025/04/16/linux-performance-optimization/",
            "title": "linux performance optimization",
            "date_published": "2025-04-16T15:06:58.000Z",
            "content_html": "<h3 id=\"模拟一个-CPU-使用率-100-的场景：\"><a href=\"#模拟一个-CPU-使用率-100-的场景：\" class=\"headerlink\" title=\"模拟一个 CPU 使用率 100% 的场景：\"></a>模拟一个 CPU 使用率 100% 的场景：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stress <span class=\"token parameter variable\">--cpu</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">--timeout</span> <span class=\"token number\">600</span>\n<span class=\"token comment\"># 间隔 5 秒后输出一组数据</span>\npidstat <span class=\"token parameter variable\">-u</span> <span class=\"token number\">5</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"模拟-I-O-压力，即不停地执行-sync：\"><a href=\"#模拟-I-O-压力，即不停地执行-sync：\" class=\"headerlink\" title=\"模拟 I&#x2F;O 压力，即不停地执行 sync：\"></a>模拟 I&#x2F;O 压力，即不停地执行 sync：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stress <span class=\"token parameter variable\">-i</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">--timeout</span> <span class=\"token number\">600</span>\n<span class=\"token comment\"># 间隔 5 秒后输出一组数据</span>\nmpstat <span class=\"token parameter variable\">-P</span> ALL <span class=\"token number\">5</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 间隔 5 秒后输出一组数据，-u 表示 CPU 指标</span>\npidstat <span class=\"token parameter variable\">-u</span> <span class=\"token number\">5</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"模拟的是-8-个进程：\"><a href=\"#模拟的是-8-个进程：\" class=\"headerlink\" title=\"模拟的是 8 个进程：\"></a>模拟的是 8 个进程：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stress <span class=\"token parameter variable\">-c</span> <span class=\"token number\">8</span> <span class=\"token parameter variable\">--timeout</span> <span class=\"token number\">600</span>\n<span class=\"token comment\"># 间隔 5 秒后输出一组数据，-u 表示 CPU 指标</span>\npidstat <span class=\"token parameter variable\">-u</span> <span class=\"token number\">5</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查询系统的上下文切换情况\"><a href=\"#查询系统的上下文切换情况\" class=\"headerlink\" title=\"查询系统的上下文切换情况\"></a>查询系统的上下文切换情况</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 每隔 5 秒输出 1 组数据</span>\n$ <span class=\"token function\">vmstat</span> <span class=\"token number\">5</span>\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   <span class=\"token function\">free</span>   buff  cache   si   so    bi    bo   <span class=\"token keyword\">in</span>   cs us sy <span class=\"token function\">id</span> wa st\n <span class=\"token number\">0</span>  <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">7005360</span>  <span class=\"token number\">91564</span> <span class=\"token number\">818900</span>    <span class=\"token number\">0</span>    <span class=\"token number\">0</span>     <span class=\"token number\">0</span>     <span class=\"token number\">0</span>   <span class=\"token number\">25</span>   <span class=\"token number\">33</span>  <span class=\"token number\">0</span>  <span class=\"token number\">0</span> <span class=\"token number\">100</span>  <span class=\"token number\">0</span> \n\ncs（context switch）是每秒上下文切换的次数。\nin（interrupt）则是每秒中断的次数。\nr（Running or Runnable）是就绪队列的长度，也就是正在运行和等待 CPU 的进程数。\nb（Blocked）则是处于不可中断睡眠状态的进程数。\n\n<span class=\"token function\">vmstat</span> 只给出了系统总体的上下文切换情况，要想查看每个进程的详细情况，就需要使用我们前面提到过的 pidstat 了。给它加上 <span class=\"token parameter variable\">-w</span> 选项，你就可以查看每个进程上下文切换的情况了。\n<span class=\"token comment\"># 每隔 5 秒输出 1 组数据</span>\n$ pidstat <span class=\"token parameter variable\">-w</span> <span class=\"token number\">5</span>\n\nLinux <span class=\"token number\">4.15</span>.0 <span class=\"token punctuation\">(</span>ubuntu<span class=\"token punctuation\">)</span>  09/23/18  _x86_64_  <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> CPU<span class=\"token punctuation\">)</span> \n08:18:26      <span class=\"token environment constant\">UID</span>       PID   cswch/s nvcswch/s  Command\n08:18:31        <span class=\"token number\">0</span>         <span class=\"token number\">1</span>      <span class=\"token number\">0.20</span>      <span class=\"token number\">0.00</span>  systemd\n08:18:31        <span class=\"token number\">0</span>         <span class=\"token number\">8</span>      <span class=\"token number\">5.40</span>      <span class=\"token number\">0.00</span>  rcu_sched\n\n这个结果中有两列内容是我们的重点关注对象。\n一个是 cswch ，表示每秒自愿上下文切换（voluntary context switches）的次数，\n另一个则是 nvcswch ，表示每秒非自愿上下文切换（non voluntary context switches）的次数。\n\n所谓自愿上下文切换，是指进程无法获取所需资源，导致的上下文切换。比如说， I/O、内存等系统资源不足时，就会发生自愿上下文切换。\n而非自愿上下文切换，则是指进程由于时间片已到等原因，被系统强制调度，进而发生的上下文切换。比如说，大量进程都在争抢 CPU 时，就容易发生非自愿上下文切换。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"apt-install-sysbench-sysstat\"><a href=\"#apt-install-sysbench-sysstat\" class=\"headerlink\" title=\"apt install sysbench sysstat\"></a>apt install sysbench sysstat</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> docker.io sysstat linux-tools-common apache2-utils\n<span class=\"token comment\"># 以 10 个线程运行 5 分钟的基准测试，模拟多线程切换的问题</span>\n$ sysbench <span class=\"token parameter variable\">--threads</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> --max-time<span class=\"token operator\">=</span><span class=\"token number\">300</span> threads run\n\n接着，在第二个终端运行 <span class=\"token function\">vmstat</span> ，观察上下文切换情况：\n\n<span class=\"token comment\"># 每隔 1 秒输出 1 组数据（需要 Ctrl+C 才结束）</span>\n$ <span class=\"token function\">vmstat</span> <span class=\"token number\">1</span>\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   <span class=\"token function\">free</span>   buff  cache   si   so    bi    bo   <span class=\"token keyword\">in</span>   cs us sy <span class=\"token function\">id</span> wa st\n <span class=\"token number\">6</span>  <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">6487428</span> <span class=\"token number\">118240</span> <span class=\"token number\">1292772</span>    <span class=\"token number\">0</span>    <span class=\"token number\">0</span>     <span class=\"token number\">0</span>     <span class=\"token number\">0</span> <span class=\"token number\">9019</span> <span class=\"token number\">1398830</span> <span class=\"token number\">16</span> <span class=\"token number\">84</span>  <span class=\"token number\">0</span>  <span class=\"token number\">0</span>  <span class=\"token number\">0</span>\n <span class=\"token number\">8</span>  <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">6487428</span> <span class=\"token number\">118240</span> <span class=\"token number\">1292772</span>    <span class=\"token number\">0</span>    <span class=\"token number\">0</span>     <span class=\"token number\">0</span>     <span class=\"token number\">0</span> <span class=\"token number\">10191</span> <span class=\"token number\">1392312</span> <span class=\"token number\">16</span> <span class=\"token number\">84</span>  <span class=\"token number\">0</span>  <span class=\"token number\">0</span>  <span class=\"token number\">0</span>\n\nr 列：就绪队列的长度已经到了 <span class=\"token number\">8</span>，远远超过了系统 CPU 的个数 <span class=\"token number\">2</span>，所以肯定会有大量的 CPU 竞争。\nus（user）和 sy（system）列：这两列的 CPU 使用率加起来上升到了 <span class=\"token number\">100</span>%，其中系统 CPU 使用率，也就是 sy 列高达 <span class=\"token number\">84</span>%，说明 CPU 主要是被内核占用了。\n<span class=\"token keyword\">in</span> 列：中断次数也上升到了 <span class=\"token number\">1</span> 万左右，说明中断处理也是个潜在的问题。\n\n<span class=\"token comment\"># 每隔 1 秒输出 1 组数据（需要 Ctrl+C 才结束）</span>\n<span class=\"token comment\"># -w 参数表示输出进程切换指标，而 -u 参数则表示输出 CPU 使用指标</span>\n$ pidstat <span class=\"token parameter variable\">-wt</span> <span class=\"token parameter variable\">-u</span> <span class=\"token number\">1</span>\n08:06:33      <span class=\"token environment constant\">UID</span>       PID    %usr %system  %guest   %wait    %CPU   CPU  Command\n08:06:34        <span class=\"token number\">0</span>     <span class=\"token number\">10488</span>   <span class=\"token number\">30.00</span>  <span class=\"token number\">100.00</span>    <span class=\"token number\">0.00</span>    <span class=\"token number\">0.00</span>  <span class=\"token number\">100.00</span>     <span class=\"token number\">0</span>  sysbench\n08:06:34        <span class=\"token number\">0</span>     <span class=\"token number\">26326</span>    <span class=\"token number\">0.00</span>    <span class=\"token number\">1.00</span>    <span class=\"token number\">0.00</span>    <span class=\"token number\">0.00</span>    <span class=\"token number\">1.00</span>     <span class=\"token number\">0</span>  kworker/u4:2 \n08:06:33      <span class=\"token environment constant\">UID</span>       PID   cswch/s nvcswch/s  Command\n08:06:34        <span class=\"token number\">0</span>         <span class=\"token number\">8</span>     <span class=\"token number\">11.00</span>      <span class=\"token number\">0.00</span>  rcu_sched\n08:06:34        <span class=\"token number\">0</span>        <span class=\"token number\">16</span>      <span class=\"token number\">1.00</span>      <span class=\"token number\">0.00</span>  ksoftirqd/1\n08:06:34        <span class=\"token number\">0</span>       <span class=\"token number\">471</span>      <span class=\"token number\">1.00</span>      <span class=\"token number\">0.00</span>  hv_balloon\n08:06:34        <span class=\"token number\">0</span>      <span class=\"token number\">1230</span>      <span class=\"token number\">1.00</span>      <span class=\"token number\">0.00</span>  iscsid\n08:06:34        <span class=\"token number\">0</span>      <span class=\"token number\">4089</span>      <span class=\"token number\">1.00</span>      <span class=\"token number\">0.00</span>  kworker/1:5\n08:06:34        <span class=\"token number\">0</span>      <span class=\"token number\">4333</span>      <span class=\"token number\">1.00</span>      <span class=\"token number\">0.00</span>  kworker/0:3\n08:06:34        <span class=\"token number\">0</span>     <span class=\"token number\">10499</span>      <span class=\"token number\">1.00</span>    <span class=\"token number\">224.00</span>  pidstat\n08:06:34        <span class=\"token number\">0</span>     <span class=\"token number\">26326</span>    <span class=\"token number\">236.00</span>      <span class=\"token number\">0.00</span>  kworker/u4:2\n08:06:34     <span class=\"token number\">1000</span>     <span class=\"token number\">26784</span>    <span class=\"token number\">223.00</span>      <span class=\"token number\">0.00</span>  sshd\n\n<span class=\"token comment\"># -d 参数表示高亮显示变化的区域</span>\n$ <span class=\"token function\">watch</span> <span class=\"token parameter variable\">-d</span> <span class=\"token function\">cat</span> /proc/interrupts\n           CPU0       CPU1\n<span class=\"token punctuation\">..</span>.\nRES:    <span class=\"token number\">2450431</span>    <span class=\"token number\">5279697</span>   Rescheduling interrupts\n\n碰到上下文切换次数过多的问题时，我们可以借助 <span class=\"token function\">vmstat</span> 、 pidstat 和 /proc/interrupts 等工具，来辅助排查性能问题的根源。\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CPU-使用率过高分析\"><a href=\"#CPU-使用率过高分析\" class=\"headerlink\" title=\"CPU 使用率过高分析\"></a>CPU 使用率过高分析</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">预先安装 docker、sysstat、perf、ab 等工具\n\n$ perf <span class=\"token function\">top</span>\nSamples: <span class=\"token number\">833</span>  of event <span class=\"token string\">'cpu-clock'</span>, Event count <span class=\"token punctuation\">(</span>approx.<span class=\"token punctuation\">)</span>: <span class=\"token number\">97742399</span>\nOverhead  Shared Object       Symbol\n   <span class=\"token number\">7.28</span>%  perf                <span class=\"token punctuation\">[</span>.<span class=\"token punctuation\">]</span> 0x00000000001f78a4\n   <span class=\"token number\">4.72</span>%  <span class=\"token punctuation\">[</span>kernel<span class=\"token punctuation\">]</span>            <span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> vsnprintf\n   <span class=\"token number\">4.32</span>%  <span class=\"token punctuation\">[</span>kernel<span class=\"token punctuation\">]</span>            <span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> module_get_kallsym\n   <span class=\"token number\">3.65</span>%  <span class=\"token punctuation\">[</span>kernel<span class=\"token punctuation\">]</span>            <span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> _raw_spin_unlock_irqrestore\n第一列 Overhead ，是该符号的性能事件在所有采样中的比例，用百分比来表示。\n第二列 Shared ，是该函数或指令所在的动态共享对象（Dynamic Shared Object），如内核、进程名、动态链接库名、内核模块名等。\n第三列 Object ，是动态共享对象的类型。比如 <span class=\"token punctuation\">[</span>.<span class=\"token punctuation\">]</span> 表示用户空间的可执行程序、或者动态链接库，而 <span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> 则表示内核空间。\n最后一列 Symbol 是符号名，也就是函数名。当函数名未知时，用十六进制的地址来表示。\n$ perf record\n$ perf report\n\n\n<span class=\"token comment\"># 并发 10 个请求测试 Nginx 性能，总共测试 100 个请求</span>\n$ ab <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">100</span> http://192.168.0.10:10000/\nThis is ApacheBench, Version <span class=\"token number\">2.3</span> <span class=\"token operator\">&lt;</span><span class=\"token variable\">$Revision</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1706008</span> $<span class=\"token operator\">></span>\nCopyright <span class=\"token number\">1996</span> Adam Twiss, Zeus Technology Ltd, \n<span class=\"token punctuation\">..</span>.\nRequests per second:    <span class=\"token number\">11.63</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">#/sec] (mean)</span>\nTime per request:       <span class=\"token number\">859.942</span> <span class=\"token punctuation\">[</span>ms<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>mean<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">..</span>.\n\n\n$ ab <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10000</span> http://10.240.0.5:10000/\n<span class=\"token number\">1</span>. 运行 <span class=\"token function\">top</span> 命令，并按下数字 <span class=\"token number\">1</span> ，切换到每个 CPU 的使用率,查看那个进程 CPU 高记录 PID\n<span class=\"token number\">2</span>. <span class=\"token comment\"># -g 开启调用关系分析，-p 指定 php-fpm 的进程号 21515</span>\n$ perf <span class=\"token function\">top</span> <span class=\"token parameter variable\">-g</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">21515</span>\n\n<span class=\"token comment\"># 高CPU调用时找不到进程的场景</span>\n第一个原因，进程在不停地崩溃重启，比如因为段错误、配置错误等等，这时，进程在退出后可能又被监控系统自动重启了。\n第二个原因，这些进程都是短时进程，也就是在其他应用内部通过 <span class=\"token builtin class-name\">exec</span> 调用的外面命令。这些命令一般都只运行很短的时间就会结束，你很难用 <span class=\"token function\">top</span> 这种间隔时间比较长的工具发现（上面的案例，我们碰巧发现了）。\n\n方案如下：\n<span class=\"token comment\"># 记录性能事件，等待大约 15 秒后按 Ctrl+C 退出</span>\n$ perf record <span class=\"token parameter variable\">-g</span> \n<span class=\"token comment\"># 查看报告</span>\n$ perf report\n\n\n碰到常规问题无法解释的 CPU 使用率情况时，首先要想到有可能是短时应用导致的问题，比如有可能是下面这两种情况。\n\n第一，应用里直接调用了其他二进制程序，这些程序通常运行时间比较短，通过 <span class=\"token function\">top</span> 等工具也不容易发现。\n第二，应用本身在不停地崩溃重启，而启动过程的资源初始化，很可能会占用相当多的 CPU。\n对于这类进程，我们可以用 pstree 或者 execsnoop 找到它们的父进程，再从父进程所在的应用入手，排查问题的根源。\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/img/linux-cmd-lists.png\"><br><img src=\"/img/linux-cmd-lists1.png\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>",
            "tags": [
                "Default"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2025/04/10/java17jvm-params/",
            "url": "https://gyoliu.github.io/2025/04/10/java17jvm-params/",
            "title": "java17jvm-params",
            "date_published": "2025-04-10T01:08:04.000Z",
            "content_html": "<p>–add-opens&#x3D;java.base&#x2F;java.lang&#x3D;ALL-UNNAMED <br>    -Xms1500m -Xmx1500m <br>    -XX:ReservedCodeCacheSize&#x3D;256m <br>    -XX:InitialCodeCacheSize&#x3D;256m \\<br>    -XX:+UnlockExperimentalVMOptions <br>    -XX:+UseZGC <br>    -XX:ConcGCThreads&#x3D;1 -XX:ParallelGCThreads&#x3D;2 <br>    -XX:ZCollectionInterval&#x3D;30 -XX:ZAllocationSpikeTolerance&#x3D;5 <br>    -XX:+UnlockDiagnosticVMOptions -XX:-ZProactive <br>    -Xlog:safepoint,classhisto*&#x3D;trace,age*,gc*&#x3D;info:file&#x3D;&#x2F;opt&#x2F;gc-%t.log:time,tid,tags:filecount&#x3D;5,filesize&#x3D;50m <br>    -XX:+HeapDumpOnOutOfMemoryError <br>    -XX:HeapDumpPath&#x3D;&#x2F;opt&#x2F;errorDump.hprof</p>\n",
            "tags": [
                "Default"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2025/03/11/mysql%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/",
            "url": "https://gyoliu.github.io/2025/03/11/mysql%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/",
            "title": "mysql主从搭建",
            "date_published": "2025-03-11T01:16:40.000Z",
            "content_html": "<h1 id=\"主服务器配置\"><a href=\"#主服务器配置\" class=\"headerlink\" title=\"主服务器配置\"></a>主服务器配置</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#服务器 id，随意，但要唯一</span>\nserver-id <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  \n<span class=\"token comment\">#二进制文件存放路径</span>\nlog-bin <span class=\"token operator\">=</span> mysql-bin \n<span class=\"token comment\">#参数用于排除自带的数据库。  </span>\nbinlog-ignore-db <span class=\"token operator\">=</span> mysql \nbinlog-ignore-db <span class=\"token operator\">=</span> information_schema\nbinlog-ignore-db <span class=\"token operator\">=</span> performance_schema\n<span class=\"token comment\">#二进制日志格式，建议使用ROW格式以获得更好的兼容性和可靠性。</span>\nbinlog-format <span class=\"token operator\">=</span> ROW \n\n\n<span class=\"token comment\">#创建用户</span>\nCREATE <span class=\"token environment constant\">USER</span> <span class=\"token string\">'db_sync'</span>@<span class=\"token string\">'%'</span> IDENTIFIED BY <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#授权账号复制权限</span>\nGRANT REPLICATION SLAVE ON *.* TO <span class=\"token string\">'db_sync'</span>@<span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#刷新配置</span>\nFLUSH PRIVILEGES<span class=\"token punctuation\">;</span>\n\nCREATE <span class=\"token environment constant\">USER</span> <span class=\"token string\">'repl'</span>@<span class=\"token string\">'从库IP'</span> IDENTIFIED BY <span class=\"token string\">'密码'</span><span class=\"token punctuation\">;</span>\nGRANT REPLICATION SLAVE ON *.* TO <span class=\"token string\">'repl'</span>@<span class=\"token string\">'从库IP'</span><span class=\"token punctuation\">;</span>\nFLUSH PRIVILEGES<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">#记下输出中的 File 和 Position 值，后续在从服务器上使用。</span>\nSHOW MASTER STATUS <span class=\"token punctuation\">\\</span>G<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"从服务器配置\"><a href=\"#从服务器配置\" class=\"headerlink\" title=\"从服务器配置\"></a>从服务器配置</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">server-id <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">#中继日志文件的名称，用于从主服务器接收二进制日志事件。</span>\nrelay-log <span class=\"token operator\">=</span> mysql-relay-bin \n<span class=\"token comment\">#从服务器的二进制日志文件的名称。</span>\nlog_bin <span class=\"token operator\">=</span> mysql-bin \n<span class=\"token comment\"># 从库只读‌</span>\nread_only <span class=\"token operator\">=</span> <span class=\"token number\">1</span>                   \n<span class=\"token comment\">#不同步相关的库</span>\nreplicate-ignore-db <span class=\"token operator\">=</span> mysql \nreplicate-ignore-db <span class=\"token operator\">=</span> information_schema\nreplicate-ignore-db <span class=\"token operator\">=</span> performance_schema\n\n为了保障较高的数据安全性，master配置sync_binlog<span class=\"token operator\">=</span><span class=\"token number\">1</span>，innodb_flush_log_at_trx_commit<span class=\"token operator\">=</span><span class=\"token number\">1</span>等设置。\n而Slave可以关闭binlog，innodb_flush_log_at_trx_commit也可以设置为0来提高sql的执行效率\n\n<span class=\"token comment\"># sync_binlog的工作原理</span>\n- 当sync_binlog设置为0时，MySQL在事务提交后不会立即执行磁盘同步操作，而是依赖文件系统来决定何时同步。这种设置可以提高性能，但在系统崩溃的情况下可能会丢失数据。\n- 设置为1时，MySQL会在每次事务提交后立即将binlog缓存中的数据同步到磁盘，这提供了最高的数据安全性，但会增加磁盘I/O的负担，从而影响性能。\n- 设置为大于1的值时，MySQL会在多次事务提交后执行一次磁盘同步，这是一种折中的策略，既保证了一定程度的数据安全性，又提高了性能。\n\n<span class=\"token comment\"># innodb_flush_log_at_trx_commit</span>\n该参数是MySQL InnoDB存储引擎独有的参数，用于控制InnoDB的Redo log日志记录方式。取值范围为0、1、2：\n<span class=\"token number\">0</span>：每秒将日志缓冲区（Log Buffer）中的数据写入磁盘，事务提交时不主动刷盘。\n优点：性能最高。\n风险：实例崩溃时可能丢失最多1秒的事务数据。\n<span class=\"token number\">1</span>（默认值）：每次事务提交时，立即将日志缓冲区的数据写入磁盘并刷盘。\n优点：完全遵守ACID特性，数据安全性最高。\n缺点：性能开销较大，尤其在高并发场景下。\n<span class=\"token number\">2</span>：每次事务提交时将日志缓冲区的数据写入文件系统缓存，每秒由操作系统调度刷盘一次。\n优点：性能优于1，数据安全性高于0。\n风险：实例崩溃时可能丢失最近1秒内的事务数据。\n\n调优原则\n高安全性场景：建议将innodb_flush_log_at_trx_commit和sync_binlog均设置为1，确保数据实时落盘。\n高性能场景：可以将innodb_flush_log_at_trx_commit设置为 <span class=\"token number\">2</span>，sync_binlog设置为1000，以提升性能，但需接受一定的数据丢失风险。\n不推荐的配置：\n将innodb_flush_log_at_trx_commit设置为0：可能导致实例重启时丢失大量数据。\n将sync_binlog设置为0：可能导致Binlog Rotate阻塞时间过长，影响性能稳定性。\n\n<span class=\"token comment\">#启动从库</span>\nsystemctl restart mysqld\n\n<span class=\"token comment\">#在从服务器指定主库并开启同步</span>\n<span class=\"token comment\">#暂停同步</span>\nSTOP SLAVE<span class=\"token punctuation\">;</span>\n\nCHANGE MASTER TO\n MASTER_HOST <span class=\"token operator\">=</span> <span class=\"token string\">'10.10.104.51'</span>,\n MASTER_USER <span class=\"token operator\">=</span> <span class=\"token string\">'db_sync'</span>,\n MASTER_PASSWORD <span class=\"token operator\">=</span> <span class=\"token string\">'xxx'</span>,\n <span class=\"token comment\">#主服务器数据库上的file值(不能有空格)</span>\n <span class=\"token comment\">#这里的填写主服务器，上面2.4部分的File 值</span>\n MASTER_LOG_FILE <span class=\"token operator\">=</span> <span class=\"token string\">'mysql-bin.000001'</span>,   \n <span class=\"token comment\">#这里的填写主服务器，上面2.4部分的Position值 SHOW MASTER STATUS \\G; 获取</span>\n MASTER_LOG_POS <span class=\"token operator\">=</span> <span class=\"token number\">157</span>,\n <span class=\"token assign-left variable\">get_master_public_key</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n <span class=\"token comment\"># gtid模式</span>\n\nCHANGE MASTER TO\n<span class=\"token assign-left variable\">MASTER_HOST</span><span class=\"token operator\">=</span><span class=\"token string\">'主库IP'</span>,\n<span class=\"token assign-left variable\">MASTER_USER</span><span class=\"token operator\">=</span><span class=\"token string\">'repl'</span>,\n<span class=\"token assign-left variable\">MASTER_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">'密码'</span>,\n<span class=\"token assign-left variable\">MASTER_AUTO_POSITION</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"sync-binlog-innodb-flush-log-at-trx-commit-参数设置示例-下文通过几个典型的场景对上述两个参数的配置进行说明：\"><a href=\"#sync-binlog-innodb-flush-log-at-trx-commit-参数设置示例-下文通过几个典型的场景对上述两个参数的配置进行说明：\" class=\"headerlink\" title=\"sync_binlog innodb_flush_log_at_trx_commit 参数设置示例 下文通过几个典型的场景对上述两个参数的配置进行说明：\"></a>sync_binlog innodb_flush_log_at_trx_commit 参数设置示例 下文通过几个典型的场景对上述两个参数的配置进行说明：</h1><h1 id=\"场景一：只读实例延迟\"><a href=\"#场景一：只读实例延迟\" class=\"headerlink\" title=\"场景一：只读实例延迟\"></a>场景一：只读实例延迟</h1><p>RDS MySQL提供只读实例功能，用于分担主实例的读压力。如果只读实例使用默认参数模板（sync_binlog&#x3D;1，innodb_flush_log_at_trx_commit&#x3D;1），在主实例写压力较大时，可能导致只读实例的Binlog应用延迟。<br>优化建议：<br>将只读实例的sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为2，提升Binlog应用效率。<br>注意：此配置不能完全消除延迟，需根据具体情况进行分析。</p>\n<h1 id=\"场景二：DTS数据迁移速度慢\"><a href=\"#场景二：DTS数据迁移速度慢\" class=\"headerlink\" title=\"场景二：DTS数据迁移速度慢\"></a>场景二：DTS数据迁移速度慢</h1><p>在使用 DTS 进行数据迁移时，目标实例可能因频繁的Binlog和Redo Log落盘操作导致写入性能瓶颈。<br>优化建议：<br>将目标实例的sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为 2，加速数据写入。<br>数据迁移完成后，可根据需求恢复默认配置。</p>\n<h1 id=\"场景三：热点更新性能差\"><a href=\"#场景三：热点更新性能差\" class=\"headerlink\" title=\"场景三：热点更新性能差\"></a>场景三：热点更新性能差</h1><p>在大促或秒杀场景中，若sync_binlog和innodb_flush_log_at_trx_commit均设置为 1，可能导致大量并发写入时性能下降。<br>优化建议：<br>临时将sync_binlog设置为1000，innodb_flush_log_at_trx_commit设置为 2，提升并发能力。<br>活动结束后恢复默认配置，确保数据安全性。</p>\n<h1 id=\"如果主从不同步需要全量初始化从库\"><a href=\"#如果主从不同步需要全量初始化从库\" class=\"headerlink\" title=\"如果主从不同步需要全量初始化从库\"></a>如果主从不同步需要全量初始化从库</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#停止异常的同步</span>\nstop slave<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#重置slave，会重置从库相关设置。</span>\nreset slave all<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#清除已同步数据库 请重视备份</span>\ndrop database <span class=\"token variable\"><span class=\"token variable\">`</span>***<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#重置主库同步设置</span>\nRESET MASTER<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#锁定主库，只能读</span>\nFLUSH TABLES WITH READ LOCK<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 导出数据库</span>\nmysqldump –h<span class=\"token punctuation\">(</span>ip***<span class=\"token punctuation\">)</span> –P<span class=\"token punctuation\">(</span>port***<span class=\"token punctuation\">)</span> –u<span class=\"token punctuation\">(</span>user***<span class=\"token punctuation\">)</span> –p<span class=\"token punctuation\">(</span>pwd***<span class=\"token punctuation\">)</span> --all-databases <span class=\"token operator\">></span> /master-dump.sql\n<span class=\"token comment\">#解锁主库</span>\nUNLOCK TABLES<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"mysql-设置root密码\"><a href=\"#mysql-设置root密码\" class=\"headerlink\" title=\"mysql 设置root密码\"></a>mysql 设置root密码</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 初始化</span>\n<span class=\"token function\">sudo</span> mysql_secure_installation\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf\nskip-grant-tables\n\n<span class=\"token function\">sudo</span> systemctl restart mysql\nmysql <span class=\"token parameter variable\">-uroot</span>\n\nflush privileges<span class=\"token punctuation\">;</span>\nALTER <span class=\"token environment constant\">USER</span> <span class=\"token string\">'root'</span>@<span class=\"token string\">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class=\"token string\">'xx'</span><span class=\"token punctuation\">;</span>\nflush privileges<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /var/run/mysqld\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> mysql:mysql /var/run/mysqld\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">750</span> /var/run/mysqld\n\n\n<span class=\"token comment\"># 如果要改msyql 的socket 等文件位置 必须修改 AppArmor 策略文件</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/apparmor.d/usr.sbin.mysqld\n/var/lib/mysqld/** rwkl,\n/var/lib/mysqld/ rw,\n<span class=\"token function\">sudo</span> apparmor_parser <span class=\"token parameter variable\">-r</span> /etc/apparmor.d/usr.sbin.mysqld\n<span class=\"token function\">sudo</span> systemctl restart mysql\n\n\n<span class=\"token comment\"># 解决主从同步错误的临时方案</span>\nSTOP SLAVE<span class=\"token punctuation\">;</span>\nSET GLOBAL <span class=\"token assign-left variable\">SQL_SLAVE_SKIP_COUNTER</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nSTART SLAVE<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"查看表碎片情况\"><a href=\"#查看表碎片情况\" class=\"headerlink\" title=\"查看表碎片情况\"></a>查看表碎片情况</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> table_name <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Table<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> \n       <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data_length <span class=\"token operator\">+</span> index_length<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Size (MB)<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span>\n       <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>data_free <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Free Space (MB)<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> \n<span class=\"token keyword\">WHERE</span> table_schema <span class=\"token operator\">=</span> <span class=\"token string\">'your_database_name'</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> data_free <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"碎片优化语句\"><a href=\"#碎片优化语句\" class=\"headerlink\" title=\"碎片优化语句\"></a>碎片优化语句</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">OPTIMIZE</span> <span class=\"token keyword\">TABLE</span> table_name<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"批量优化整个数据库\"><a href=\"#批量优化整个数据库\" class=\"headerlink\" title=\"批量优化整个数据库\"></a>批量优化整个数据库</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> <span class=\"token variable\">@tables</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> GROUP_CONCAT<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">INTO</span> <span class=\"token variable\">@tables</span> \n<span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> \n<span class=\"token keyword\">WHERE</span> table_schema <span class=\"token operator\">=</span> <span class=\"token string\">'your_database_name'</span> <span class=\"token operator\">AND</span> table_type <span class=\"token operator\">=</span> <span class=\"token string\">'BASE TABLE'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@tables</span> <span class=\"token operator\">=</span> CONCAT<span class=\"token punctuation\">(</span><span class=\"token string\">'OPTIMIZE TABLE '</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@tables</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">PREPARE</span> stmt <span class=\"token keyword\">FROM</span> <span class=\"token variable\">@tables</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">EXECUTE</span> stmt<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DEALLOCATE</span> <span class=\"token keyword\">PREPARE</span> stmt<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"分析表结构‌\"><a href=\"#分析表结构‌\" class=\"headerlink\" title=\"分析表结构‌\"></a>分析表结构‌</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ANALYZE</span> <span class=\"token keyword\">TABLE</span> table_name<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>‌锁表问题‌：OPTIMIZE TABLE操作会锁定表，在高负载时段应谨慎使用‌78<br>‌存储引擎差异‌：<br>MyISAM表：OPTIMIZE会完全重建表，效果显著‌<br>InnoDB表：会重建表并重新组织数据和索引页‌</p>\n<p>‌替代方案‌：对于InnoDB表，可以考虑使用ALTER TABLE table_name ENGINE&#x3D;InnoDB来重建表‌<br>‌定期执行‌：建议在业务低峰期定期执行碎片整理，特别是频繁增删改的表‌<br>‌空间回收‌：OPTIMIZE TABLE可以回收删除数据后未释放的空间‌</p>\n<h3 id=\"mysql-慢查询\"><a href=\"#mysql-慢查询\" class=\"headerlink\" title=\"mysql 慢查询\"></a>mysql 慢查询</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">mysqldumpslow -s r -t 10 &#x2F;data&#x2F;mysql&#x2F;debian-kjlog-db1-slow.log &gt; slow1.sql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"主库配置\"><a href=\"#主库配置\" class=\"headerlink\" title=\"主库配置\"></a>主库配置</h3><pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">[mysqld]\nserver-id &#x3D; 1  # 必须唯一，主库通常设为1\nlog-bin &#x3D; mysql-bin  # 启用二进制日志\nbinlog-format &#x3D; ROW  # 推荐生产环境使用ROW格式\nbinlog_expire_logs_seconds &#x3D; 2592000  # 设置binlog保留30天(可选)\nsync_binlog &#x3D; 1  # 每次事务提交都同步binlog到磁盘\ngtid_mode &#x3D; ON  # 启用GTID模式‌:ml-citation&#123;ref&#x3D;&quot;6,8&quot; data&#x3D;&quot;citationList&quot;&#125;\nenforce_gtid_consistency &#x3D; ON  # 强制GTID一致性\nbinlog_group_commit_sync_delay &#x3D; 100  # 组提交优化参数(可选)\nbinlog_group_commit_sync_no_delay_count &#x3D; 10  # 组提交优化参数(可选)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"从库配置\"><a href=\"#从库配置\" class=\"headerlink\" title=\"从库配置\"></a>从库配置</h3><pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">[mysqld]\nserver-id &#x3D; 2  # 必须唯一且不同于主库 \nlog-bin &#x3D; mysql-bin  # 推荐从库也开启binlog‌ \nlog_slave_updates &#x3D; ON  # 启用级联复制时需要\nread_only &#x3D; ON  # 设置从库为只读模式\nsuper_read_only &#x3D; ON  # 防止特权用户写入(8.0+)\nskip_slave_start &#x3D; ON  # 防止自动启动复制(生产安全)\ngtid_mode &#x3D; ON \nenforce_gtid_consistency &#x3D; ON<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>SHOW BINARY LOG STATUS \\G;<br>SHOW REPLICA STATUS \\G;<br>START REPLICA;</p>\n<p>mysql&gt; show binary log status \\G;<br>*************************** 1. row ***************************<br>             File: binlog.000008<br>         Position: 12543683<br>     Binlog_Do_DB: tai_hua<br> Binlog_Ignore_DB:<br>Executed_Gtid_Set: 2170bdc8-093b-11f0-b82d-005056b87daf:1-57547,<br>f6f51b80-d477-11ef-bc3e-005056b87daf:1-52662</p>\n<p>CHANGE REPLICATION SOURCE TO<br>SOURCE_HOST&#x3D;’主库IP’,<br>SOURCE_USER&#x3D;’repl’,<br>SOURCE_PASSWORD&#x3D;’password’,<br>SOURCE_PORT&#x3D;3306,<br>SOURCE_AUTO_POSITION&#x3D;1;</p>\n",
            "tags": [
                "Default",
                "mysql"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2025/03/06/XtraBackup-mysql-backup/",
            "url": "https://gyoliu.github.io/2025/03/06/XtraBackup-mysql-backup/",
            "title": "XtraBackup mysql backup",
            "date_published": "2025-03-06T08:29:54.000Z",
            "content_html": "<h1 id=\"1-安装-Percona-XtraBackup\"><a href=\"#1-安装-Percona-XtraBackup\" class=\"headerlink\" title=\"1. 安装 Percona XtraBackup\"></a>1. 安装 Percona XtraBackup</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Ubuntu/Debian</span>\n<span class=\"token function\">wget</span> https://repo.percona.com/apt/percona-release_latest.<span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-sc</span><span class=\"token variable\">)</span></span>_all.deb\n<span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-i</span> percona-release_latest.<span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-sc</span><span class=\"token variable\">)</span></span>_all.deb\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> percona-xtrabackup-80\n\n<span class=\"token comment\"># CentOS/RHEL</span>\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> https://repo.percona.com/yum/percona-release-latest.noarch.rpm\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> percona-xtrabackup-80<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"备份需要的权限\"><a href=\"#备份需要的权限\" class=\"headerlink\" title=\"备份需要的权限\"></a>备份需要的权限</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">Xtrabackup 备份工具，备份时用户需要有以下权限。\nReload：用于执行 FLUSH TABLES WITH REDO LOCK 和 FLUSH NO_WRITE_TO_BINLOG TABLES 是必需权限。\nReplication client：用于执行 SHOW MASTER STATUS 和 SHOW SLAVE STATUS 查看位点信息，是必需权限。\nBACKUP_ADMIN：用于执行 LOCK INSTANCE FOR BACKUP，是必需权限。\nProcess：用于执行 SHOW ENGINE INNODB STATUS 和 SHOW PROCESSLIST 是必需权限。\nSYSTEM_VARIABLES_ADMIN：用于在增量备份时执行 SET GLOBAL mysqlbackup.backupid &#x3D; xxx 操作，是非必需权限。\nSUPER：在指定 –kill-long-queries-timeout 需要杀掉慢查询，和从库备份指定 –safe-slave-backup 需要重启复制，需要用到该权限。\nSHOW VIEW：确认是否有非 INNODB 引擎表。\n如果使用 Page Tracking 进行增量备份，还需要 mysql.component 表的查询权限。\n如果指定 –history 还需要 performance_schema.xtraback_history 的 SELECT、INSERT、CREATE、ALTER 权限。\n以下是 MySQL 8.0 以上版本的完整授权示例：\nCREATE USER &#39;backuser&#39;@&#39;localhost&#39;  IDENTIFIED WITH mysql_native_password BY &#39;BackUser@2025&#39;;\nGRANT BACKUP_ADMIN, PROCESS, RELOAD, LOCK TABLES, REPLICATION CLIENT ON *.* TO &#39;backuser&#39;@&#39;localhost&#39;;\nGRANT SELECT ON performance_schema.log_status TO &#39;backuser&#39;@&#39;localhost&#39;;\nGRANT SELECT ON performance_schema.keyring_component_status TO backuser@&#39;localhost&#39;;\nGRANT SELECT ON performance_schema.replication_group_members TO backuser@&#39;localhost&#39;;\nFLUSH PRIVILEGES;\n以下是 MySQL 5.7 版本的完整授权示例：\nCREATE USER &#39;bkpuser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;s3cret&#39;;\nGRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT ON *.* TO &#39;bkpuser&#39;@&#39;localhost&#39;;\nFLUSH PRIVILEGES;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"2-全量备份（Full-Backup）\"><a href=\"#2-全量备份（Full-Backup）\" class=\"headerlink\" title=\"2. 全量备份（Full Backup）\"></a>2. 全量备份（Full Backup）</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建全量备份目录</span>\n<span class=\"token assign-left variable\">BACKUP_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/backup/mysql/full/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y%m%d<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$BACKUP_DIR</span>\n\n<span class=\"token comment\"># 执行备份（无锁表）</span>\nxtrabackup <span class=\"token parameter variable\">--backup</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>backup_user <span class=\"token parameter variable\">--password</span><span class=\"token operator\">=</span>YourSecurePassword <span class=\"token parameter variable\">-H</span> <span class=\"token number\">127.0</span>.0.1 <span class=\"token parameter variable\">-P3306</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--databases</span><span class=\"token operator\">=</span><span class=\"token string\">\"xxx\"</span> <span class=\"token punctuation\">\\</span>\n  --exclude-tables<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;TARGET_DATABASE&#125;</span>.<span class=\"token variable\">$&#123;EXCLUDE_TABLE&#125;</span>\"</span> <span class=\"token punctuation\">\\</span>\n  --target-dir<span class=\"token operator\">=</span><span class=\"token variable\">$BACKUP_DIR</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--compress</span> <span class=\"token punctuation\">\\</span>\n  --slave-info <span class=\"token punctuation\">\\</span>\n  --compress-threads<span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token operator\">|</span> <span class=\"token function\">gzip</span> - <span class=\"token operator\">></span> xxx.tar.gz\n\n<span class=\"token comment\"># 生成校验文件（可选）</span>\nsha256sum <span class=\"token variable\">$BACKUP_DIR</span>/backup.xbstream <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> <span class=\"token variable\">$BACKUP_DIR</span>/checksum.sha256\n\n<span class=\"token comment\"># 上传至云存储（AWS S3示例）</span>\naws s3 <span class=\"token function\">cp</span> <span class=\"token parameter variable\">--sse</span> AES256 <span class=\"token variable\">$BACKUP_DIR</span> s3://your-bucket/mysql/full/ <span class=\"token parameter variable\">--recursive</span>\n\n关键参数介绍：\n–backup：发起全量备份。\n-u, -H, -P, -p：连接 mysql 实例，用户名、主机 IP、端口、密码。\n–slave-info：记录 slave 复制位点信息，一般备份从库需要指定该参数。\n–target-dir：备份文件的存放路径。\n–parallel：并发拷贝的线程数。\n<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /tmp/xtrabackup.log：将备份过程中的日志重定向到 /tmp/xtrabackup.log 文件中。\n\n备份出来的文件中，除了数据文件，还有以下额外的文件：\nbackup-my.cnf：该文件不是 MySQL 参数文件的备份，只是记录了一些 Innodb 引擎的参数，会在 Prepare 阶段用到。\nxtrabackup_logfile：该文件用来保存拷贝的 redo log。\nxtrabackup_binlog_info：binlog 位点信息和 GTID 信息。使用该备份恢复后，需要从该 binlog 位点进行增量恢复。\nxtrabackup_slave_info：如果是对从库进行备份，指定 –slave-info 该文件会记录主节点的位点信息，取自 SHOW SLAVE STATUS 中的 Relay_Master_Log_File 和 Exec_Master_Log_Pos。如果是给主库备份，该文件为空。\nxtrabackup_checkpoints：该文件记录了备份类型和 LSN 信息。\nxtrabackup_info：该文件中，记录备份的详细信息。\nxtrabackup_tablespaces：记录备份集中表空间的信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"全量流式备份\"><a href=\"#全量流式备份\" class=\"headerlink\" title=\"全量流式备份\"></a>全量流式备份</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">xtrabackup <span class=\"token parameter variable\">--backup</span> --slave-info  <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-H</span> <span class=\"token number\">127.0</span>.0.1 <span class=\"token parameter variable\">-P3306</span> -p<span class=\"token string\">'YouPassword'</span> <span class=\"token punctuation\">\\</span>\n <span class=\"token parameter variable\">--stream</span><span class=\"token operator\">=</span>xbstream --target-dir<span class=\"token operator\">=</span>/data/backup/bakup_<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span> +<span class=\"token string\">\"%F_%H_%M_%S\"</span><span class=\"token variable\">`</span></span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/data/backup/xtrabackup.log  <span class=\"token punctuation\">\\</span>\n <span class=\"token operator\">|</span> <span class=\"token function\">ssh</span> root@172.16.104.7 <span class=\"token function\">gzip</span> -  <span class=\"token operator\">></span> /data/backup/backup.gz\n\n 远程恢复的时候，需要先使用 xbstream 命令进行解压：\n xbstream <span class=\"token parameter variable\">-x</span> <span class=\"token parameter variable\">--parallel</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> <span class=\"token parameter variable\">-C</span> /data/backup/20231113 <span class=\"token operator\">&lt;</span> ./backup.xbstream\n xbstream 中的 <span class=\"token parameter variable\">-x</span> 表示解压，–parallel 表示并行度，-C 指定解压的目录，最后一级目录必须存在。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"3-增量备份（Incremental-Backup）\"><a href=\"#3-增量备份（Incremental-Backup）\" class=\"headerlink\" title=\"3. 增量备份（Incremental Backup）\"></a>3. 增量备份（Incremental Backup）</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 假设最后一次全量备份路径：/backup/mysql/full/20231001</span>\n  <span class=\"token comment\"># 获取上一次备份目录（全量或增量）</span>\n<span class=\"token assign-left variable\">LAST_BACKUP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-d</span> /backup/mysql/*/* <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">tail</span> <span class=\"token parameter variable\">-1</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 创建增量备份目录</span>\n<span class=\"token assign-left variable\">INC_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/backup/mysql/inc/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y%m%d<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$INC_DIR</span>\n\n<span class=\"token comment\"># 执行增量备份</span>\nxtrabackup <span class=\"token parameter variable\">--backup</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>backup_user <span class=\"token parameter variable\">--password</span><span class=\"token operator\">=</span>YourSecurePassword <span class=\"token punctuation\">\\</span>\n  --target-dir<span class=\"token operator\">=</span><span class=\"token variable\">$INC_DIR</span> <span class=\"token punctuation\">\\</span>\n  --incremental-basedir<span class=\"token operator\">=</span><span class=\"token variable\">$LAST_BACKUP</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--compress</span> <span class=\"token punctuation\">\\</span>\n  --compress-threads<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n\n<span class=\"token comment\"># 上传至云存储</span>\naws s3 <span class=\"token function\">cp</span> <span class=\"token parameter variable\">--sse</span> AES256 <span class=\"token variable\">$INC_DIR</span> s3://your-bucket/mysql/inc/ <span class=\"token parameter variable\">--recursive</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"3-Binlog-实时备份\"><a href=\"#3-Binlog-实时备份\" class=\"headerlink\" title=\"3. Binlog 实时备份\"></a>3. Binlog 实时备份</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 定时任务（每5分钟同步一次）</span>\n*/5 * * * * <span class=\"token function\">rsync</span> <span class=\"token parameter variable\">-avz</span> /var/lib/mysql/mysql-bin.* /backup/mysql/binlog/\n<span class=\"token comment\"># 每日归档并清理旧文件</span>\n<span class=\"token number\">0</span> <span class=\"token number\">0</span> * * * <span class=\"token function\">find</span> /backup/mysql/binlog/ <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"mysql-bin.*\"</span> <span class=\"token parameter variable\">-mtime</span> +30 <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">rm</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"1-恢复全量备份\"><a href=\"#1-恢复全量备份\" class=\"headerlink\" title=\"1. 恢复全量备份\"></a>1. 恢复全量备份</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 停止 MySQL 服务</span>\nsystemctl stop mysql\n\n<span class=\"token comment\"># 清空数据目录</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/lib/mysql/*\n\n<span class=\"token comment\"># 解压并准备备份</span>\nxtrabackup <span class=\"token parameter variable\">--decompress</span> --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\nxtrabackup <span class=\"token parameter variable\">--prepare</span> --apply-log-only --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\n\n<span class=\"token comment\"># 复制数据文件</span>\nxtrabackup --copy-back --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\n\n<span class=\"token comment\"># 修改权限并启动</span>\n<span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> mysql:mysql /var/lib/mysql\nsystemctl start mysql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-应用增量备份\"><a href=\"#2-应用增量备份\" class=\"headerlink\" title=\"2. 应用增量备份\"></a>2. 应用增量备份</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压数据</span>\nxtrabackup <span class=\"token parameter variable\">--decompress</span> --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\n<span class=\"token comment\"># 准备全量备份（必须步骤）</span>\nxtrabackup <span class=\"token parameter variable\">--prepare</span> --apply-log-only --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\n\n<span class=\"token comment\"># 应用第一个增量备份</span>\nxtrabackup <span class=\"token parameter variable\">--prepare</span> --apply-log-only <span class=\"token punctuation\">\\</span>\n  --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001 <span class=\"token punctuation\">\\</span>\n  --incremental-dir<span class=\"token operator\">=</span>/backup/mysql/inc/20231002\n\n<span class=\"token comment\"># 应用后续增量备份（按时间顺序）</span>\nxtrabackup <span class=\"token parameter variable\">--prepare</span> --apply-log-only <span class=\"token punctuation\">\\</span>\n  --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001 <span class=\"token punctuation\">\\</span>\n  --incremental-dir<span class=\"token operator\">=</span>/backup/mysql/inc/20231003\n\n<span class=\"token comment\"># 最后准备（确保一致性）</span>\nxtrabackup <span class=\"token parameter variable\">--prepare</span> --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\n\n<span class=\"token comment\"># 复制数据并启动 MySQL（同上）</span>\n<span class=\"token comment\"># 复制数据文件</span>\nxtrabackup --copy-back --target-dir<span class=\"token operator\">=</span>/backup/mysql/full/20231001\n\n<span class=\"token comment\"># 修改权限并启动</span>\n<span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> mysql:mysql /var/lib/mysql\nsystemctl start mysql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"3-通过-Binlog-恢复至最新状态\"><a href=\"#3-通过-Binlog-恢复至最新状态\" class=\"headerlink\" title=\"3. 通过 Binlog 恢复至最新状态\"></a>3. 通过 Binlog 恢复至最新状态</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解析增量备份后的 Binlog 位置</span>\n<span class=\"token function\">cat</span> /backup/mysql/full/20231001/xtrabackup_binlog_info\n<span class=\"token comment\"># 输出示例：mysql-bin.000007 154</span>\n\n<span class=\"token comment\"># 使用 mysqlbinlog 导出 SQL（从指定位置到故障时间点）</span>\nmysqlbinlog --start-position<span class=\"token operator\">=</span><span class=\"token number\">154</span> /var/lib/mysql/mysql-bin.000007 <span class=\"token punctuation\">..</span>. <span class=\"token operator\">|</span> mysql <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-p</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"1-备份脚本示例（mysql-backup-sh）\"><a href=\"#1-备份脚本示例（mysql-backup-sh）\" class=\"headerlink\" title=\"1. 备份脚本示例（mysql_backup.sh）\"></a>1. 备份脚本示例（mysql_backup.sh）</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># 全量备份（每周日执行）</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%u<span class=\"token variable\">)</span></span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token assign-left variable\">BACKUP_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/backup/mysql/full/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y%m%d<span class=\"token variable\">)</span></span>\"</span>\n  <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$BACKUP_DIR</span>\n  xtrabackup <span class=\"token parameter variable\">--backup</span> <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>root <span class=\"token parameter variable\">--password</span><span class=\"token operator\">=</span>YourPassword --target-dir<span class=\"token operator\">=</span><span class=\"token variable\">$BACKUP_DIR</span>\n  <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-czf</span> <span class=\"token variable\">$BACKUP_DIR</span>.tar.gz <span class=\"token variable\">$BACKUP_DIR</span>\n  aws s3 <span class=\"token function\">cp</span> <span class=\"token variable\">$BACKUP_DIR</span>.tar.gz s3://your-bucket/mysql-backup/full/\n<span class=\"token comment\"># 增量备份（其他日期）</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token assign-left variable\">LAST_FULL</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-d</span> /backup/mysql/full/* <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">tail</span> <span class=\"token parameter variable\">-1</span><span class=\"token variable\">)</span></span>\n  <span class=\"token assign-left variable\">BACKUP_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/backup/mysql/inc/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y%m%d<span class=\"token variable\">)</span></span>\"</span>\n  <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$BACKUP_DIR</span>\n  xtrabackup <span class=\"token parameter variable\">--backup</span> <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>root <span class=\"token parameter variable\">--password</span><span class=\"token operator\">=</span>YourPassword --target-dir<span class=\"token operator\">=</span><span class=\"token variable\">$BACKUP_DIR</span> --incremental-basedir<span class=\"token operator\">=</span><span class=\"token variable\">$LAST_FULL</span>\n  <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-czf</span> <span class=\"token variable\">$BACKUP_DIR</span>.tar.gz <span class=\"token variable\">$BACKUP_DIR</span>\n  aws s3 <span class=\"token function\">cp</span> <span class=\"token variable\">$BACKUP_DIR</span>.tar.gz s3://your-bucket/mysql-backup/inc/\n<span class=\"token keyword\">fi</span>\n\n\n<span class=\"token comment\"># 清理旧备份（每日 4:00 AM）</span>\n<span class=\"token number\">0</span> <span class=\"token number\">4</span> * * * <span class=\"token function\">find</span> /backup/mysql/full/ <span class=\"token parameter variable\">-mtime</span> +30 <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">0</span> <span class=\"token number\">4</span> * * * <span class=\"token function\">find</span> /backup/mysql/inc/ <span class=\"token parameter variable\">-mtime</span> +7 <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 查看全部定时任务</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-l</span>\n<span class=\"token comment\"># 编辑 crontab</span>\n<span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-e</span>\n<span class=\"token comment\"># 全量备份（每周日 2:00 AM）</span>\n<span class=\"token number\">0</span> <span class=\"token number\">2</span> * * <span class=\"token number\">7</span> /scripts/full_backup.sh\n<span class=\"token comment\"># 增量备份（每日 3:00 AM）</span>\n<span class=\"token number\">0</span> <span class=\"token number\">3</span> * * <span class=\"token number\">1</span>-6 /scripts/inc_backup.sh\n\n<span class=\"token number\">0</span> <span class=\"token number\">23</span> * * * /home/syscook/xtrabackup_backup.sh full\n<span class=\"token number\">0</span> <span class=\"token number\">13</span> * * * /home/syscook/xtrabackup_backup.sh inc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[生产MySQL] → [XtraBackup 全量&#x2F;增量] → [本地SSD] → [加密上传至S3]\n                          ↓\n                  [Binlog 实时同步] → [独立存储]\n                          ↓\n                   [监控告警] → [运维团队]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"命令参数\"><a href=\"#命令参数\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token parameter variable\">--backup</span> 模式，用于在目标目录中进行备份\n<span class=\"token parameter variable\">--prepare</span> 模式，用于从备份中恢复数据（在--backup模式下创建）\n--copy-back 模式，用于从备份中复制数据到原始数据所在的位置；若要移动数据而不是复制，请使用替代的--move-back模式。\n<span class=\"token parameter variable\">--stats</span> 模式，用于扫描指定的数据文件并打印出索引统计信息。\n\nxtrabackup <span class=\"token punctuation\">[</span>--defaults-file<span class=\"token operator\">=</span><span class=\"token comment\">#] --backup|--prepare|--copy-back|--stats [OPTIONS]</span>\nxtrabackup <span class=\"token parameter variable\">--prepare</span> --target-dir<span class=\"token operator\">=</span>/data/backup/mysql/\n\n\n参数值                                参数用途\n–print-defaults             输出mysql实例的参数配置信息\n–no-defaults                不从任何配置文件中读取参数信息，除了登录文件\n–defaults-file<span class=\"token operator\">=</span><span class=\"token comment\">#            仅从指定的配置文件读取参数</span>\n–defaults-extra-file<span class=\"token operator\">=</span><span class=\"token comment\">#      读取额外的配置信息文件</span>\n–defaults-group-suffix<span class=\"token operator\">=</span><span class=\"token comment\">#    Also read groups with concat(group, suffix)</span>\n–login-path<span class=\"token operator\">=</span><span class=\"token comment\">#               读取登录文件的路径</span>\n-v, <span class=\"token parameter variable\">--version</span>               打印 xtrabackup版本信息\n–target-dir<span class=\"token operator\">=</span>name            备份文件的目录，默认为当前目录xtrabackup_backupfiles/\n–backup                     备份操作,备份到target-dir指定的目录\n–stats                      计算datadir的统计信息<span class=\"token punctuation\">(</span>推荐mysqld离线<span class=\"token punctuation\">)</span> calc statistic of datadir <span class=\"token punctuation\">(</span>offline mysqld is recommended<span class=\"token punctuation\">)</span>\n–prepare                    指定备份的准备阶段 （准备一个在备份上启动mysql服务器的备份。）\n–export                     当在prepare阶段创建文件到另外的一个数据库 create files to <span class=\"token function\">import</span> to another database when prepare.\n–apply-log-only             一般情况下,在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务。\n                            因此，此时数据 文件仍处理不一致状态。\n–apply-log                  它的作用是通过回滚未提交的事务及同步已经提交的事务至数据文件使数据文件处于一致性状态。\n–print-param                输出mysqld copyback必须的参数  print parameter of mysqld needed <span class=\"token keyword\">for</span> copyback.\n–use-memory<span class=\"token operator\">=</span>                备份的时候指定的内存，该选项表示和–apply-log选项一起使用，\n                            prepare 备份的时候，xtrabackup做crash recovery分配的内存大小，单位字节。也可<span class=\"token punctuation\">(</span>1MB,1M,1G,1GB<span class=\"token punctuation\">)</span>，推荐1G。用于替代buffer_pool_size\n–throttle<span class=\"token operator\">=</span><span class=\"token comment\">#                 和–backup一起使用，指定每秒操作读写对的数量。</span>\n–log<span class=\"token punctuation\">[</span><span class=\"token operator\">=</span>name<span class=\"token punctuation\">]</span>                 忽略MySQL选项兼容性的选项\n–log-copy-interval<span class=\"token operator\">=</span><span class=\"token comment\">#        日志复制线程完成的检查之间的时间间隔（以毫秒为单位,默认为1秒）。</span>\n–extra-lsndir<span class=\"token operator\">=</span>name          和–backup一起使用,在当前目录保存一份额外的xtrabackup_checkpoints文件\n–to-archived-lsn<span class=\"token operator\">=</span><span class=\"token comment\">#          指定prepare备份时apply事务日志的LSN，只能和xtarbackup --prepare选项一起用。</span>\n–tables<span class=\"token operator\">=</span>name                通过正则表达式过滤表\n–tables-file<span class=\"token operator\">=</span>name           按文件中的精确的database.table名称列表进行筛选。\n–databases<span class=\"token operator\">=</span>name             按照数据库进行过滤\n–databases-file<span class=\"token operator\">=</span>name        按照文件中的数据进行过滤\n–tables-exclude<span class=\"token operator\">=</span>name        操作方式和–tables一样，但是匹配的表名将不备份，此参数的优先级高于–tables.\n–databases-exclude<span class=\"token operator\">=</span>name     操作方式和–databases一样，但是匹配的库名将不被备份，优先级高于–databases.\n–create-ib-logfile          此参数当前不生效，无效参数\n–stream<span class=\"token operator\">=</span>name                该选项表示流式备份的格式，backup完成之后以指定格式到STDOUT，目前只支持tar<span class=\"token punctuation\">(</span><span class=\"token number\">8.0</span>版本仅支持<span class=\"token punctuation\">)</span>和xbstream\n–decompress                 该选项表示解压–compress选项压缩的文件，解压.qp扩展文件。\n–compress<span class=\"token punctuation\">[</span><span class=\"token operator\">=</span>name<span class=\"token punctuation\">]</span>            压缩所有输出数据，包括事务日志文件和元数据文件，通过指定的压缩算法，\n                            目前唯一支持的算法是quicklz.结果文件是qpress归档格式，\n                            每个xtrabackup创建的*.qp文件都可以通过qpress程序提取或者解压缩\n–compress-threads<span class=\"token operator\">=</span>          <span class=\"token comment\"># 备份压缩的并行线程，默认为1.并行压缩（‘compress-threads’）可以和并行文件拷贝(‘parallel’)一起使用。</span>\n                            例如:’–parallel<span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">--compress</span> --compress-threads<span class=\"token operator\">=</span><span class=\"token number\">2</span>’会创建4个IO线程读取数据并通过管道传送给2个压缩线程。\n–compress-chunk-size<span class=\"token operator\">=</span><span class=\"token comment\">#      压缩线程工作buffer的字节大小，默认是64K</span>\n–encrypt<span class=\"token operator\">=</span>name               该选项表示通过ENCRYPTION_ALGORITHM的算法加密innodb数据文件的备份，\n                            目前支持的算法有ASE128,AES192,AES256。\n–encrypt-key<span class=\"token operator\">=</span>name           该选项使用合适长度加密key，因为会记录到命令行，所以不推荐使用。\n–encrypt-key-file<span class=\"token operator\">=</span>name      该选项表示文件必须是一个简单二进制或者文本文件，加密key可通过以下命令行命令生成：openssl rand <span class=\"token parameter variable\">-base64</span> <span class=\"token number\">24</span>。\n–encrypt-threads<span class=\"token operator\">=</span><span class=\"token comment\">#          该选项表示并行加密的worker线程数量，默认为1.</span>\n–encrypt-chunk-size<span class=\"token operator\">=</span><span class=\"token comment\">#       该选项表示每个加密线程worker buffer的大小，单位是字节，默认是64K。</span>\n–decrypt<span class=\"token operator\">=</span>name               该选项表示解密通过–encrypt选项加密的.xbcrypt文件。\n–remove-original            当删除解密和解压完后删除 .qp and .xbcrypt 文件\n–rebuild_indexes            在apply事务日志之后重建innodb辅助索引，只有和–prepare一起才生效。\n–rebuild_threads<span class=\"token operator\">=</span><span class=\"token comment\">#          在紧凑备份重建辅助索引的线程数，只有和–prepare和rebuild-index一起才生效。</span>\n–close-files                该选项表示关闭不再访问的文件句柄，当xtrabackup打开表空间通常并不关闭文件句柄目的是正确的处理DDL操作。\n                            如果表空间数量巨大，这是一种可以关闭不再访问的文件句柄的方法。使用该选项有风险，会有产生不一致备份的可能。\n–core-file                  Write core on fatal signals\n–copy-back                  做数据恢复时将备份数据文件拷贝到MySQL服务器的datadir。\n–move-back                  这个选项与–copy-back相似，唯一的区别是它不拷贝文件，而是移动文件到目的地。\n                            这个选项移除backup文件，用时候必须小心。使用场景：没有足够的磁盘空间同事保留数据文件和Backup副本\n                            注意：\n                            <span class=\"token number\">1</span>.datadir目录必须为空。除非指定innobackupex --force-non-empty-directorires选项指定，否则–copy-backup选项不会覆盖\n                            <span class=\"token number\">2</span>.在restore之前,必须shutdown MySQL实例，你不能将一个运行中的实例restore到datadir目录中\n                            <span class=\"token number\">3</span>.由于文件属性会被保留，大部分情况下你需要在启动实例之前将文件的属主改为mysql，这些文件将属于创建备份的用户\n\n–galera-info                该选项表示生成了包含创建备份时候本地节点状态的文件xtrabackup_galera_info文件，该选项只适用于备份PXC。\n–slave-info                 该选项表示对slave进行备份的时候使用，打印出master的名字和binlog pos，\n                            同样将这些信息以change master的命令写入xtrabackup_slave_info文件。可以通过基于这份备份启动一个从库。\n–no-lock                    该选项表示关闭FTWRL的表锁，只有在所有表都是Innodb表并且不关心backup的binlog pos点，\n                            如果有任何DDL语句正在执行或者非InnoDB正在更新时（包括mysql库下的表），都不应该使用这个选项，\n                            后果是导致备份数据不一致，如果考虑备份因为获得锁失败，可以考虑–safe-slave-backup立刻停止复制线程。\n–lock-ddl                   若mysql serve支持在备份支持发出LOCK TABLES FOR BACKUP指令阻止所有的DDL操作。\n–lock-ddl-timeout<span class=\"token operator\">=</span>          <span class=\"token comment\">#若在指定时间内未返回值则终止备份。</span>\n–lock-ddl-per-table         在xtrabackup开始复制之前锁定每个表的DDL直到备份完成\n–safe-slave-backup          该选项表示为保证一致性复制状态，这个选项停止SQL线程并且等到show status中的slave_open_temp_tables为0的时候开始备份，\n                            如果没有打开临时表，bakcup会立刻开始，否则SQL线程启动或者关闭知道没有打开的临时表。\n–safe-slave-backup-timeout  如果slave_open_temp_tables在–safe-slave-backup-timeount（默认300秒）秒之后不为0，从库sql线程会在备份完成的时候重启。\n–rsync                      该选项表示通过rsync工具优化本地传输，当指定这个选项，innobackupex使用rsync拷贝非Innodb文件而替换cp，当有很多DB和表的时候会快很多，不能–stream一起使用。\n–force-non-empty-directories指定该参数时候，使得 --copy-back或–move-back选项转移文件到非空目录，已存在的文件不会被覆盖。如果–copy-back和–move-back文件需要从备份目录拷贝一个在datadir已经存在的文件，会报错失败。\n–no-version-check           该选项关闭版本检查，当–version-check选项开启的时候。\n–tables-compatibility-check 此选项开启表存储引擎兼容性告警，默认开启。可使用–skip-tables-compatibility-check关闭。\n–no-backup-locks            该选项在backup阶段控制锁，替换FLUSH TABLES WITH READ LOCK命令。默认开启，关闭需使用参数–no-backup-locks。\n                            当mysql服务器不支持backup locks时候此参数无效。\n-u, <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>name             备份的用户名\n-H, <span class=\"token parameter variable\">--host</span><span class=\"token operator\">=</span>name             备份的IP地址\n-P, <span class=\"token parameter variable\">--port</span><span class=\"token operator\">=</span><span class=\"token comment\">#                备份的端口</span>\n-p, --password<span class=\"token punctuation\">[</span><span class=\"token operator\">=</span>name<span class=\"token punctuation\">]</span>       备份时用户的密码\n-S, <span class=\"token parameter variable\">--socket</span><span class=\"token operator\">=</span>name           备份时连接的unix操作系统的socket文件\n-h, <span class=\"token parameter variable\">--datadir</span><span class=\"token operator\">=</span>name          数据恢复时候的数据目录.从my.cnf中读取，或者命令行指定。\n-t, <span class=\"token parameter variable\">--tmpdir</span><span class=\"token operator\">=</span>name           当使用–print-param指定的时候打印出正确的tmpdir参数。用于存储临时文件的路径，在轮训模式下可以指定多个路径，使用英文的:分隔\n–parallel<span class=\"token operator\">=</span>                  指定备份时拷贝多个数据文件并发的进程数，默认值为1。\n–log-bin<span class=\"token punctuation\">[</span><span class=\"token operator\">=</span>name<span class=\"token punctuation\">]</span>             binlog的日志序列\n–incremental-lsn<span class=\"token operator\">=</span>name       和–backup一起使用。\n–incremental-basedir<span class=\"token operator\">=</span>name   和–backup一起使用，仅拷贝.ibd中新增的数据到指定路径，增量备份.\n–incremental-dir<span class=\"token operator\">=</span>name       和–prepare一起使用，将.delta文件和logfile保存在指定的路径.\n–incremental-force-scan     该选项表示创建一份增量备份时，强制扫描所有增量备份中的数据页\n–incremental-history-name   该选项表示存储在PERCONA_SCHEMA.xtrabackup_history基于增量备份的历史记录的名字。\n                            Percona Xtrabackup搜索历史表查找最近（innodb_to_lsn）成功备份并且将to_lsn值作为增量备份启动出事lsn.\n                            与innobackupex–incremental-history-uuid、–incremental-basedir、–incremental-lsn互斥。\n                            如果没有检测到有效的lsn，xtrabackup会返回error。\n                            和选项–incremental一起使用。\n                            –incremental-history-uuid   该选项表示存储在percona_schema.xtrabackup_history基于增量备份的特定历史记录的UUID。\n                            和选项–incremental一起使用。\ninnobackupex遗留参数\n​\n参数值                                        参数用途\n–ftwrl-wait-query-type  该选项表示获得全局锁之前允许那种查询完成，默认是ALL，可选update。\n–ftwrl-wait-threshold   该选项表示检测到长查询，单位是秒，表示长查询的阈值。\n                        若–ftwrl-wait-timeout<span class=\"token operator\">=</span><span class=\"token number\">0</span>此参数无效，默认值为60s。\n–ftwrl-wait-timeout<span class=\"token operator\">=</span><span class=\"token comment\">#   此选项指定innobackupex在运行之前应等待阻止FTWRL的查询的时间（以秒为单位）。</span>\n                        如果超时到期时仍有此类查询，则innobackupex将终止并显示错误。\n                        默认值为0，在这种情况下，innobackupex不会等待查询完成并立即启动FTWRL。\n–kill-long-queries-timeout  该选项表示从开始执行FLUSH TABLES WITH READ LOCK到kill掉阻塞它的这些查询之间等待的秒数。默认值为0，不会kill任何查询，使用这个选项xtrabackup需要有Process和super权限。\n–kill-long-query-type       该选项表示kill的类型，默认是all，可选select。\n–history                    该选项表示percona server 的备份历史记录在percona_schema.xtrabackup_history表。\n–debug-sleep-before-unlock  仅用于xtrabackup测试套件的debug信息\n–check-privileges           在执行查询之前检查数据库用户的权限。\n\n安全备份的参数\n​\n参数值                               参数用途\n–server-public-key-path<span class=\"token operator\">=</span>name    File path to the server public RSA key <span class=\"token keyword\">in</span> PEM format.\n–server-public-key-path<span class=\"token operator\">=</span>name    File path to the server public RSA key <span class=\"token keyword\">in</span> PEM format.\n–get-server-public-key  Get server public key\n–ssl-mode<span class=\"token operator\">=</span>name  SSL connection mode.\n–ssl-ca<span class=\"token operator\">=</span>name    CA <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> PEM format.\n–ssl-capath<span class=\"token operator\">=</span>name    CA directory.\n–ssl-cert<span class=\"token operator\">=</span>name  X509 cert <span class=\"token keyword\">in</span> PEM format.\n–ssl-cipher<span class=\"token operator\">=</span>name    SSL cipher to use.\n–ssl-key<span class=\"token operator\">=</span>name   X509 key <span class=\"token keyword\">in</span> PEM <span class=\"token function\">format</span>\n–ssl-crl<span class=\"token operator\">=</span>name   Certificate revocation list.\n–ssl-crlpath<span class=\"token operator\">=</span>name   Certificate revocation list path.\n–tls-version<span class=\"token operator\">=</span>name   TLS version to use, permitted values are: TLSv1, TLSv1.1,TLSv1.2\n–ssl-fips-mode<span class=\"token operator\">=</span>name SL FIPS mode to use, permitted values are: OFF, ON,STRICT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "Default"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2024/12/26/follow/",
            "url": "https://gyoliu.github.io/2024/12/26/follow/",
            "title": "follow",
            "date_published": "2024-12-26T06:41:29.000Z",
            "content_html": "<blockquote>\n<p>This message is used to verify that this feed (feedId:94993712362846208) belongs to me (userId:569moaUVDrYGrgssS2Lwv). Join me in enjoying the next generation information browser <a href=\"https://follow.is/\">https://follow.is</a>.</p>\n</blockquote>\n",
            "tags": [
                "Default"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2024/08/29/nginx-proxy/",
            "url": "https://gyoliu.github.io/2024/08/29/nginx-proxy/",
            "title": "nginx 正向代理配置 https 支持",
            "date_published": "2024-08-29T05:23:54.000Z",
            "content_html": "<h1 id=\"nginx-正向代理配置-https-支持\"><a href=\"#nginx-正向代理配置-https-支持\" class=\"headerlink\" title=\"nginx 正向代理配置 https 支持\"></a>nginx 正向代理配置 https 支持</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> -- 遇到很多需要的包安装下来就好\n\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> perl perl-ExtUtils-Embed gperftools geoip-devel\n\n<span class=\"token function\">wget</span> https://github.com/chobits/ngx_http_proxy_connect_module/archive/refs/heads/master.zip\n<span class=\"token function\">unzip</span> master.zip\n<span class=\"token function\">wget</span> https://nginx.org/download/nginx-1.20.2.tar.gz\n<span class=\"token function\">tar</span> xzvf nginx-1.20.2.tar.gz\n\n<span class=\"token builtin class-name\">cd</span> nginx-1.20.2\n\npatch <span class=\"token parameter variable\">-p1</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">..</span>/ngx_http_proxy_connect_module_master/patch/proxy_connect_rewrite_1018.patch\n\n./configure <span class=\"token parameter variable\">--prefix</span><span class=\"token operator\">=</span>/usr/share/nginx --sbin-path<span class=\"token operator\">=</span>/usr/sbin/nginx --modules-path<span class=\"token operator\">=</span>/usr/lib64/nginx/modules --conf-path<span class=\"token operator\">=</span>/etc/nginx/nginx.conf --error-log-path<span class=\"token operator\">=</span>/var/log/nginx/error.log --http-log-path<span class=\"token operator\">=</span>/var/log/nginx/access.log --http-client-body-temp-path<span class=\"token operator\">=</span>/var/lib/nginx/tmp/client_body --http-proxy-temp-path<span class=\"token operator\">=</span>/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path<span class=\"token operator\">=</span>/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path<span class=\"token operator\">=</span>/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path<span class=\"token operator\">=</span>/var/lib/nginx/tmp/scgi --pid-path<span class=\"token operator\">=</span>/run/nginx.pid --lock-path<span class=\"token operator\">=</span>/run/lock/subsys/nginx <span class=\"token parameter variable\">--user</span><span class=\"token operator\">=</span>nginx <span class=\"token parameter variable\">--group</span><span class=\"token operator\">=</span>nginx --with-compat --with-debug --with-file-aio --with-google_perftools_module --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module<span class=\"token operator\">=</span>dynamic --with-http_mp4_module --with-http_perl_module<span class=\"token operator\">=</span>dynamic --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --add-module<span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/ngx_http_proxy_connect_module-master --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_xslt_module<span class=\"token operator\">=</span>dynamic --with-mail<span class=\"token operator\">=</span>dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream<span class=\"token operator\">=</span>dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads\n\n<span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n\nsystemctl restart nginx\n\n-- 测试代理\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-x</span> <span class=\"token number\">117.72</span>.44.94:81 https://www.qq.com --proxy-insecure <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n        listen                         81;\n\n        # dns resolver used by forward proxying\n        resolver                       8.8.8.8;\n\n        # forward proxy for CONNECT requests\n        proxy_connect;\n        proxy_connect_allow            all;\n        proxy_connect_connect_timeout  100s;\n        proxy_connect_data_timeout     100s;\n\n        # defined by yourself for non-CONNECT requests\n        # Example: reverse proxy for non-CONNECT requests\n\n        location &#x2F; &#123;\n            proxy_pass http:&#x2F;&#x2F;$http_host$request_uri;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        &#125;\n\n    &#125;\n\nserver &#123;\n        listen 443 default;\n        # self signed certificate generated via openssl command\n        ssl_certificate_key            &#x2F;root&#x2F;ssl&#x2F;server.key;\n        ssl_certificate                &#x2F;root&#x2F;ssl&#x2F;server.crt;\n        ssl_session_cache              shared:SSL:1m;\n\n        # dns resolver used by forward proxying\n        resolver                       8.8.8.8 8.8.4.4;\n\n        # forward proxy for CONNECT request\n        proxy_connect;\n        proxy_connect_allow            all;\n        proxy_connect_connect_timeout  100s;\n        proxy_connect_data_timeout     100s;\n\n        # defined by yourself for non-CONNECT request\n        # Example: reverse proxy for non-CONNECT requests\n        location &#x2F; &#123;\n            proxy_pass http:&#x2F;&#x2F;$http_host$request_uri;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Default",
                "nginx"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2024/07/29/PaddleSpeech/",
            "url": "https://gyoliu.github.io/2024/07/29/PaddleSpeech/",
            "title": "基于百度飞浆平台语音识别PaddleSpeech",
            "date_published": "2024-07-29T05:20:51.000Z",
            "content_html": "<h1 id=\"PaddleSpeech-是基于飞桨-PaddlePaddle-的语音方向的开源模型库\"><a href=\"#PaddleSpeech-是基于飞桨-PaddlePaddle-的语音方向的开源模型库\" class=\"headerlink\" title=\"PaddleSpeech 是基于飞桨 PaddlePaddle 的语音方向的开源模型库\"></a><strong>PaddleSpeech</strong> 是基于飞桨 <a href=\"https://gitee.com/link?target=https://github.com/PaddlePaddle/Paddle\">PaddlePaddle</a> 的语音方向的开源模型库</h1><p><a href=\"https://github.com/PaddlePaddle/PaddleSpeech\">https://github.com/PaddlePaddle/PaddleSpeech</a></p>\n<h2 id=\"文本介绍-Docker-部署方式\"><a href=\"#文本介绍-Docker-部署方式\" class=\"headerlink\" title=\"文本介绍 Docker 部署方式\"></a>文本介绍 Docker 部署方式</h2><p>依赖环境介绍,docker 环境就不用担心这些：</p>\n<ul>\n<li>gcc &gt;&#x3D; 4.8.5</li>\n<li>paddlepaddle &lt;&#x3D; 2.5.1 桨桨 &lt;&#x3D; 2.5.1</li>\n<li>python &gt;&#x3D; 3.8 <br>自 2024 年 6 月以来 Docker Hub 访问不了，国内开源厂商镜像如清华等都宣布下架。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 设置 <span class=\"token function\">docker</span> mirrors\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span>  /etc/docker/daemon.json\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://registry.docker-cn.com\"</span>,\n        <span class=\"token string\">\"https://docker.mirrors.ustc.edu.cn\"</span>,\n        <span class=\"token string\">\"https://hub-mirror.c.163.com\"</span>,\n        <span class=\"token string\">\"https://mirror.baidubce.com\"</span>,\n        <span class=\"token string\">\"https://ccr.ccs.tencentyun.com\"</span>,\n        <span class=\"token string\">\"https://dockerhub.icu/\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\"># GPU版本</span>\n<span class=\"token function\">docker</span> pull paddlecloud/paddlespeech:develop-gpu-cuda10.2-cudnn7-latest\n<span class=\"token comment\"># CPU版本</span>\n<span class=\"token function\">docker</span> pull paddlecloud/paddlespeech:develop-cpu-latest\n<span class=\"token comment\"># 或者使用 docker search paddlespeech 搜索相关的镜像版本</span>\n<span class=\"token comment\"># 启动服务</span>\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> dev <span class=\"token parameter variable\">-v</span> <span class=\"token environment constant\">$PWD</span>:/mnt <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8888</span>:8888 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8090</span>:8090 <span class=\"token parameter variable\">-it</span> paddlecloud/paddlespeech:develop-cpu-latest  /bin/bash\n\n<span class=\"token comment\"># 自然语言处理工具库NLTK安装</span>\n<span class=\"token function\">docker</span> 镜像内的目录是 /root/nltk_data/\n可以将下载好的传输到服务器上复制到这个目录下如：cp <span class=\"token parameter variable\">-r</span> /mnt/nltk_data-gh-pages/packages/ /root/nltk_data/\nNLTK 数据下载： https://github.com/nltk/nltk_data/archive/refs/heads/gh-pages.zip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 设置 python pip \npip <span class=\"token function\">install</span> xxx <span class=\"token parameter variable\">-i</span> https://mirror.baidu.com/pypi/simple\nor \npip config <span class=\"token builtin class-name\">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>测试数据下载：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-c</span> https://paddlespeech.bj.bcebos.com/PaddleAudio/zh.wav\n<span class=\"token function\">wget</span> <span class=\"token parameter variable\">-c</span> https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>启动 WEB 服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">paddlespeech_server start <span class=\"token parameter variable\">--config_file</span> ./demos/speech_server/conf/application.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>识别语音命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">paddlespeech asr <span class=\"token parameter variable\">--lang</span> zh <span class=\"token parameter variable\">--input</span> zh.wav<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>文字转语音命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">paddlespeech tts <span class=\"token parameter variable\">--input</span> <span class=\"token string\">\"你好，欢迎使用百度飞桨深度学习框架！\"</span> <span class=\"token parameter variable\">--output</span> output.wav<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>其他命令请参考开源：<br><a href=\"https://github.com/PaddlePaddle/PaddleSpeech\">https://github.com/PaddlePaddle/PaddleSpeech</a></p>\n<p>docker 命令回顾</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看正在运行的 docker hub</span>\n<span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span>\n<span class=\"token comment\"># 进入一个正在运行的 docker hub</span>\n<span class=\"token function\">docker</span> attach 36e3553f6bb3\nor \n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> xxx /bin/bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Default",
                "PaddleSpeech"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2024/07/08/nginx-config-https/",
            "url": "https://gyoliu.github.io/2024/07/08/nginx-config-https/",
            "title": "https 证书自动续期，永久免费",
            "date_published": "2024-07-08T05:15:44.000Z",
            "content_html": "<h1 id=\"https-证书自动续期，永久免费\"><a href=\"#https-证书自动续期，永久免费\" class=\"headerlink\" title=\"https 证书自动续期，永久免费\"></a>https 证书自动续期，永久免费</h1><blockquote>\n<p>开源组织的免费证书：<a href=\"https://letsencrypt.org/zh-cn/\">https://letsencrypt.org/zh-cn/</a><br>Let’s Encrypt 和 <a href=\"https://tools.ietf.org/html/rfc8555\">ACME 协议</a>的目标是实现可信数字证书的自动获取，从而简化 HTTPS 服务器部署中的人工操作。 这一目标是由 Web 服务器上的证书管理软件完成的。</p>\n</blockquote>\n<h1 id=\"入门指南\"><a href=\"#入门指南\" class=\"headerlink\" title=\"入门指南\"></a>入门指南</h1><blockquote>\n<p>为了在您的网站上启用 HTTPS，您需要从证书颁发机构（CA）获取证书（一种文件）。 Let’s Encrypt 正是其中一家证书颁发机构。 要从 Let’s Encrypt 获取您网站域名的证书，您必须证明您对域名的实际控制权。 这一过程通常由 Web 主机上运行的 <a href=\"https://tools.ietf.org/html/rfc8555\">ACME 协议</a>客户端完成。</p>\n</blockquote>\n<blockquote>\n<p>申请证书的最佳方式取决于您是否具备服务器的<a href=\"https://en.wikipedia.org/wiki/Shell_account\">命令行访问权限</a>（也称为 SSH 权限）。 如果您仅使用控制面板（例如 <a href=\"https://cpanel.net/\">cPanel</a>、<a href=\"https://www.plesk.com/\">Plesk</a> 或 <a href=\"https://wordpress.org/\">WordPress</a>）管理您的网站，您很有可能没有命令行访问权限。 您可以联系您的托管服务提供商确认。</p>\n</blockquote>\n<h1 id=\"拥有命令行访问权限\"><a href=\"#拥有命令行访问权限\" class=\"headerlink\" title=\"拥有命令行访问权限\"></a>拥有命令行访问权限</h1><blockquote>\n<p>我们建议大多数具有命令行访问权限的人使用 <a href=\"https://certbot.eff.org/\">Certbot</a> ACME 客户端。 它可以在不下线您的服务器的前提下自动执行证书颁发和安装。 对于不需要自动配置的用户，Certbot 还提供专家模式。 它易于使用，适用于许多操作系统，并且具有出色的（注：英文）文档。 前往 <a href=\"https://certbot.eff.org/\">Certbot 官网</a>即可获取针对各类操作系统与服务器软件的使用说明。</p>\n</blockquote>\n<blockquote>\n<p>如果 <a href=\"https://certbot.eff.org/\">Certbot</a> 不能满足您的需求，或者您想尝试别的客户端，还有<a href=\"https://letsencrypt.org/zh-cn/docs/client-options/\">更多 ACME 客户端</a>可供选择。 选定 ACME 客户端软件后，请参阅该客户端的文档。</p>\n</blockquote>\n<blockquote>\n<p>如果您正在尝试不同的 ACME 客户端，请使用我们的<a href=\"https://letsencrypt.org/zh-cn/docs/staging-environment/\">临时环境</a>以避免遭到<a href=\"https://letsencrypt.org/zh-cn/docs/rate-limits/\">速率限制</a>。</p>\n</blockquote>\n<h1 id=\"实现了-ACME-协议的客户端，官方推荐如下：\"><a href=\"#实现了-ACME-协议的客户端，官方推荐如下：\" class=\"headerlink\" title=\"实现了 ACME 协议的客户端，官方推荐如下：\"></a>实现了 ACME 协议的客户端，官方推荐如下：</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;certbot.eff.org&#x2F;instructions?ws&#x3D;nginx&amp;os&#x3D;centosrhel7&amp;tab&#x3D;wildcard<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"阿里云-Centos-7-实现如下：\"><a href=\"#阿里云-Centos-7-实现如下：\" class=\"headerlink\" title=\"阿里云 Centos 7 实现如下：\"></a>阿里云 Centos 7 实现如下：</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">必备条件：\n<span class=\"token number\">1</span>. 安装阿里云 CLI 命令行工具，参考如下：\nhttps://help.aliyun.com/zh/cli/install-cli-on-linux?spm<span class=\"token operator\">=</span>a2c4g.11186623.0.0.5fd7606ftkgvZH\n<span class=\"token number\">2</span>. 安装证书生成 ACME 客户端 \nyum <span class=\"token function\">install</span> epel-release <span class=\"token parameter variable\">-y</span>\nyum <span class=\"token function\">install</span> certbot <span class=\"token parameter variable\">-y</span>\n<span class=\"token number\">3</span>. certbot 文档\nhttps://eff-certbot.readthedocs.io/en/latest/using.html<span class=\"token comment\">#nginx</span>\n<span class=\"token number\">4</span>. 阿里云自动续期脚本\nhttps://github.com/justjavac/certbot-dns-aliyun?tab<span class=\"token operator\">=</span>readme-ov-file\n<span class=\"token number\">5</span>. 成功后如下输出证书保存的路径，之后将 nginx 的证书配置指向该证书\n<span class=\"token number\">6</span>. 重要命令 - 申请证书\ncertbot certonly <span class=\"token parameter variable\">-d</span> *.example.com <span class=\"token parameter variable\">--manual</span> --preferred-challenges dns --manual-auth-hook <span class=\"token string\">\"alidns\"</span> --manual-cleanup-hook <span class=\"token string\">\"alidns clean\"</span>\n<span class=\"token number\">7</span>. 重要命令 - 续期\ncertbot renew <span class=\"token parameter variable\">--manual</span> --preferred-challenges dns --manual-auth-hook <span class=\"token string\">\"alidns\"</span> --manual-cleanup-hook <span class=\"token string\">\"alidns clean\"</span>\n<span class=\"token number\">8</span>. 重要命令 - 自动续期\n<span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-e</span>\n<span class=\"token number\">1</span> <span class=\"token number\">1</span> */1 * * root certbot renew <span class=\"token parameter variable\">--manual</span> --preferred-challenges dns --manual-auth-hook <span class=\"token string\">\"alidns\"</span> --manual-cleanup-hook <span class=\"token string\">\"alidns clean\"</span> --deploy-hook <span class=\"token string\">\"nginx -s reload\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：\"><a href=\"#alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：\" class=\"headerlink\" title=\"alidns脚本如下，作用动态添加阿里云 DNS 解析用来验证：\"></a>alidns<strong>脚本如下，作用动态添加阿里云 DNS 解析用来验证：</strong></h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token assign-left variable\">FLAG</span><span class=\"token operator\">=</span><span class=\"token string\">\"(\\.com\\.cn|\\.gov\\.cn|\\.net\\.cn|\\.org\\.cn|\\.ac\\.cn|\\.gd\\.cn)$\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token builtin class-name\">command</span> <span class=\"token parameter variable\">-v</span> aliyun <span class=\"token operator\">></span>/dev/null<span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"错误: 你需要先安装 aliyun 命令行工具 https://help.aliyun.com/document_detail/121541.html。\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token file-descriptor important\">&amp;2</span>\n\t<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> match <span class=\"token string\">\"<span class=\"token variable\">$CERTBOT_DOMAIN</span>\"</span> <span class=\"token string\">'.*\\.\\(.*\\..*\\)'</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">SUB_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> match <span class=\"token string\">\"<span class=\"token variable\">$CERTBOT_DOMAIN</span>\"</span> <span class=\"token string\">'\\(.*\\)\\..*\\..*'</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$CERTBOT_DOMAIN</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token parameter variable\">-q</span> <span class=\"token string\">\"<span class=\"token variable\">$FLAG</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\n  <span class=\"token assign-left variable\">DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> $CERTBOT_DOMAIN <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-oP</span> <span class=\"token string\">'(?&lt;=)[^.]+('</span>$FLAG<span class=\"token string\">')'</span><span class=\"token variable\">`</span></span>\n  <span class=\"token assign-left variable\">SUB_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> $CERTBOT_DOMAIN <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-oP</span> <span class=\"token string\">'.*(?=\\.[^.]+('</span>$FLAG<span class=\"token string\">'))'</span><span class=\"token variable\">`</span></span>\n\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$DOMAIN</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$CERTBOT_DOMAIN</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$SUB_DOMAIN</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">SUB_DOMAIN</span><span class=\"token operator\">=</span>.<span class=\"token variable\">$SUB_DOMAIN</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\taliyun alidns AddDomainRecord <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--DomainName</span> <span class=\"token variable\">$DOMAIN</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--RR</span> <span class=\"token string\">\"_acme-challenge\"</span><span class=\"token variable\">$SUB_DOMAIN</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--Type</span> <span class=\"token string\">\"TXT\"</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--Value</span> <span class=\"token variable\">$CERTBOT_VALIDATION</span>\n\t/bin/sleep <span class=\"token number\">20</span>\n<span class=\"token keyword\">else</span>\n\t<span class=\"token assign-left variable\">RecordId</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aliyun alidns DescribeDomainRecords <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--DomainName</span> $DOMAIN <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--RRKeyWord</span> <span class=\"token string\">\"_acme-challenge\"</span>$SUB_DOMAIN <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--Type</span> <span class=\"token string\">\"TXT\"</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--ValueKeyWord</span> $CERTBOT_VALIDATION <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"RecordId\"</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-Eo</span> <span class=\"token string\">\"[0-9]+\"</span><span class=\"token variable\">)</span></span>\n\n\taliyun alidns DeleteDomainRecord <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--RecordId</span> <span class=\"token variable\">$RecordId</span>\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Default",
                "证书",
                "nginx"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2022/03/02/idea-plugin/",
            "url": "https://gyoliu.github.io/2022/03/02/idea-plugin/",
            "title": "idea常用插件",
            "date_published": "2022-03-02T04:36:04.000Z",
            "content_html": "<ul>\n<li>alibaba java coding guidelines 代码规范</li>\n<li>git commit template git提交模板</li>\n<li>ide eval reset</li>\n<li>java bean to json</li>\n<li>SequenceDiagram 代码时序图</li>\n<li>SonarLint 代码规范</li>\n<li>Translation 翻译</li>\n<li>JRebel or XRebel 热部署</li>\n<li>RESTfultoolkit</li>\n<li>MyBatisCodeHelper-Pro</li>\n</ul>\n",
            "tags": [
                "Default"
            ]
        },
        {
            "id": "https://gyoliu.github.io/2020/09/08/browser-cookies-SameSite-attribute/",
            "url": "https://gyoliu.github.io/2020/09/08/browser-cookies-SameSite-attribute/",
            "title": "浏览器 SameSite 属性设置",
            "date_published": "2020-09-08T08:58:59.000Z",
            "content_html": "<h3 id=\"1-起因\"><a href=\"#1-起因\" class=\"headerlink\" title=\"1. 起因\"></a>1. 起因</h3><p>Chrome 51 开始，浏览器的 Cookie 新增加了一个SameSite属性，用来防止 CSRF 攻击和用户追踪。<br>Chrome 浏览器版本从 80 版后 默认是将 Cookie 设置成 Lax</p>\n<h3 id=\"2-SameSite-属性值\"><a href=\"#2-SameSite-属性值\" class=\"headerlink\" title=\"2. SameSite 属性值\"></a>2. SameSite 属性值</h3><ul>\n<li>Strict</li>\n<li>Lax</li>\n<li>None<blockquote>\n<p>Strict最为严格，完全禁止第三方 Cookie，跨站点时，任何情况下都不会发送 Cookie。换言之，只有当前网页的 URL 与请求目标一致，才会带上 Cookie。Lax规则稍稍放宽，大多数情况也是不发送第三方 Cookie，但是导航到目标网址的 Get 请求除外。</p>\n</blockquote>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>请求类型</th>\n<th>示例</th>\n<th>正常情况</th>\n<th>Lax</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>链接</td>\n<td>《a href&#x3D;”…”&gt;</td>\n<td>发送 Cookie</td>\n<td>发送 Cookie</td>\n</tr>\n<tr>\n<td>预加载</td>\n<td>《link rel&#x3D;”prerender” href&#x3D;”…”&#x2F;&gt;</td>\n<td>发送 Cookie</td>\n<td>发送 Cookie</td>\n</tr>\n<tr>\n<td>GET 表单</td>\n<td>《form method&#x3D;”GET” action&#x3D;”…”&gt;</td>\n<td>发送Cookie</td>\n<td>发送 Cookie</td>\n</tr>\n<tr>\n<td>POST 表单</td>\n<td>《form method&#x3D;”POST” action&#x3D;”…”&gt;</td>\n<td>发送 Cookie</td>\n<td>不发送</td>\n</tr>\n<tr>\n<td>iframe</td>\n<td>《iframe src&#x3D;”…”&gt;</td>\n<td>发送 Cookie</td>\n<td>不发送</td>\n</tr>\n<tr>\n<td>AJAX</td>\n<td>$.get(“…”)</td>\n<td>发送 Cookie</td>\n<td>不发送</td>\n</tr>\n<tr>\n<td>Image</td>\n<td>《img src&#x3D;”…”》</td>\n<td>发送 Cookie</td>\n<td>不发送</td>\n</tr>\n</tbody></table>\n<p>Chrome 计划将Lax变为默认设置。这时，网站可以选择显式关闭SameSite属性，<strong>将其设为None。不过，前提是必须同时设置Secure属性（Cookie 只能通过 HTTPS 协议发送），否则无效。</strong></p>\n<pre class=\"line-numbers language-language\" data-language=\"language\"><code class=\"language-language\">下面的设置无效。\nSet-Cookie: widget_session&#x3D;abc123; SameSite&#x3D;None\n下面的设置有效。\nSet-Cookie: widget_session&#x3D;abc123; SameSite&#x3D;None; Secure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-该用哪种模式？\"><a href=\"#3-该用哪种模式？\" class=\"headerlink\" title=\"3. 该用哪种模式？\"></a>3. 该用哪种模式？</h3><p>假如你的网站有用 iframe 形式嵌在别的网站里的需求，那么连 Lax 你也不能用，因为 iframe 请求也是一种异步请求。或者假如别的网站有使用你的网站的 JSONP 接口，那么同样 Lax 你也不能用，比如天猫就是通过淘宝的 JSONP 接口来判断用户是否登录的。</p>\n<p>有时安全性和灵活性就是矛盾的，需要取舍。具体判断参照上面表格设置。</p>\n<h3 id=\"4-解决方案\"><a href=\"#4-解决方案\" class=\"headerlink\" title=\"4. 解决方案\"></a>4. 解决方案</h3><h4 id=\"4-1-方案1\"><a href=\"#4-1-方案1\" class=\"headerlink\" title=\"4.1 方案1\"></a>4.1 方案1</h4><ol>\n<li>在chrome浏览器地址栏输入<a href=\"chrome://flags并回车\">chrome://flags并回车</a></li>\n<li>在搜索栏中输入SameSite by default cookies搜索，并禁用如图中的两项设置，改为Disabled即可</li>\n<li>重启浏览器</li>\n</ol>\n<h4 id=\"4-2-方案2\"><a href=\"#4-2-方案2\" class=\"headerlink\" title=\"4.2 方案2\"></a>4.2 方案2</h4><p>如果使用的是 iframe 方式最好设置<br>X-Frame-OptionsHTTP 响应报头可以被用来指示一个浏览器是否应该被允许在一个以呈现页面《frame》，《iframe》或《object》标签。通过确保其内容未嵌入其他网站，网站可以使用此功能来避免 点击劫持 攻击。</p>\n<pre class=\"line-numbers language-language\" data-language=\"language\"><code class=\"language-language\">apache 配置\nHeader always append X-Frame-Options DENY\nHeader set X-Frame-Options &quot;ALLOW-FROM https:&#x2F;&#x2F;example.com&#x2F;&quot;\n\nHeader always edit Set-Cookie &quot;path&#x3D;&#x2F;&quot; &quot;path&#x3D;&#x2F;;  Secure; HttpOnly; SameSite&#x3D;None;&quot; \n\n#apache2.4 官方文档\n#http:&#x2F;&#x2F;httpd.apache.org&#x2F;docs&#x2F;2.4&#x2F;mod&#x2F;mod_session_cookie.html\n#http:&#x2F;&#x2F;httpd.apache.org&#x2F;docs&#x2F;2.4&#x2F;mod&#x2F;mod_usertrack.html\n\n\nNginx 配置\nadd_header X-Frame-Options ALLOWALL; #允许所有域名iframe\nadd_header X-Frame-Options DENY; #不允许任何域名iframe,包括相同的域名\nadd_header X-Frame-Options SANEORIGIN; #允许相同域名iframe,如a.test.com允许b.test.com\nadd_header X-Frame-Options ALLOW-FROM uri; #允许指定域名iframe 多个用逗号分隔\n# 只支持 proxy 模式下设置\nproxy_cookie_path &#x2F; &quot;&#x2F;; httponly; secure; SameSite&#x3D;None&quot;;\n\n#http:&#x2F;&#x2F;nginx.org&#x2F;en&#x2F;docs&#x2F;http&#x2F;ngx_http_proxy_module.html#proxy_cookie_path<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "Default"
            ]
        }
    ]
}