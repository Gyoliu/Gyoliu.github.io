{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gyo • All posts by \"证书\" tag",
    "description": "Gyo的博客",
    "home_page_url": "https://gyoliu.github.io",
    "items": [
        {
            "id": "https://gyoliu.github.io/2024/07/08/nginx-config-https/",
            "url": "https://gyoliu.github.io/2024/07/08/nginx-config-https/",
            "title": "https 证书自动续期，永久免费",
            "date_published": "2024-07-08T05:15:44.000Z",
            "content_html": "<h1 id=\"https-证书自动续期，永久免费\"><a href=\"#https-证书自动续期，永久免费\" class=\"headerlink\" title=\"https 证书自动续期，永久免费\"></a>https 证书自动续期，永久免费</h1><blockquote>\n<p>开源组织的免费证书：<a href=\"https://letsencrypt.org/zh-cn/\">https://letsencrypt.org/zh-cn/</a><br>Let’s Encrypt 和 <a href=\"https://tools.ietf.org/html/rfc8555\">ACME 协议</a>的目标是实现可信数字证书的自动获取，从而简化 HTTPS 服务器部署中的人工操作。 这一目标是由 Web 服务器上的证书管理软件完成的。</p>\n</blockquote>\n<h1 id=\"入门指南\"><a href=\"#入门指南\" class=\"headerlink\" title=\"入门指南\"></a>入门指南</h1><blockquote>\n<p>为了在您的网站上启用 HTTPS，您需要从证书颁发机构（CA）获取证书（一种文件）。 Let’s Encrypt 正是其中一家证书颁发机构。 要从 Let’s Encrypt 获取您网站域名的证书，您必须证明您对域名的实际控制权。 这一过程通常由 Web 主机上运行的 <a href=\"https://tools.ietf.org/html/rfc8555\">ACME 协议</a>客户端完成。</p>\n</blockquote>\n<blockquote>\n<p>申请证书的最佳方式取决于您是否具备服务器的<a href=\"https://en.wikipedia.org/wiki/Shell_account\">命令行访问权限</a>（也称为 SSH 权限）。 如果您仅使用控制面板（例如 <a href=\"https://cpanel.net/\">cPanel</a>、<a href=\"https://www.plesk.com/\">Plesk</a> 或 <a href=\"https://wordpress.org/\">WordPress</a>）管理您的网站，您很有可能没有命令行访问权限。 您可以联系您的托管服务提供商确认。</p>\n</blockquote>\n<h1 id=\"拥有命令行访问权限\"><a href=\"#拥有命令行访问权限\" class=\"headerlink\" title=\"拥有命令行访问权限\"></a>拥有命令行访问权限</h1><blockquote>\n<p>我们建议大多数具有命令行访问权限的人使用 <a href=\"https://certbot.eff.org/\">Certbot</a> ACME 客户端。 它可以在不下线您的服务器的前提下自动执行证书颁发和安装。 对于不需要自动配置的用户，Certbot 还提供专家模式。 它易于使用，适用于许多操作系统，并且具有出色的（注：英文）文档。 前往 <a href=\"https://certbot.eff.org/\">Certbot 官网</a>即可获取针对各类操作系统与服务器软件的使用说明。</p>\n</blockquote>\n<blockquote>\n<p>如果 <a href=\"https://certbot.eff.org/\">Certbot</a> 不能满足您的需求，或者您想尝试别的客户端，还有<a href=\"https://letsencrypt.org/zh-cn/docs/client-options/\">更多 ACME 客户端</a>可供选择。 选定 ACME 客户端软件后，请参阅该客户端的文档。</p>\n</blockquote>\n<blockquote>\n<p>如果您正在尝试不同的 ACME 客户端，请使用我们的<a href=\"https://letsencrypt.org/zh-cn/docs/staging-environment/\">临时环境</a>以避免遭到<a href=\"https://letsencrypt.org/zh-cn/docs/rate-limits/\">速率限制</a>。</p>\n</blockquote>\n<h1 id=\"实现了-ACME-协议的客户端，官方推荐如下：\"><a href=\"#实现了-ACME-协议的客户端，官方推荐如下：\" class=\"headerlink\" title=\"实现了 ACME 协议的客户端，官方推荐如下：\"></a>实现了 ACME 协议的客户端，官方推荐如下：</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;certbot.eff.org&#x2F;instructions?ws&#x3D;nginx&amp;os&#x3D;centosrhel7&amp;tab&#x3D;wildcard<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"阿里云-Centos-7-实现如下：\"><a href=\"#阿里云-Centos-7-实现如下：\" class=\"headerlink\" title=\"阿里云 Centos 7 实现如下：\"></a>阿里云 Centos 7 实现如下：</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">必备条件：\n<span class=\"token number\">1</span>. 安装阿里云 CLI 命令行工具，参考如下：\nhttps://help.aliyun.com/zh/cli/install-cli-on-linux?spm<span class=\"token operator\">=</span>a2c4g.11186623.0.0.5fd7606ftkgvZH\n<span class=\"token number\">2</span>. 安装证书生成 ACME 客户端 \nyum <span class=\"token function\">install</span> epel-release <span class=\"token parameter variable\">-y</span>\nyum <span class=\"token function\">install</span> certbot <span class=\"token parameter variable\">-y</span>\n<span class=\"token number\">3</span>. certbot 文档\nhttps://eff-certbot.readthedocs.io/en/latest/using.html<span class=\"token comment\">#nginx</span>\n<span class=\"token number\">4</span>. 阿里云自动续期脚本\nhttps://github.com/justjavac/certbot-dns-aliyun?tab<span class=\"token operator\">=</span>readme-ov-file\n<span class=\"token number\">5</span>. 成功后如下输出证书保存的路径，之后将 nginx 的证书配置指向该证书\n<span class=\"token number\">6</span>. 重要命令 - 申请证书\ncertbot certonly <span class=\"token parameter variable\">-d</span> *.example.com <span class=\"token parameter variable\">--manual</span> --preferred-challenges dns --manual-auth-hook <span class=\"token string\">\"alidns\"</span> --manual-cleanup-hook <span class=\"token string\">\"alidns clean\"</span>\n<span class=\"token number\">7</span>. 重要命令 - 续期\ncertbot renew <span class=\"token parameter variable\">--manual</span> --preferred-challenges dns --manual-auth-hook <span class=\"token string\">\"alidns\"</span> --manual-cleanup-hook <span class=\"token string\">\"alidns clean\"</span>\n<span class=\"token number\">8</span>. 重要命令 - 自动续期\n<span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-e</span>\n<span class=\"token number\">1</span> <span class=\"token number\">1</span> */1 * * root certbot renew <span class=\"token parameter variable\">--manual</span> --preferred-challenges dns --manual-auth-hook <span class=\"token string\">\"alidns\"</span> --manual-cleanup-hook <span class=\"token string\">\"alidns clean\"</span> --deploy-hook <span class=\"token string\">\"nginx -s reload\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：\"><a href=\"#alidns脚本如下，作用动态添加阿里云-DNS-解析用来验证：\" class=\"headerlink\" title=\"alidns脚本如下，作用动态添加阿里云 DNS 解析用来验证：\"></a>alidns<strong>脚本如下，作用动态添加阿里云 DNS 解析用来验证：</strong></h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token assign-left variable\">FLAG</span><span class=\"token operator\">=</span><span class=\"token string\">\"(\\.com\\.cn|\\.gov\\.cn|\\.net\\.cn|\\.org\\.cn|\\.ac\\.cn|\\.gd\\.cn)$\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token builtin class-name\">command</span> <span class=\"token parameter variable\">-v</span> aliyun <span class=\"token operator\">></span>/dev/null<span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"错误: 你需要先安装 aliyun 命令行工具 https://help.aliyun.com/document_detail/121541.html。\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token file-descriptor important\">&amp;2</span>\n\t<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> match <span class=\"token string\">\"<span class=\"token variable\">$CERTBOT_DOMAIN</span>\"</span> <span class=\"token string\">'.*\\.\\(.*\\..*\\)'</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">SUB_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> match <span class=\"token string\">\"<span class=\"token variable\">$CERTBOT_DOMAIN</span>\"</span> <span class=\"token string\">'\\(.*\\)\\..*\\..*'</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$CERTBOT_DOMAIN</span> <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token parameter variable\">-q</span> <span class=\"token string\">\"<span class=\"token variable\">$FLAG</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\n  <span class=\"token assign-left variable\">DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> $CERTBOT_DOMAIN <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-oP</span> <span class=\"token string\">'(?&lt;=)[^.]+('</span>$FLAG<span class=\"token string\">')'</span><span class=\"token variable\">`</span></span>\n  <span class=\"token assign-left variable\">SUB_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> $CERTBOT_DOMAIN <span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-oP</span> <span class=\"token string\">'.*(?=\\.[^.]+('</span>$FLAG<span class=\"token string\">'))'</span><span class=\"token variable\">`</span></span>\n\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$DOMAIN</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$CERTBOT_DOMAIN</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$SUB_DOMAIN</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">SUB_DOMAIN</span><span class=\"token operator\">=</span>.<span class=\"token variable\">$SUB_DOMAIN</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\taliyun alidns AddDomainRecord <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--DomainName</span> <span class=\"token variable\">$DOMAIN</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--RR</span> <span class=\"token string\">\"_acme-challenge\"</span><span class=\"token variable\">$SUB_DOMAIN</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--Type</span> <span class=\"token string\">\"TXT\"</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--Value</span> <span class=\"token variable\">$CERTBOT_VALIDATION</span>\n\t/bin/sleep <span class=\"token number\">20</span>\n<span class=\"token keyword\">else</span>\n\t<span class=\"token assign-left variable\">RecordId</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aliyun alidns DescribeDomainRecords <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--DomainName</span> $DOMAIN <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--RRKeyWord</span> <span class=\"token string\">\"_acme-challenge\"</span>$SUB_DOMAIN <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--Type</span> <span class=\"token string\">\"TXT\"</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--ValueKeyWord</span> $CERTBOT_VALIDATION <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"RecordId\"</span> <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-Eo</span> <span class=\"token string\">\"[0-9]+\"</span><span class=\"token variable\">)</span></span>\n\n\taliyun alidns DeleteDomainRecord <span class=\"token punctuation\">\\</span>\n\t\t<span class=\"token parameter variable\">--RecordId</span> <span class=\"token variable\">$RecordId</span>\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "Default",
                "证书",
                "nginx"
            ]
        }
    ]
}